VERSION 5.00
Object = "{C932BA88-4374-101B-A56C-00AA003668DC}#1.1#0"; "MSMASK32.ocx"
Object = "{BDC217C8-ED16-11CD-956C-0000C04E4C0A}#1.1#0"; "tabctl32.ocx"
Object = "{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1}#2.0#0"; "MSCOMCT2.ocx"
Object = "{935C9182-411B-4FFB-9512-97C8745743BC}#2.5#0"; "AResize.ocx"
Object = "{8CA2526B-1F1A-4012-A04D-56C1849DD6A6}#1.5#0"; "DrawSuite2014.ocx"
Object = "{831FDD16-0C5C-11D2-A9FC-0000F8754DA1}#2.2#0"; "MSCOMCTL.ocx"
Begin VB.Form frmFaturamento_Prod_Serv_GNFe 
   BackColor       =   &H00E0E0E0&
   Caption         =   "Administrativo - Faturamento - Nota fiscal"
   ClientHeight    =   10035
   ClientLeft      =   1785
   ClientTop       =   1665
   ClientWidth     =   15360
   ControlBox      =   0   'False
   BeginProperty Font 
      Name            =   "Tahoma"
      Size            =   8.25
      Charset         =   0
      Weight          =   400
      Underline       =   0   'False
      Italic          =   0   'False
      Strikethrough   =   0   'False
   EndProperty
   Icon            =   "frmFaturamento_Prod_serv_GNFe.frx":0000
   KeyPreview      =   -1  'True
   LinkTopic       =   "Form1"
   LockControls    =   -1  'True
   MDIChild        =   -1  'True
   Moveable        =   0   'False
   NegotiateMenus  =   0   'False
   ScaleHeight     =   10035
   ScaleWidth      =   15360
   WindowState     =   2  'Maximizado
   Begin ActiveResizeCtl.ActiveResize ActiveResize1 
      Left            =   0
      Top             =   0
      _ExtentX        =   847
      _ExtentY        =   847
      Resolution      =   99
      ScreenHeight    =   768
      ScreenWidth     =   1360
      ScreenHeightDT  =   1080
      ScreenWidthDT   =   1920
      AutoResizeOnLoad=   0   'False
      ApplicationName =   "Active Resize Control Professional"
      FormHeightDT    =   10500
      FormWidthDT     =   15480
      FormScaleHeightDT=   10035
      FormScaleWidthDT=   15360
      ResizeFormBackground=   -1  'True
      ResizePictureBoxContents=   -1  'True
   End
   Begin VB.ComboBox cmbReferenciaserv 
      Appearance      =   0  'Flat
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00000000&
      Height          =   330
      Left            =   2730
      Style           =   2  'Dropdown List
      TabIndex        =   148
      ToolTipText     =   "Código de referência."
      Top             =   1700
      Visible         =   0   'False
      Width           =   1575
   End
   Begin VB.ComboBox Cmb_empresa 
      BackColor       =   &H00FFFFFF&
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00000000&
      Height          =   330
      ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":1042
      Left            =   240
      List            =   "frmFaturamento_Prod_serv_GNFe.frx":1044
      Locked          =   -1  'True
      Sorted          =   -1  'True
      Style           =   2  'Dropdown List
      TabIndex        =   28
      TabStop         =   0   'False
      ToolTipText     =   "Empresa."
      Top             =   1545
      Visible         =   0   'False
      Width           =   5055
   End
   Begin VB.ComboBox cmbReferencia 
      Appearance      =   0  'Flat
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00000000&
      Height          =   330
      Left            =   2610
      Style           =   2  'Dropdown List
      TabIndex        =   86
      ToolTipText     =   "Código de referencia."
      Top             =   1700
      Visible         =   0   'False
      Width           =   1575
   End
   Begin TabDlg.SSTab SSFaturamento 
      Height          =   10035
      Left            =   0
      TabIndex        =   168
      Top             =   0
      Width           =   15360
      _ExtentX        =   27093
      _ExtentY        =   17701
      _Version        =   393216
      Tabs            =   7
      Tab             =   1
      TabsPerRow      =   7
      TabHeight       =   520
      BackColor       =   14737632
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Tahoma"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      TabCaption(0)   =   "Carteira de fatur."
      TabPicture(0)   =   "frmFaturamento_Prod_serv_GNFe.frx":1046
      Tab(0).ControlEnabled=   0   'False
      Tab(0).Control(0)=   "Lista_carteira_faturar"
      Tab(0).Control(1)=   "Frame1(23)"
      Tab(0).Control(2)=   "Frame1(25)"
      Tab(0).Control(3)=   "Lista_carteira"
      Tab(0).Control(4)=   "USToolBar8"
      Tab(0).Control(5)=   "PBLista(5)"
      Tab(0).Control(6)=   "USToolBar7"
      Tab(0).Control(7)=   "Frame1(27)"
      Tab(0).ControlCount=   8
      TabCaption(1)   =   "Dados principais"
      TabPicture(1)   =   "frmFaturamento_Prod_serv_GNFe.frx":1062
      Tab(1).ControlEnabled=   -1  'True
      Tab(1).Control(0)=   "Frame1(28)"
      Tab(1).Control(0).Enabled=   0   'False
      Tab(1).Control(1)=   "Frame1(8)"
      Tab(1).Control(1).Enabled=   0   'False
      Tab(1).Control(2)=   "Frame1(21)"
      Tab(1).Control(2).Enabled=   0   'False
      Tab(1).Control(3)=   "USToolBar1"
      Tab(1).Control(3).Enabled=   0   'False
      Tab(1).Control(4)=   "ListaNota"
      Tab(1).Control(4).Enabled=   0   'False
      Tab(1).Control(5)=   "PBLista(0)"
      Tab(1).Control(5).Enabled=   0   'False
      Tab(1).Control(6)=   "Frame1(2)"
      Tab(1).Control(6).Enabled=   0   'False
      Tab(1).Control(7)=   "Frame1(1)"
      Tab(1).Control(7).Enabled=   0   'False
      Tab(1).Control(8)=   "Frame1(29)"
      Tab(1).Control(8).Enabled=   0   'False
      Tab(1).Control(9)=   "txtID_cobranca"
      Tab(1).Control(9).Enabled=   0   'False
      Tab(1).Control(10)=   "Frame1(7)"
      Tab(1).Control(10).Enabled=   0   'False
      Tab(1).Control(11)=   "Frame1(6)"
      Tab(1).Control(11).Enabled=   0   'False
      Tab(1).ControlCount=   12
      TabCaption(2)   =   "Lista de produtos"
      TabPicture(2)   =   "frmFaturamento_Prod_serv_GNFe.frx":107E
      Tab(2).ControlEnabled=   0   'False
      Tab(2).Control(0)=   "Frame1(30)"
      Tab(2).Control(1)=   "Frame1(10)"
      Tab(2).Control(2)=   "Frame1(9)"
      Tab(2).Control(3)=   "Frame1(11)"
      Tab(2).Control(4)=   "txtidproduto"
      Tab(2).Control(5)=   "Txt_IDestoque"
      Tab(2).Control(6)=   "USToolBar2"
      Tab(2).Control(7)=   "ListaProdutos"
      Tab(2).ControlCount=   8
      TabCaption(3)   =   "Lista de serviços"
      TabPicture(3)   =   "frmFaturamento_Prod_serv_GNFe.frx":109A
      Tab(3).ControlEnabled=   0   'False
      Tab(3).Control(0)=   "ListaServicos"
      Tab(3).Control(1)=   "PBLista(2)"
      Tab(3).Control(2)=   "txtidservico"
      Tab(3).Control(3)=   "Frame1(14)"
      Tab(3).Control(4)=   "USToolBar3"
      Tab(3).Control(5)=   "Frame1(12)"
      Tab(3).ControlCount=   6
      TabCaption(4)   =   "Dados transporte"
      TabPicture(4)   =   "frmFaturamento_Prod_serv_GNFe.frx":10B6
      Tab(4).ControlEnabled=   0   'False
      Tab(4).Control(0)=   "Frame1(15)"
      Tab(4).Control(1)=   "txtidinttransp"
      Tab(4).Control(2)=   "lst_DadosTransp"
      Tab(4).Control(3)=   "USToolBar4"
      Tab(4).Control(4)=   "PBLista(3)"
      Tab(4).ControlCount=   5
      TabCaption(5)   =   "Dados adicionais"
      TabPicture(5)   =   "frmFaturamento_Prod_serv_GNFe.frx":10D2
      Tab(5).ControlEnabled=   0   'False
      Tab(5).Control(0)=   "USToolBar5"
      Tab(5).Control(1)=   "Frame1(17)"
      Tab(5).Control(2)=   "Frame1(16)"
      Tab(5).ControlCount=   3
      TabCaption(6)   =   "Duplicatas"
      TabPicture(6)   =   "frmFaturamento_Prod_serv_GNFe.frx":10EE
      Tab(6).ControlEnabled=   0   'False
      Tab(6).Control(0)=   "lst_Duplicata"
      Tab(6).Control(1)=   "PBLista(4)"
      Tab(6).Control(2)=   "USToolBar6"
      Tab(6).Control(3)=   "Frame1(18)"
      Tab(6).Control(4)=   "Txt_ID_duplicata"
      Tab(6).ControlCount=   5
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         ForeColor       =   &H00000000&
         Height          =   615
         Index           =   30
         Left            =   -74910
         TabIndex        =   307
         Top             =   7080
         Width           =   15195
         Begin VB.ComboBox Cmb_opcao_lista_Produtos 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   300
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":110A
            Left            =   13050
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":1111
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   124
            TabStop         =   0   'False
            Top             =   187
            Width           =   1965
         End
         Begin DrawSuite2014.USProgressBar PBLista 
            Height          =   255
            Index           =   1
            Left            =   180
            TabIndex        =   309
            Top             =   210
            Width           =   11355
            _ExtentX        =   20029
            _ExtentY        =   450
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor2      =   0
            SearchText      =   ""
            Value           =   0
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Operação da lista"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   35
            Left            =   11700
            TabIndex        =   308
            Top             =   240
            Width           =   1260
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Height          =   795
         Index           =   10
         Left            =   -74925
         TabIndex        =   304
         Top             =   7710
         Width           =   15195
         Begin VB.TextBox txtBCICMSSN 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   8850
            MaxLength       =   20
            TabIndex        =   127
            ToolTipText     =   "Valor da base de cálculo do ICMS do simples nacional."
            Top             =   300
            Width           =   1095
         End
         Begin VB.TextBox txtValorICMSSN 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   12510
            Locked          =   -1  'True
            MaxLength       =   20
            TabIndex        =   129
            TabStop         =   0   'False
            ToolTipText     =   "Valor do ICMS simples nacional."
            Top             =   300
            Width           =   1215
         End
         Begin VB.CommandButton Cmd_salvar_ICMS_SN 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   13710
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":111E
            Style           =   1  'Graphical
            TabIndex        =   130
            ToolTipText     =   "Salvar valor da mão de obra aplicada e crédito do ICMS simples nacional (F9)"
            Top             =   300
            Width           =   315
         End
         Begin VB.TextBox txtICMSSN 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11580
            Locked          =   -1  'True
            MaxLength       =   20
            TabIndex        =   128
            ToolTipText     =   "Alíquota do ICMS simples nacional."
            Top             =   300
            Width           =   615
         End
         Begin VB.TextBox txtVLRMOA 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   6180
            MaxLength       =   20
            TabIndex        =   126
            ToolTipText     =   "Valor da mão de obra aplicada."
            Top             =   300
            Width           =   1095
         End
         Begin VB.TextBox txtVLRMPA 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2640
            Locked          =   -1  'True
            MaxLength       =   20
            TabIndex        =   125
            TabStop         =   0   'False
            ToolTipText     =   "Valor da matéria prima aplicada."
            Top             =   300
            Width           =   1095
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "%"
            Height          =   195
            Index           =   87
            Left            =   12270
            TabIndex        =   366
            Top             =   330
            Width           =   165
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Crédito ICMS do SN :"
            Height          =   195
            Index           =   86
            Left            =   9990
            TabIndex        =   365
            Top             =   330
            Width           =   1515
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Valor BC ICMS SN :"
            Height          =   195
            Index           =   85
            Left            =   7410
            TabIndex        =   364
            Top             =   330
            Width           =   1365
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Valor da mão de obra aplicada :"
            Height          =   195
            Index           =   84
            Left            =   3870
            TabIndex        =   363
            Top             =   330
            Width           =   2265
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Valor da matéria prima aplicada :"
            Height          =   195
            Index           =   33
            Left            =   210
            TabIndex        =   305
            Top             =   330
            Width           =   2340
         End
      End
      Begin MSComctlLib.ListView ListaServicos 
         Height          =   6105
         Left            =   -74925
         TabIndex        =   165
         Top             =   2685
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   10769
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         Checkboxes      =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         SmallIcons      =   "ImageList1"
         ForeColor       =   -2147483641
         BackColor       =   16777215
         Appearance      =   1
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   13
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "N"
            Object.Width           =   529
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   1
            Object.Tag             =   "T"
            Text            =   "Cód. interno"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   2
            Object.Tag             =   "T"
            Text            =   "CFOP"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   3
            Object.Tag             =   "T"
            Text            =   "Descrição"
            Object.Width           =   7152
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   4
            Object.Tag             =   "T"
            Text            =   "Un. est."
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   5
            Object.Tag             =   "T"
            Text            =   "Un. com."
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   6
            Object.Tag             =   "N"
            Text            =   "Qtde."
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   7
            Object.Tag             =   "N"
            Text            =   "Vlr. unit."
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(9) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   8
            Object.Tag             =   "N"
            Text            =   "Vlr. total"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(10) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   9
            Object.Tag             =   "N"
            Text            =   "ISSQN"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(11) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   10
            Object.Tag             =   "N"
            Text            =   "Vlr. ISS"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(12) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   11
            Object.Tag             =   "N"
            Text            =   "Ordem"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(13) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   12
            Object.Tag             =   "T"
            Text            =   "Ped. cliente"
            Object.Width           =   2646
         EndProperty
      End
      Begin DrawSuite2014.USProgressBar PBLista 
         Height          =   255
         Index           =   2
         Left            =   -74925
         TabIndex        =   237
         Top             =   8805
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   450
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor2      =   0
         SearchText      =   ""
         Value           =   0
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         ForeColor       =   &H00000000&
         Height          =   615
         Index           =   27
         Left            =   -74925
         TabIndex        =   276
         Top             =   9090
         Width           =   15195
         Begin VB.TextBox txtPagIr 
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Index           =   0
            Left            =   9540
            TabIndex        =   11
            ToolTipText     =   "Número da página."
            Top             =   180
            Width           =   555
         End
         Begin VB.TextBox txtNreg 
            Alignment       =   2  'Centralizar
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Index           =   0
            Left            =   3750
            TabIndex        =   10
            Text            =   "30"
            ToolTipText     =   "Número de registros por página."
            Top             =   180
            Width           =   555
         End
         Begin DrawSuite2014.USButton cmdPagProx 
            Height          =   315
            Index           =   0
            Left            =   11760
            TabIndex        =   15
            ToolTipText     =   "Próxima página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmFaturamento_Prod_serv_GNFe.frx":1171
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2014.USButton cmdPagAnt 
            Height          =   315
            Index           =   0
            Left            =   11220
            TabIndex        =   14
            ToolTipText     =   "Página anterior."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmFaturamento_Prod_serv_GNFe.frx":4915
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2014.USButton cmdPagIr 
            Height          =   315
            Index           =   0
            Left            =   10110
            TabIndex        =   12
            Top             =   180
            Width           =   465
            _ExtentX        =   820
            _ExtentY        =   556
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            Caption         =   "Ir"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2014.USButton cmdPagPrim 
            Height          =   315
            Index           =   0
            Left            =   10680
            TabIndex        =   13
            ToolTipText     =   "Primeira página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmFaturamento_Prod_serv_GNFe.frx":841E
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2014.USButton cmdPagUlt 
            Height          =   315
            Index           =   0
            Left            =   12300
            TabIndex        =   16
            ToolTipText     =   "Última página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmFaturamento_Prod_serv_GNFe.frx":C50D
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin VB.Label Label2 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "registros por página"
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   4380
            TabIndex        =   313
            Top             =   240
            Width           =   1440
         End
         Begin VB.Label lblPaginas 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Página: 0 de: 0"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   0
            Left            =   13050
            TabIndex        =   279
            Top             =   240
            Width           =   1095
         End
         Begin VB.Label lblRegistros 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Nº de registros: 0"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   0
            Left            =   180
            TabIndex        =   278
            Top             =   240
            Width           =   1275
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Carregar"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   22
            Left            =   3060
            TabIndex        =   277
            Top             =   240
            Width           =   645
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Enabled         =   0   'False
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   9
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000007&
         Height          =   3675
         Index           =   6
         Left            =   75
         TabIndex        =   268
         Top             =   2040
         Width           =   15195
         Begin VB.ComboBox cmbEntrega 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":FD99
            Left            =   195
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":FD9B
            Style           =   2  'Dropdown List
            TabIndex        =   423
            ToolTipText     =   "Endereço de entrega."
            Top             =   2640
            Width           =   8595
         End
         Begin VB.ComboBox Cmb_consumidor 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":FD9D
            Left            =   4440
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":FDA7
            Style           =   2  'Dropdown List
            TabIndex        =   64
            ToolTipText     =   "Operação com consumidor final."
            Top             =   2055
            Width           =   2430
         End
         Begin VB.TextBox Txt_obs 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   1500
            Left            =   8880
            MaxLength       =   5000
            MultiLine       =   -1  'True
            ScrollBars      =   2  'Vertical
            TabIndex        =   69
            ToolTipText     =   "Observações/motivo do cancelamento."
            Top             =   2055
            Width           =   6135
         End
         Begin VB.ComboBox cmbFinalidade_emissao 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":FDBD
            Left            =   195
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":FDD0
            Style           =   2  'Dropdown List
            TabIndex        =   63
            ToolTipText     =   "Finalidade de emissão."
            Top             =   2055
            Width           =   4230
         End
         Begin VB.TextBox txtid 
            Alignment       =   2  'Centralizar
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            TabIndex        =   38
            TabStop         =   0   'False
            ToolTipText     =   "Ordemd de faturamento."
            Top             =   385
            Width           =   915
         End
         Begin VB.TextBox txtDtValidacao 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   6330
            Locked          =   -1  'True
            TabIndex        =   45
            TabStop         =   0   'False
            ToolTipText     =   "Data e hora da validação."
            Top             =   390
            Width           =   2025
         End
         Begin VB.TextBox txtRespValidacao 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   8370
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   46
            TabStop         =   0   'False
            ToolTipText     =   "Responsável pela validação."
            Top             =   390
            Width           =   4320
         End
         Begin VB.TextBox txt_Razao 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5220
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   53
            TabStop         =   0   'False
            ToolTipText     =   "Destinatário."
            Top             =   930
            Width           =   8940
         End
         Begin VB.TextBox txtIDcliente 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   4350
            Locked          =   -1  'True
            TabIndex        =   52
            TabStop         =   0   'False
            ToolTipText     =   "Código do cliente."
            Top             =   930
            Width           =   855
         End
         Begin VB.TextBox txt_IEST 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   1575
            Locked          =   -1  'True
            MaxLength       =   15
            TabIndex        =   50
            TabStop         =   0   'False
            ToolTipText     =   "Inscrição estadual tributária."
            Top             =   930
            Width           =   1185
         End
         Begin VB.TextBox txt_Endereco 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   195
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   56
            TabStop         =   0   'False
            ToolTipText     =   "Endereço."
            Top             =   1485
            Width           =   4590
         End
         Begin VB.TextBox txt_Bairro 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5730
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   58
            TabStop         =   0   'False
            ToolTipText     =   "Bairro."
            Top             =   1485
            Width           =   3255
         End
         Begin VB.TextBox txt_FoneFAX 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   13710
            Locked          =   -1  'True
            MaxLength       =   14
            TabIndex        =   62
            TabStop         =   0   'False
            ToolTipText     =   "Telefone/fax."
            Top             =   1485
            Width           =   1305
         End
         Begin VB.TextBox txt_IE 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   195
            Locked          =   -1  'True
            MaxLength       =   15
            TabIndex        =   49
            TabStop         =   0   'False
            ToolTipText     =   "Inscrição estadual."
            Top             =   930
            Width           =   1365
         End
         Begin VB.TextBox txtNFiscal 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   1110
            MaxLength       =   9
            TabIndex        =   39
            ToolTipText     =   "Nº da nota."
            Top             =   385
            Width           =   915
         End
         Begin VB.ComboBox cbo_UF 
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":FE17
            Left            =   13005
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":FE6C
            Locked          =   -1  'True
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   61
            TabStop         =   0   'False
            ToolTipText     =   "UF."
            Top             =   1485
            Width           =   690
         End
         Begin VB.CommandButton cmdCliente 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   14700
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":FEDC
            Style           =   1  'Graphical
            TabIndex        =   55
            ToolTipText     =   "Localizar destinatário."
            Top             =   930
            Width           =   315
         End
         Begin VB.TextBox txt_rev 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   3765
            TabIndex        =   42
            ToolTipText     =   "Revisão do pedido interno."
            Top             =   385
            Width           =   435
         End
         Begin VB.ComboBox txt_proposta 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":FFDE
            Left            =   2640
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":FFE0
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   41
            Top             =   385
            Width           =   1125
         End
         Begin VB.TextBox txttipocliente 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   14175
            Locked          =   -1  'True
            MaxLength       =   10
            TabIndex        =   54
            TabStop         =   0   'False
            ToolTipText     =   "Tipo do cliente."
            Top             =   930
            Width           =   510
         End
         Begin VB.TextBox txtSerie 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2040
            Locked          =   -1  'True
            MaxLength       =   3
            TabIndex        =   40
            TabStop         =   0   'False
            ToolTipText     =   "Série."
            Top             =   385
            Width           =   585
         End
         Begin VB.TextBox Txt_CEP 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   12045
            Locked          =   -1  'True
            MaxLength       =   12
            TabIndex        =   60
            TabStop         =   0   'False
            ToolTipText     =   "CEP."
            Top             =   1485
            Width           =   945
         End
         Begin VB.TextBox txtVlrMoedaPrincipal 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7915
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   66
            TabStop         =   0   'False
            ToolTipText     =   "Tel./fax"
            Top             =   2055
            Width           =   840
         End
         Begin VB.TextBox txtMoedaPrincipal 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   6875
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   65
            TabStop         =   0   'False
            ToolTipText     =   "Tel./fax"
            Top             =   2055
            Width           =   1040
         End
         Begin VB.TextBox txtNumero 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   4800
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   57
            TabStop         =   0   'False
            ToolTipText     =   "Número."
            Top             =   1485
            Width           =   915
         End
         Begin VB.TextBox txt_CNPJ_CPF 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2775
            Locked          =   -1  'True
            MaxLength       =   30
            TabIndex        =   51
            TabStop         =   0   'False
            ToolTipText     =   "CNPJ/CPF."
            Top             =   930
            Width           =   1565
         End
         Begin VB.TextBox Txt_chave_acesso 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   195
            MaxLength       =   44
            TabIndex        =   67
            ToolTipText     =   "Chave de acesso da NFe."
            Top             =   3225
            Width           =   8235
         End
         Begin VB.TextBox txt_Municipio 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   9000
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   59
            TabStop         =   0   'False
            ToolTipText     =   "Cidade."
            Top             =   1485
            Width           =   3035
         End
         Begin VB.CommandButton Cmd_consultar_chave_acesso 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   8440
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":FFE2
            Style           =   1  'Graphical
            TabIndex        =   68
            ToolTipText     =   "Consultar nota fiscal no SEFAZ com chave de acesso."
            Top             =   3225
            Width           =   315
         End
         Begin MSMask.MaskEdBox mskHoraSaida 
            Height          =   315
            Left            =   14100
            TabIndex        =   48
            ToolTipText     =   "Hora de saída."
            Top             =   390
            Width           =   915
            _ExtentX        =   1614
            _ExtentY        =   556
            _Version        =   393216
            BackColor       =   16777215
            MaxLength       =   8
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Mask            =   "##:##:##"
            PromptChar      =   "_"
         End
         Begin MSComCtl2.DTPicker txt_DtEmissao 
            Height          =   315
            Left            =   4215
            TabIndex        =   43
            ToolTipText     =   "Data de emissão."
            Top             =   390
            Width           =   1185
            _ExtentX        =   2090
            _ExtentY        =   556
            _Version        =   393216
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            CalendarBackColor=   16777215
            CalendarForeColor=   0
            CalendarTitleBackColor=   8421504
            CalendarTitleForeColor=   16777215
            CalendarTrailingForeColor=   255
            Format          =   137363459
            CurrentDate     =   39057
         End
         Begin MSMask.MaskEdBox txt_EntSai 
            Height          =   315
            Left            =   12705
            TabIndex        =   47
            ToolTipText     =   "Data de saída/entrada."
            Top             =   390
            Width           =   990
            _ExtentX        =   1746
            _ExtentY        =   556
            _Version        =   393216
            BackColor       =   16777215
            MaxLength       =   10
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Mask            =   "##/##/####"
            PromptChar      =   "_"
         End
         Begin MSMask.MaskEdBox Txt_hora_emissao 
            Height          =   315
            Left            =   5400
            TabIndex        =   44
            ToolTipText     =   "Hora da emissão."
            Top             =   390
            Width           =   915
            _ExtentX        =   1614
            _ExtentY        =   556
            _Version        =   393216
            BackColor       =   16777215
            MaxLength       =   8
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Mask            =   "##:##:##"
            PromptChar      =   "_"
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Local de entrega"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   26
            Left            =   3892
            TabIndex        =   424
            Top             =   2430
            Width           =   1200
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Observações/Motivo do cancelamento"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   58
            Left            =   10575
            TabIndex        =   337
            Top             =   1860
            Width           =   2745
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   57
            Left            =   8155
            TabIndex        =   336
            Top             =   1860
            Width           =   360
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Moeda"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   56
            Left            =   7155
            TabIndex        =   335
            Top             =   1860
            Width           =   480
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Consumidor final"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   55
            Left            =   5063
            TabIndex        =   334
            Top             =   1860
            Width           =   1185
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Finalidade de emissão"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   54
            Left            =   1530
            TabIndex        =   333
            Top             =   1860
            Width           =   1560
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Telefone/Fax"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   53
            Left            =   13882
            TabIndex        =   332
            Top             =   1290
            Width           =   960
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "UF"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   52
            Left            =   13253
            TabIndex        =   331
            Top             =   1290
            Width           =   195
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Número"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   51
            Left            =   4980
            TabIndex        =   330
            Top             =   1290
            Width           =   555
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "CEP"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   50
            Left            =   12375
            TabIndex        =   329
            Top             =   1290
            Width           =   285
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Cidade"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   49
            Left            =   10270
            TabIndex        =   328
            Top             =   1290
            Width           =   495
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Bairro"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   48
            Left            =   7147
            TabIndex        =   327
            Top             =   1290
            Width           =   420
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "ID"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   47
            Left            =   4695
            TabIndex        =   326
            Top             =   735
            Width           =   165
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "CNPJ / CPF"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   46
            Left            =   3152
            TabIndex        =   325
            Top             =   735
            Width           =   810
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Insc. est. ST"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   45
            Left            =   1710
            TabIndex        =   324
            Top             =   735
            Width           =   915
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Data"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   44
            Left            =   13028
            TabIndex        =   323
            Top             =   180
            Width           =   345
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Responsável validação"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   43
            Left            =   9713
            TabIndex        =   322
            Top             =   180
            Width           =   1635
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Data/hora validação"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   42
            Left            =   6615
            TabIndex        =   321
            Top             =   180
            Width           =   1455
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Hora"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   41
            Left            =   5685
            TabIndex        =   320
            Top             =   180
            Width           =   345
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Dt. emissão"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   40
            Left            =   4387
            TabIndex        =   319
            Top             =   180
            Width           =   840
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Rev."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   39
            Left            =   3810
            TabIndex        =   318
            Top             =   180
            Width           =   345
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Pedido"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   38
            Left            =   2962
            TabIndex        =   317
            Top             =   180
            Width           =   480
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Série"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   37
            Left            =   2152
            TabIndex        =   316
            Top             =   180
            Width           =   360
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Nota fiscal"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   36
            Left            =   1192
            TabIndex        =   315
            Top             =   180
            Width           =   750
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Destinatário"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   34
            Left            =   9255
            TabIndex        =   314
            Top             =   735
            Width           =   870
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Tipo"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   28
            Left            =   14280
            TabIndex        =   300
            Top             =   735
            Width           =   300
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Chave de acesso da NFe"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   5
            Left            =   3420
            TabIndex        =   291
            Top             =   3030
            Width           =   1785
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Hora"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   21
            Left            =   14385
            TabIndex        =   289
            Top             =   180
            Width           =   345
         End
         Begin VB.Image imgCalendario 
            Height          =   360
            Left            =   13695
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":103FD
            Stretch         =   -1  'True
            ToolTipText     =   "Abrir calendário."
            Top             =   360
            Width           =   330
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Endereço"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   4
            Left            =   2153
            TabIndex        =   271
            Top             =   1290
            Width           =   675
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "OF"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   0
            Left            =   532
            TabIndex        =   270
            Top             =   180
            Width           =   210
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Insc. estadual"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   3
            Left            =   367
            TabIndex        =   269
            Top             =   735
            Width           =   1020
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Filtrar notas"
         Height          =   525
         Index           =   7
         Left            =   75
         TabIndex        =   265
         Top             =   5715
         Width           =   15195
         Begin VB.ComboBox cmbAno 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":10880
            Left            =   14220
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":10882
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   73
            ToolTipText     =   "Ano."
            Top             =   210
            Width           =   795
         End
         Begin VB.OptionButton OptDomes 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Do mês"
            Height          =   195
            Left            =   150
            TabIndex        =   70
            Top             =   270
            Value           =   -1  'True
            Width           =   1185
         End
         Begin VB.OptionButton OptAteomes 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Até o mês"
            Height          =   195
            Left            =   1320
            TabIndex        =   71
            Top             =   270
            Width           =   1275
         End
         Begin MSComctlLib.TabStrip TabFiltro 
            Height          =   315
            Left            =   2610
            TabIndex        =   72
            Top             =   240
            Width           =   11565
            _ExtentX        =   20399
            _ExtentY        =   556
            MultiRow        =   -1  'True
            TabStyle        =   1
            _Version        =   393216
            BeginProperty Tabs {1EFB6598-857C-11D1-B16A-00C0F0283628} 
               NumTabs         =   12
               BeginProperty Tab1 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Janeiro"
                  Key             =   "Jan"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab2 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Fevereiro"
                  Key             =   "Fev"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab3 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Março"
                  Key             =   "Mar"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab4 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Abril"
                  Key             =   "Abr"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab5 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Maio"
                  Key             =   "Maio"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab6 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Junho"
                  Key             =   "Jun"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab7 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Julho"
                  Key             =   "Jul"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab8 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Agosto"
                  Key             =   "Ago"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab9 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Setembro"
                  Key             =   "Set"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab10 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Outubro"
                  Key             =   "Out"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab11 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Novembro"
                  Key             =   "Nov"
                  ImageVarType    =   2
               EndProperty
               BeginProperty Tab12 {1EFB659A-857C-11D1-B16A-00C0F0283628} 
                  Caption         =   "Dezembro"
                  Key             =   "Dez"
                  ImageVarType    =   2
               EndProperty
            EndProperty
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
         End
      End
      Begin VB.TextBox txtID_cobranca 
         BackColor       =   &H00FFFFFF&
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Left            =   2760
         TabIndex        =   264
         Text            =   "0"
         Top             =   6540
         Visible         =   0   'False
         Width           =   405
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         ForeColor       =   &H00000000&
         Height          =   615
         Index           =   29
         Left            =   75
         TabIndex        =   258
         Top             =   8610
         Width           =   15195
         Begin VB.TextBox txtPagIr 
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Index           =   1
            Left            =   9540
            TabIndex        =   77
            ToolTipText     =   "Número da página."
            Top             =   180
            Width           =   555
         End
         Begin VB.TextBox txtNreg 
            Alignment       =   2  'Centralizar
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Index           =   1
            Left            =   2730
            TabIndex        =   75
            Text            =   "30"
            ToolTipText     =   "Número de registros por página."
            Top             =   180
            Width           =   555
         End
         Begin VB.ComboBox Cmb_opcao_lista 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   300
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":10884
            Left            =   6960
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":10891
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   76
            TabStop         =   0   'False
            Top             =   187
            Width           =   1965
         End
         Begin DrawSuite2014.USButton cmdPagProx 
            Height          =   315
            Index           =   1
            Left            =   11760
            TabIndex        =   81
            ToolTipText     =   "Próxima página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmFaturamento_Prod_serv_GNFe.frx":108B1
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2014.USButton cmdPagAnt 
            Height          =   315
            Index           =   1
            Left            =   11220
            TabIndex        =   80
            ToolTipText     =   "Página anterior."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmFaturamento_Prod_serv_GNFe.frx":14055
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2014.USButton cmdPagIr 
            Height          =   315
            Index           =   1
            Left            =   10110
            TabIndex        =   78
            Top             =   180
            Width           =   465
            _ExtentX        =   820
            _ExtentY        =   556
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            Caption         =   "Ir"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2014.USButton cmdPagPrim 
            Height          =   315
            Index           =   1
            Left            =   10680
            TabIndex        =   79
            ToolTipText     =   "Primeira página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmFaturamento_Prod_serv_GNFe.frx":17B5E
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2014.USButton cmdPagUlt 
            Height          =   315
            Index           =   1
            Left            =   12300
            TabIndex        =   82
            ToolTipText     =   "Última página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmFaturamento_Prod_serv_GNFe.frx":1BC4D
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin VB.Label Label15 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "registros por página"
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   3360
            TabIndex        =   312
            Top             =   240
            Width           =   1440
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Carregar"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   30
            Left            =   2040
            TabIndex        =   301
            Top             =   240
            Width           =   645
         End
         Begin VB.Label lblRegistros 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Nº de registros: 0"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   1
            Left            =   180
            TabIndex        =   261
            Top             =   240
            Width           =   1275
         End
         Begin VB.Label lblPaginas 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Página: 0 de: 0"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   1
            Left            =   13050
            TabIndex        =   260
            Top             =   240
            Width           =   1095
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Operação da lista"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   29
            Left            =   5610
            TabIndex        =   259
            Top             =   240
            Width           =   1260
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Empresa"
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00000000&
         Height          =   720
         Index           =   1
         Left            =   75
         TabIndex        =   257
         Top             =   1320
         Width           =   5400
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Modelo"
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00000000&
         Height          =   720
         Index           =   2
         Left            =   5490
         TabIndex        =   256
         Top             =   1320
         Width           =   4770
         Begin VB.ComboBox Cmb_modelo 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":1F4D9
            Left            =   180
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":1F53D
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   29
            ToolTipText     =   "Modelo da nota fiscal."
            Top             =   220
            Width           =   4395
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Enabled         =   0   'False
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000005&
         Height          =   3375
         Index           =   9
         Left            =   -74925
         TabIndex        =   248
         Top             =   1305
         Width           =   15195
         Begin VB.TextBox Txt_ID_CFOP_prod 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4110
            Locked          =   -1  'True
            TabIndex        =   87
            TabStop         =   0   'False
            ToolTipText     =   "ID da CFOP."
            Top             =   390
            Width           =   525
         End
         Begin VB.TextBox Txt_inf_adicionais_prod 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   555
            Left            =   180
            MaxLength       =   500
            MultiLine       =   -1  'True
            ScrollBars      =   2  'Vertical
            TabIndex        =   122
            ToolTipText     =   "Informações adicionais do produto."
            Top             =   2670
            Width           =   14820
         End
         Begin VB.CheckBox Chk_CFOP_prod 
            BackColor       =   &H00E0E0E0&
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   4110
            TabIndex        =   294
            Top             =   195
            Width           =   195
         End
         Begin VB.TextBox Txt_ID_CF 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   9810
            Locked          =   -1  'True
            TabIndex        =   91
            TabStop         =   0   'False
            ToolTipText     =   "ID da NCM."
            Top             =   390
            Width           =   525
         End
         Begin VB.TextBox Txt_CFOP_prod 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4650
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   88
            TabStop         =   0   'False
            ToolTipText     =   "CFOP."
            Top             =   385
            Width           =   1110
         End
         Begin VB.TextBox txtCod_Produto 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            MaxLength       =   50
            TabIndex        =   83
            ToolTipText     =   "Código interno."
            Top             =   385
            Width           =   1575
         End
         Begin VB.TextBox txtDescricao_Produto 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            TabIndex        =   98
            TabStop         =   0   'False
            ToolTipText     =   "Descrição."
            Top             =   930
            Width           =   6945
         End
         Begin VB.TextBox txtQTD 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   8730
            TabIndex        =   101
            ToolTipText     =   "Quantidade."
            Top             =   930
            Width           =   1030
         End
         Begin VB.TextBox txtVLUnit 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   9780
            TabIndex        =   102
            ToolTipText     =   "Valor unitário."
            Top             =   930
            Width           =   1290
         End
         Begin VB.TextBox txtVLTotal 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11085
            Locked          =   -1  'True
            TabIndex        =   103
            TabStop         =   0   'False
            ToolTipText     =   "Valor total."
            Top             =   930
            Width           =   1080
         End
         Begin VB.TextBox txtValor_IPI 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   13200
            Locked          =   -1  'True
            TabIndex        =   106
            TabStop         =   0   'False
            ToolTipText     =   "Valor do IPI."
            Top             =   930
            Width           =   1260
         End
         Begin VB.TextBox txtICMS 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   12180
            Locked          =   -1  'True
            TabIndex        =   104
            TabStop         =   0   'False
            ToolTipText     =   "ICMS."
            Top             =   930
            Width           =   495
         End
         Begin VB.CommandButton cmdproduto 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   2100
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":1FA7E
            Style           =   1  'Graphical
            TabIndex        =   85
            ToolTipText     =   "Localizar produtos."
            Top             =   385
            Width           =   315
         End
         Begin VB.TextBox txt_pccliente 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   8220
            MaxLength       =   60
            TabIndex        =   113
            ToolTipText     =   "Número do pedido de compra do cliente."
            Top             =   1480
            Width           =   3495
         End
         Begin VB.TextBox txtof 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   13260
            TabIndex        =   120
            ToolTipText     =   "Número da ordem/lote."
            Top             =   2055
            Width           =   1425
         End
         Begin VB.CommandButton cmdFiltrarordem 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   14685
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":1FB80
            Style           =   1  'Graphical
            TabIndex        =   121
            ToolTipText     =   "Localizar ordem/lote."
            Top             =   2055
            Width           =   315
         End
         Begin VB.ComboBox txtUN 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":1FC82
            Left            =   7140
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":1FCD7
            Locked          =   -1  'True
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   99
            TabStop         =   0   'False
            ToolTipText     =   "Unidade de estoque."
            Top             =   930
            Width           =   780
         End
         Begin VB.CommandButton cmdCF 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   11505
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":1FD47
            Style           =   1  'Graphical
            TabIndex        =   93
            ToolTipText     =   "Localizar classificação fiscal."
            Top             =   385
            Width           =   315
         End
         Begin VB.CheckBox chkRetorno 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Retorno"
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   13995
            TabIndex        =   116
            Top             =   1540
            Width           =   1005
         End
         Begin VB.CheckBox chkRemessa 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Remessa"
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   12840
            TabIndex        =   115
            Top             =   1540
            Width           =   1095
         End
         Begin VB.CommandButton Cmd_filtrar_prod_serv 
            Appearance      =   0  'Flat
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Index           =   0
            Left            =   1770
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":1FE49
            Style           =   1  'Graphical
            TabIndex        =   84
            ToolTipText     =   "Filtrar por código interno."
            Top             =   385
            Width           =   315
         End
         Begin VB.TextBox Txt_complemento_descricao 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2790
            MaxLength       =   60
            TabIndex        =   118
            ToolTipText     =   "Complemento da descrição."
            Top             =   2055
            Width           =   8955
         End
         Begin VB.CommandButton Cmd_localizar_CFOP_prod 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   9375
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":20264
            Style           =   1  'Graphical
            TabIndex        =   90
            ToolTipText     =   "Localizar CFOP."
            Top             =   390
            Width           =   315
         End
         Begin VB.TextBox Txt_natureza_operacao_prod 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5775
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   89
            TabStop         =   0   'False
            ToolTipText     =   "Natureza da operação."
            Top             =   385
            Width           =   3600
         End
         Begin VB.TextBox Txt_GTIN 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11760
            Locked          =   -1  'True
            MaxLength       =   14
            TabIndex        =   119
            TabStop         =   0   'False
            ToolTipText     =   "GTIN (Global Trade Item Number) do produto, antigo código EAN ou código de barras."
            Top             =   2055
            Width           =   1485
         End
         Begin VB.TextBox Txt_n_item 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11730
            MaxLength       =   6
            TabIndex        =   114
            ToolTipText     =   "Número do produto/item no pedido do cliente."
            Top             =   1480
            Width           =   1005
         End
         Begin VB.ComboBox Cmb_un_com 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":20366
            Left            =   7935
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":203BB
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   100
            ToolTipText     =   "Unidade comercial."
            Top             =   930
            Width           =   780
         End
         Begin VB.CheckBox Chk_tem_IPI_frete_prod 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Tem IPI"
            Height          =   195
            Left            =   2160
            TabIndex        =   109
            Top             =   1540
            Width           =   855
         End
         Begin VB.TextBox txt_VlrFrete_prod 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            MaxLength       =   15
            TabIndex        =   108
            ToolTipText     =   "Valor do frete."
            Top             =   1480
            Width           =   1890
         End
         Begin VB.TextBox txt_vlrSeguro_prod 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   3090
            MaxLength       =   15
            TabIndex        =   110
            ToolTipText     =   "Valor do seguro."
            Top             =   1480
            Width           =   1695
         End
         Begin VB.TextBox txt_OutrasDisp_prod 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4800
            MaxLength       =   15
            TabIndex        =   111
            ToolTipText     =   "Valor das despesas acessórias."
            Top             =   1480
            Width           =   1695
         End
         Begin VB.TextBox Txt_valor_total_desc_prod 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   6510
            MaxLength       =   15
            TabIndex        =   112
            ToolTipText     =   "Valor do desconto."
            Top             =   1480
            Width           =   1695
         End
         Begin VB.TextBox Txt_CF 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   10350
            Locked          =   -1  'True
            MaxLength       =   20
            TabIndex        =   92
            TabStop         =   0   'False
            ToolTipText     =   "Classificação fiscal."
            Top             =   385
            Width           =   1155
         End
         Begin VB.CheckBox chkNaoArredondar 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Não arredondar valor de ICMS"
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   180
            TabIndex        =   117
            Top             =   2115
            Width           =   2505
         End
         Begin VB.TextBox txtIPI 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   12690
            Locked          =   -1  'True
            TabIndex        =   105
            TabStop         =   0   'False
            ToolTipText     =   "IPI."
            Top             =   930
            Width           =   495
         End
         Begin MSMask.MaskEdBox Txt_codigo_enq_IPI 
            Height          =   315
            Left            =   14475
            TabIndex        =   107
            ToolTipText     =   "Código de enquadramento legal do IPI."
            Top             =   930
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            _Version        =   393216
            BackColor       =   16777215
            ForeColor       =   0
            MaxLength       =   3
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Mask            =   "###"
            PromptChar      =   "_"
         End
         Begin VB.Frame Frame17 
            BackColor       =   &H00E0E0E0&
            Caption         =   "CST"
            ForeColor       =   &H00000000&
            Height          =   705
            Left            =   11940
            TabIndex        =   249
            Top             =   15
            Width           =   3255
            Begin VB.ComboBox txtCST_ICMS 
               Appearance      =   0  'Flat
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   400
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   330
               ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":2042B
               Left            =   180
               List            =   "frmFaturamento_Prod_serv_GNFe.frx":204E6
               Sorted          =   -1  'True
               Style           =   2  'Dropdown List
               TabIndex        =   94
               ToolTipText     =   "Situação tributária ICMS."
               Top             =   330
               Width           =   930
            End
            Begin VB.ComboBox txtCST_IPI 
               Appearance      =   0  'Flat
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   400
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   330
               ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":20636
               Left            =   1110
               List            =   "frmFaturamento_Prod_serv_GNFe.frx":20667
               Sorted          =   -1  'True
               Style           =   2  'Dropdown List
               TabIndex        =   95
               ToolTipText     =   "Situação tributária IPI."
               Top             =   330
               Width           =   660
            End
            Begin VB.ComboBox txtCST_PIS 
               Appearance      =   0  'Flat
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   400
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   330
               ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":206A5
               Left            =   1770
               List            =   "frmFaturamento_Prod_serv_GNFe.frx":2070F
               Sorted          =   -1  'True
               Style           =   2  'Dropdown List
               TabIndex        =   96
               ToolTipText     =   "Situação tributária PIS."
               Top             =   330
               Width           =   660
            End
            Begin VB.ComboBox txtCST_Cofins 
               Appearance      =   0  'Flat
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   400
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   330
               ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":20799
               Left            =   2430
               List            =   "frmFaturamento_Prod_serv_GNFe.frx":20803
               Sorted          =   -1  'True
               Style           =   2  'Dropdown List
               TabIndex        =   97
               ToolTipText     =   "Situação tributária Cofins."
               Top             =   330
               Width           =   660
            End
            Begin VB.Label Label1 
               Appearance      =   0  'Flat
               AutoSize        =   -1  'True
               BackColor       =   &H80000005&
               BackStyle       =   0  'Transparente
               Caption         =   "IPI"
               ForeColor       =   &H00000000&
               Height          =   195
               Index           =   67
               Left            =   1335
               TabIndex        =   346
               Top             =   150
               Width           =   210
            End
            Begin VB.Label Label1 
               Appearance      =   0  'Flat
               AutoSize        =   -1  'True
               BackColor       =   &H80000005&
               BackStyle       =   0  'Transparente
               Caption         =   "Cofins"
               ForeColor       =   &H00000000&
               Height          =   195
               Index           =   66
               Left            =   2535
               TabIndex        =   345
               Top             =   150
               Width           =   450
            End
            Begin VB.Label Label1 
               Appearance      =   0  'Flat
               AutoSize        =   -1  'True
               BackColor       =   &H80000005&
               BackStyle       =   0  'Transparente
               Caption         =   "PIS"
               ForeColor       =   &H00000000&
               Height          =   195
               Index           =   65
               Left            =   1980
               TabIndex        =   344
               Top             =   150
               Width           =   240
            End
            Begin VB.Label Label1 
               Appearance      =   0  'Flat
               AutoSize        =   -1  'True
               BackColor       =   &H80000005&
               BackStyle       =   0  'Transparente
               Caption         =   "ICMS"
               ForeColor       =   &H00000000&
               Height          =   195
               Index           =   10
               Left            =   458
               TabIndex        =   250
               Top             =   150
               Width           =   375
            End
         End
         Begin VB.TextBox txtnaovisualizarvalor 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   9780
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   418
            TabStop         =   0   'False
            Text            =   "Valores não disponíveis"
            Top             =   930
            Visible         =   0   'False
            Width           =   4680
         End
         Begin VB.TextBox txtnaovisualizarvalor1 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   419
            TabStop         =   0   'False
            Text            =   "Valores não disponíveis"
            Top             =   1480
            Visible         =   0   'False
            Width           =   8010
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Ordem/lote"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   83
            Left            =   13567
            TabIndex        =   362
            Top             =   1860
            Width           =   810
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "GTIN"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   82
            Left            =   12322
            TabIndex        =   361
            Top             =   1860
            Width           =   360
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "N. item"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   81
            Left            =   11977
            TabIndex        =   360
            Top             =   1290
            Width           =   510
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Pedido do cliente"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   80
            Left            =   9360
            TabIndex        =   359
            Top             =   1290
            Width           =   1215
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor do desconto"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   79
            Left            =   6712
            TabIndex        =   358
            Top             =   1290
            Width           =   1290
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Vlr. desp. acessórias"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   78
            Left            =   4905
            TabIndex        =   357
            Top             =   1290
            Width           =   1485
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor do seguro"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   77
            Left            =   3375
            TabIndex        =   356
            Top             =   1290
            Width           =   1125
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Cód."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   76
            Left            =   14565
            TabIndex        =   355
            Top             =   735
            Width           =   345
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor IPI"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   75
            Left            =   13523
            TabIndex        =   354
            Top             =   735
            Width           =   615
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "IPI"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   74
            Left            =   12832
            TabIndex        =   353
            Top             =   735
            Width           =   210
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "ICMS"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   73
            Left            =   12240
            TabIndex        =   352
            Top             =   735
            Width           =   375
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   72
            Left            =   11258
            TabIndex        =   351
            Top             =   735
            Width           =   735
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor unitário"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   71
            Left            =   9953
            TabIndex        =   350
            Top             =   735
            Width           =   945
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Quantidade"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   70
            Left            =   8825
            TabIndex        =   349
            Top             =   735
            Width           =   840
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Un. com."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   69
            Left            =   8003
            TabIndex        =   348
            Top             =   735
            Width           =   645
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Un. est."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   68
            Left            =   7238
            TabIndex        =   347
            Top             =   735
            Width           =   585
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "NCM"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   64
            Left            =   10762
            TabIndex        =   343
            Top             =   195
            Width           =   330
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "ID"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   63
            Left            =   9990
            TabIndex        =   342
            Top             =   195
            Width           =   165
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Natureza da operação"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   62
            Left            =   6773
            TabIndex        =   341
            Top             =   195
            Width           =   1605
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "CFOP"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   61
            Left            =   5003
            TabIndex        =   340
            Top             =   195
            Width           =   405
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "ID"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   60
            Left            =   4380
            TabIndex        =   339
            Top             =   195
            Width           =   165
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Cód. de referência"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   59
            Left            =   2640
            TabIndex        =   338
            Top             =   195
            Width           =   1350
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Informações adicionais"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   27
            Left            =   6773
            TabIndex        =   306
            Top             =   2460
            Width           =   1635
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Cód. interno"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   6
            Left            =   517
            TabIndex        =   254
            Top             =   195
            Width           =   900
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Descrição"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   7
            Left            =   3307
            TabIndex        =   253
            Top             =   735
            Width           =   690
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Complemento da descrição"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   9
            Left            =   6307
            TabIndex        =   252
            Top             =   1860
            Width           =   1920
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor do frete"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   8
            Left            =   630
            TabIndex        =   251
            Top             =   1290
            Width           =   990
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H8000000E&
         Height          =   1455
         Index           =   11
         Left            =   -74925
         TabIndex        =   245
         Top             =   8520
         Width           =   15195
         Begin VB.TextBox txt_ValorNota 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11775
            MaxLength       =   15
            TabIndex        =   142
            ToolTipText     =   "Valor total da nota."
            Top             =   970
            Width           =   1665
         End
         Begin VB.TextBox txt_vlrtotalprod 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   10980
            MaxLength       =   15
            TabIndex        =   135
            ToolTipText     =   "Valor total do(s) produto(s)."
            Top             =   415
            Width           =   2460
         End
         Begin VB.TextBox txt_TotalIPI 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5976
            MaxLength       =   15
            TabIndex        =   139
            ToolTipText     =   "Valor total do IPI."
            Top             =   970
            Width           =   1875
         End
         Begin VB.TextBox txt_ICMSs 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   8460
            MaxLength       =   15
            TabIndex        =   134
            ToolTipText     =   "Valor do ICMS substituto."
            Top             =   415
            Width           =   2460
         End
         Begin VB.TextBox txt_OutrasDisp 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4044
            MaxLength       =   15
            TabIndex        =   138
            ToolTipText     =   "Valor total das despesas acessórias."
            Top             =   970
            Width           =   1875
         End
         Begin VB.TextBox txt_baseICMSs 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5505
            MaxLength       =   15
            TabIndex        =   133
            ToolTipText     =   "Base de calculo ICMS substituto."
            Top             =   415
            Width           =   2910
         End
         Begin VB.TextBox txt_vlrSeguro 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2112
            MaxLength       =   15
            TabIndex        =   137
            ToolTipText     =   "Valor total do seguro."
            Top             =   970
            Width           =   1875
         End
         Begin VB.TextBox txt_vlrICMS 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   3157
            MaxLength       =   15
            TabIndex        =   132
            ToolTipText     =   "Valor do ICMS."
            Top             =   415
            Width           =   2310
         End
         Begin VB.TextBox txt_BaseICMS 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            MaxLength       =   15
            TabIndex        =   131
            ToolTipText     =   "Base de cálculo do ICMS."
            Top             =   415
            Width           =   2910
         End
         Begin VB.TextBox txt_VlrFrete 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            MaxLength       =   15
            TabIndex        =   136
            ToolTipText     =   "Valor total do frete."
            Top             =   970
            Width           =   1875
         End
         Begin VB.TextBox Txt_valor_total_desc 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7908
            MaxLength       =   15
            TabIndex        =   140
            ToolTipText     =   "Valor total do desconto."
            Top             =   970
            Width           =   1875
         End
         Begin VB.TextBox Txt_valor_total_desc_SUFRAMA 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   9840
            Locked          =   -1  'True
            MaxLength       =   15
            TabIndex        =   141
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do desconto SUFRAMA."
            Top             =   970
            Width           =   1875
         End
         Begin DrawSuite2014.USButton Cmd_cancelar_totais 
            Height          =   480
            Left            =   13650
            TabIndex        =   144
            ToolTipText     =   "Cancelar alteração dos totais da nota (F11)"
            Top             =   810
            Width           =   1365
            _ExtentX        =   2408
            _ExtentY        =   847
            BorderColor     =   8421504
            BorderColorDisabled=   0
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            Caption         =   "Cancelar (F11)"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   14737632
            GradientColor3  =   12632256
            GradientColor4  =   12632256
            PicSizeH        =   48
            PicSizeW        =   48
            Theme           =   1
         End
         Begin DrawSuite2014.USButton Cmd_salvar_totais 
            Height          =   480
            Left            =   13650
            TabIndex        =   143
            ToolTipText     =   "Salvar alteração dos totais da nota (F10)"
            Top             =   270
            Width           =   1365
            _ExtentX        =   2408
            _ExtentY        =   847
            BorderColor     =   8421504
            BorderColorDisabled=   0
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            Caption         =   "Salvar (F10)"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            GradientColor2  =   14737632
            GradientColor3  =   12632256
            GradientColor4  =   12632256
            PicSizeH        =   48
            PicSizeW        =   48
            Theme           =   1
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Vlr. total da nota"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   97
            Left            =   11902
            TabIndex        =   376
            Top             =   780
            Width           =   1410
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Vlr.  desc. SUFRAMA"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   96
            Left            =   9945
            TabIndex        =   375
            Top             =   780
            Width           =   1665
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor do desconto"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   95
            Left            =   8088
            TabIndex        =   374
            Top             =   780
            Width           =   1515
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor do IPI"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   94
            Left            =   6418
            TabIndex        =   373
            Top             =   780
            Width           =   990
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Vlr. desp. acessórias"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   93
            Left            =   4126
            TabIndex        =   372
            Top             =   780
            Width           =   1710
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor do seguro"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   92
            Left            =   2389
            TabIndex        =   371
            Top             =   780
            Width           =   1320
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total produtos"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   91
            Left            =   11363
            TabIndex        =   370
            Top             =   225
            Width           =   1695
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor ICMS subst."
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   90
            Left            =   8955
            TabIndex        =   369
            Top             =   225
            Width           =   1470
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Base de cálculo ICMS subst."
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   89
            Left            =   5798
            TabIndex        =   368
            Top             =   225
            Width           =   2325
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor do ICMS"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   88
            Left            =   3727
            TabIndex        =   367
            Top             =   225
            Width           =   1170
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Base de cálculo do ICMS"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   14
            Left            =   623
            TabIndex        =   247
            Top             =   225
            Width           =   2025
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   " Valor do frete"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   15
            Left            =   517
            TabIndex        =   246
            Top             =   780
            Width           =   1200
         End
      End
      Begin VB.TextBox txtidproduto 
         Alignment       =   2  'Centralizar
         Height          =   335
         Left            =   -74130
         TabIndex        =   244
         Text            =   "0"
         ToolTipText     =   "ID do produto na tabela da NF."
         Top             =   5790
         Visible         =   0   'False
         Width           =   1155
      End
      Begin VB.TextBox Txt_IDestoque 
         BackColor       =   &H00FFFFFF&
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Left            =   -72960
         TabIndex        =   243
         Text            =   "0"
         Top             =   5790
         Visible         =   0   'False
         Width           =   1425
      End
      Begin VB.TextBox txtidservico 
         Alignment       =   2  'Centralizar
         Height          =   335
         Left            =   -74850
         TabIndex        =   235
         Text            =   "0"
         ToolTipText     =   "ID do serviço na tabela da NF."
         Top             =   3720
         Visible         =   0   'False
         Width           =   1155
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Enabled         =   0   'False
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H8000000E&
         Height          =   885
         Index           =   14
         Left            =   -74925
         TabIndex        =   233
         ToolTipText     =   "Salvar alteração dos valores (F10) / Cancela alteração dos valores (F11)"
         Top             =   9090
         Width           =   15195
         Begin VB.TextBox txtTotal_Cofins 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2027
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   167
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do Cofins."
            Top             =   415
            Width           =   1770
         End
         Begin VB.TextBox txtTotal_INSS 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7598
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   170
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do INSS."
            Top             =   415
            Width           =   1770
         End
         Begin VB.TextBox txtTotal_CSLL 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   3874
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   287
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do CSLL."
            Top             =   415
            Width           =   1770
         End
         Begin VB.TextBox txt_ValorNota2 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   13170
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   173
            TabStop         =   0   'False
            ToolTipText     =   "Valor total da nota."
            Top             =   415
            Width           =   1833
         End
         Begin VB.TextBox Txt_valorISS 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5721
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   169
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do ISSQN."
            Top             =   415
            Width           =   1800
         End
         Begin VB.TextBox txttotalservicos 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11292
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   172
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do(s) serviço(s)."
            Top             =   415
            Width           =   1800
         End
         Begin VB.TextBox txtTotal_PIS 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   166
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do PIS."
            Top             =   415
            Width           =   1770
         End
         Begin VB.TextBox txtTotal_IRRF 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   9445
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   171
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do IRRF."
            Top             =   415
            Width           =   1770
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total nota"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   116
            Left            =   13426
            TabIndex        =   395
            Top             =   225
            Width           =   1320
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total serviços"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   115
            Left            =   11375
            TabIndex        =   394
            Top             =   225
            Width           =   1635
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total IRRF"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   114
            Left            =   9663
            TabIndex        =   393
            Top             =   225
            Width           =   1335
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total INSS"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   113
            Left            =   7823
            TabIndex        =   392
            Top             =   225
            Width           =   1320
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total ISSQN"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   112
            Left            =   5901
            TabIndex        =   391
            Top             =   225
            Width           =   1440
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total CSLL"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   111
            Left            =   4099
            TabIndex        =   390
            Top             =   225
            Width           =   1320
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total Cofins"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   110
            Left            =   2192
            TabIndex        =   389
            Top             =   225
            Width           =   1440
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total PIS"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   13
            Left            =   458
            TabIndex        =   234
            Top             =   225
            Width           =   1215
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00000000&
         Height          =   2550
         Index           =   15
         Left            =   -74925
         MousePointer    =   1  'Arrow
         TabIndex        =   230
         Top             =   1320
         Width           =   15195
         Begin VB.ComboBox cmbFrete 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":2088D
            Left            =   180
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":208A3
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   421
            ToolTipText     =   "Indicador da natureza do frete contratado."
            Top             =   2070
            Width           =   6405
         End
         Begin VB.CheckBox Chk_enviar_XML_transp 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Enviar xml"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   225
            Left            =   13800
            TabIndex        =   197
            Top             =   2130
            Width           =   1215
         End
         Begin VB.CheckBox chkSedex 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Sedex"
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   225
            Left            =   12840
            TabIndex        =   196
            Top             =   2123
            Width           =   915
         End
         Begin VB.TextBox Txt_numeracao 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7160
            MaxLength       =   50
            TabIndex        =   190
            ToolTipText     =   "Numeração."
            Top             =   1480
            Width           =   1950
         End
         Begin VB.ComboBox txtTransp_uf_Transportadora 
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":209CC
            Left            =   6450
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":20A24
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   180
            ToolTipText     =   "UF."
            Top             =   930
            Width           =   690
         End
         Begin VB.ComboBox txtTransp_uf 
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":20A98
            Left            =   12825
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":20AF0
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   184
            ToolTipText     =   "UF."
            Top             =   930
            Width           =   690
         End
         Begin VB.TextBox txtTransp_pesoliquido 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   10310
            MaxLength       =   10
            TabIndex        =   192
            ToolTipText     =   "Peso líquido."
            Top             =   1480
            Width           =   1170
         End
         Begin VB.TextBox txtTransp_pesoBruto 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   9125
            MaxLength       =   10
            TabIndex        =   191
            ToolTipText     =   "Peso bruto."
            Top             =   1480
            Width           =   1170
         End
         Begin VB.TextBox txtTransp_numero 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   13995
            MaxLength       =   10
            TabIndex        =   178
            ToolTipText     =   "Número."
            Top             =   385
            Width           =   1005
         End
         Begin VB.TextBox txtTransp_qtd 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   13530
            MaxLength       =   50
            TabIndex        =   185
            ToolTipText     =   "Quantidade."
            Top             =   930
            Width           =   1470
         End
         Begin VB.TextBox txtTransp_IE 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   9660
            MaxLength       =   15
            TabIndex        =   182
            ToolTipText     =   "Número da inscrição estadual."
            Top             =   930
            Width           =   2130
         End
         Begin VB.TextBox txtTransp_municipio 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            MaxLength       =   150
            TabIndex        =   179
            ToolTipText     =   "Cidade."
            Top             =   930
            Width           =   6255
         End
         Begin VB.TextBox txtTransp_cnpj 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7155
            MaxLength       =   30
            TabIndex        =   181
            ToolTipText     =   "Número do CNPJ/CPF."
            Top             =   930
            Width           =   2490
         End
         Begin VB.TextBox txtTransp_Placa 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11805
            MaxLength       =   7
            TabIndex        =   183
            ToolTipText     =   "Número da placa do veículo."
            Top             =   930
            Width           =   1005
         End
         Begin VB.TextBox txtTransp_endereco 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7680
            MaxLength       =   255
            TabIndex        =   177
            ToolTipText     =   "Endereço."
            Top             =   385
            Width           =   6285
         End
         Begin VB.TextBox TxtTransp_nome 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   1530
            MaxLength       =   255
            TabIndex        =   175
            ToolTipText     =   "Nome da transportadora."
            Top             =   385
            Width           =   5715
         End
         Begin VB.CommandButton Cmd_cli_forn_transp 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   7260
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":20B64
            Style           =   1  'Graphical
            TabIndex        =   176
            ToolTipText     =   "Localizar cliente/fornecedor."
            Top             =   385
            Width           =   315
         End
         Begin VB.ComboBox Cmb_tipo_transp 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":20C66
            Left            =   180
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":20C73
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   174
            ToolTipText     =   "Tipo da transportadora."
            Top             =   385
            Width           =   1335
         End
         Begin VB.ComboBox Cmb_via_transp 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":20C95
            Left            =   11495
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":20CB1
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   193
            ToolTipText     =   "Via de transporte."
            Top             =   1485
            Width           =   1545
         End
         Begin VB.TextBox Txt_codigo_ANTT 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   13050
            MaxLength       =   20
            TabIndex        =   194
            ToolTipText     =   "Registro nacional de transportador de carga (ANTT)"
            Top             =   1485
            Width           =   1950
         End
         Begin VB.ComboBox Cmb_frete_contratado 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":20D2F
            Left            =   6600
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":20D48
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   195
            ToolTipText     =   "Indicador da natureza do frete contratado."
            Top             =   2070
            Width           =   6135
         End
         Begin VB.CommandButton cmdMarca 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   6735
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":20F59
            Style           =   1  'Graphical
            TabIndex        =   189
            ToolTipText     =   "Localizar marca."
            Top             =   1480
            Width           =   315
         End
         Begin VB.CommandButton cmdEspecie 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   3270
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":2105B
            Style           =   1  'Graphical
            TabIndex        =   187
            ToolTipText     =   "Localizar espécie."
            Top             =   1480
            Width           =   315
         End
         Begin VB.ComboBox Cmb_transp_marca 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   330
            Left            =   3690
            Style           =   2  'Dropdown List
            TabIndex        =   188
            ToolTipText     =   "Marca."
            Top             =   1480
            Width           =   3030
         End
         Begin VB.ComboBox Cmb_transp_especie 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   330
            Left            =   180
            Style           =   2  'Dropdown List
            TabIndex        =   186
            ToolTipText     =   "Espécie."
            Top             =   1480
            Width           =   3075
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Frete"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   139
            Left            =   3157
            TabIndex        =   422
            Top             =   1860
            Width           =   450
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Via de transporte"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   131
            Left            =   11645
            TabIndex        =   410
            Top             =   1290
            Width           =   1245
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Peso líquido"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   130
            Left            =   10475
            TabIndex        =   409
            Top             =   1290
            Width           =   840
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Peso bruto"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   129
            Left            =   9320
            TabIndex        =   408
            Top             =   1290
            Width           =   780
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Numeração"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   128
            Left            =   7730
            TabIndex        =   407
            Top             =   1290
            Width           =   810
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Marca"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   127
            Left            =   4988
            TabIndex        =   406
            Top             =   1290
            Width           =   435
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Código ANTT"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   126
            Left            =   13560
            TabIndex        =   405
            Top             =   1290
            Width           =   930
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Qtde."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   125
            Left            =   14055
            TabIndex        =   404
            Top             =   750
            Width           =   420
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "UF"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   124
            Left            =   13073
            TabIndex        =   403
            Top             =   750
            Width           =   195
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Placa veículo"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   123
            Left            =   11850
            TabIndex        =   402
            Top             =   750
            Width           =   915
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "IE"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   122
            Left            =   10650
            TabIndex        =   401
            Top             =   750
            Width           =   150
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "CNPJ/CPF"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   121
            Left            =   8040
            TabIndex        =   400
            Top             =   750
            Width           =   720
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "UF"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   120
            Left            =   6698
            TabIndex        =   399
            Top             =   750
            Width           =   195
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Número"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   119
            Left            =   14220
            TabIndex        =   398
            Top             =   195
            Width           =   555
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Endereço"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   118
            Left            =   10485
            TabIndex        =   397
            Top             =   195
            Width           =   675
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Transportadora"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   117
            Left            =   3825
            TabIndex        =   396
            Top             =   195
            Width           =   1125
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Espécie"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   32
            Left            =   1447
            TabIndex        =   303
            Top             =   1290
            Width           =   540
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Cidade"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   31
            Left            =   3060
            TabIndex        =   302
            Top             =   750
            Width           =   495
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Tipo"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   1
            Left            =   697
            TabIndex        =   232
            Top             =   195
            Width           =   300
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Frete contratado"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   17
            Left            =   9052
            TabIndex        =   231
            Top             =   1860
            Width           =   1230
         End
      End
      Begin VB.TextBox txtidinttransp 
         Height          =   285
         Left            =   -70710
         TabIndex        =   227
         Top             =   5040
         Visible         =   0   'False
         Width           =   465
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Dados do corpo da nota fiscal"
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   5550
         Index           =   16
         Left            =   -74925
         TabIndex        =   225
         Top             =   1320
         Width           =   15195
         Begin VB.TextBox txtDados_Corpo 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   5115
            Left            =   180
            MultiLine       =   -1  'True
            ScrollBars      =   2  'Vertical
            TabIndex        =   199
            ToolTipText     =   "Texto padrão para corpo da nota."
            Top             =   270
            Width           =   14475
         End
         Begin VB.CommandButton cmdDados_corpo 
            BackColor       =   &H00C0C0C0&
            Height          =   5115
            Left            =   14670
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":2115D
            Style           =   1  'Graphical
            TabIndex        =   200
            ToolTipText     =   "Cadastrar/localizar dados do corpo da nota fiscal."
            Top             =   270
            Width           =   345
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Dados adicionais"
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   3105
         Index           =   17
         Left            =   -74925
         TabIndex        =   224
         Top             =   6870
         Width           =   15195
         Begin VB.TextBox txtDados_DadosAdicionais 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   2685
            Left            =   180
            MaxLength       =   4800
            MultiLine       =   -1  'True
            ScrollBars      =   2  'Vertical
            TabIndex        =   201
            ToolTipText     =   "Texto padrão para dados adicionais da nota."
            Top             =   270
            Width           =   14475
         End
         Begin VB.CommandButton cmdDados_adicionais 
            BackColor       =   &H00C0C0C0&
            Height          =   2685
            Left            =   14670
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":2125F
            Style           =   1  'Graphical
            TabIndex        =   202
            ToolTipText     =   "Cadastrar/lLocalizar dados adicionais."
            Top             =   270
            Width           =   345
         End
      End
      Begin VB.TextBox Txt_ID_duplicata 
         BackColor       =   &H00FFFFFF&
         Enabled         =   0   'False
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   335
         Left            =   -72000
         MaxLength       =   50
         MouseIcon       =   "frmFaturamento_Prod_serv_GNFe.frx":21361
         MousePointer    =   1  'Arrow
         TabIndex        =   221
         Text            =   "0"
         ToolTipText     =   "ID duplicata."
         Top             =   3780
         Visible         =   0   'False
         Width           =   1410
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   2145
         Index           =   18
         Left            =   -74925
         TabIndex        =   217
         Top             =   1320
         Width           =   15195
         Begin VB.CommandButton Cmd_salvar_alteracoes_duplicata 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   10710
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":2166B
            Style           =   1  'Graphical
            TabIndex        =   209
            ToolTipText     =   "Salvar alterações na duplicata."
            Top             =   385
            Width           =   315
         End
         Begin VB.ComboBox cmb_tipopagto 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":216BE
            Left            =   11130
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":216F8
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   210
            ToolTipText     =   "Forma de pagamento/recebimento."
            Top             =   385
            Width           =   3885
         End
         Begin VB.TextBox txtValorDuplicata 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7650
            MaxLength       =   50
            TabIndex        =   206
            ToolTipText     =   "Valor à receber."
            Top             =   385
            Width           =   1080
         End
         Begin VB.TextBox txt_Cond_Recebimento 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   1650
            TabIndex        =   213
            Text            =   "0"
            ToolTipText     =   "Condições de pagamento/recebimento."
            Top             =   930
            Width           =   13035
         End
         Begin VB.ComboBox cbo_PortBanco 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":21806
            Left            =   180
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":21808
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   203
            ToolTipText     =   "Banco."
            Top             =   385
            Width           =   4425
         End
         Begin VB.TextBox txt_Agencia 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4620
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   204
            TabStop         =   0   'False
            Text            =   " "
            ToolTipText     =   "Número da agência."
            Top             =   385
            Width           =   1130
         End
         Begin VB.TextBox txt_Conta 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5760
            Locked          =   -1  'True
            MaxLength       =   10
            TabIndex        =   205
            TabStop         =   0   'False
            Text            =   " "
            ToolTipText     =   "Número da conta."
            Top             =   385
            Width           =   1875
         End
         Begin VB.CommandButton Cmdporcento 
            Appearance      =   0  'Flat
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   14700
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":2180A
            Style           =   1  'Graphical
            TabIndex        =   214
            ToolTipText     =   "Informar condições de recebimento em procentagem."
            Top             =   930
            Width           =   315
         End
         Begin VB.CommandButton Cmd_localizar_tipo_dcto 
            Appearance      =   0  'Flat
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   1230
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":2190C
            Style           =   1  'Graphical
            TabIndex        =   212
            ToolTipText     =   "Localizar tipo do documento."
            Top             =   930
            Width           =   315
         End
         Begin VB.ComboBox cmbtipo_conta 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":21A0E
            Left            =   180
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":21A10
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   211
            ToolTipText     =   "Tipo do documento."
            Top             =   930
            Width           =   1065
         End
         Begin VB.TextBox txtObs_Duplicata 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   525
            Left            =   180
            MultiLine       =   -1  'True
            ScrollBars      =   2  'Vertical
            TabIndex        =   215
            ToolTipText     =   "Observações."
            Top             =   1500
            Width           =   14835
         End
         Begin MSComCtl2.DTPicker txt_Vencimento 
            Height          =   315
            Left            =   8745
            TabIndex        =   207
            ToolTipText     =   "Data de vencimento."
            Top             =   390
            Width           =   1230
            _ExtentX        =   2170
            _ExtentY        =   556
            _Version        =   393216
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            CalendarBackColor=   16777215
            CalendarForeColor=   0
            CalendarTitleBackColor=   8421504
            CalendarTitleForeColor=   16777215
            CalendarTrailingForeColor=   255
            Format          =   103743491
            CurrentDate     =   39057
         End
         Begin MSMask.MaskEdBox txt_Duplicata 
            Height          =   315
            Left            =   9990
            TabIndex        =   208
            ToolTipText     =   "Número da parcela."
            Top             =   390
            Width           =   720
            _ExtentX        =   1270
            _ExtentY        =   556
            _Version        =   393216
            MaxLength       =   7
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Mask            =   "###/###"
            PromptChar      =   "_"
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Condições de pagamento/recebimento"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   138
            Left            =   6787
            TabIndex        =   417
            Top             =   735
            Width           =   2760
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Forma de pagamento/recebimento"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   137
            Left            =   11835
            MousePointer    =   1  'Arrow
            TabIndex        =   416
            Top             =   195
            Width           =   2475
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Parc."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   136
            Left            =   10163
            MousePointer    =   1  'Arrow
            TabIndex        =   415
            Top             =   195
            Width           =   375
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Vencimento"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   135
            Left            =   8948
            MousePointer    =   1  'Arrow
            TabIndex        =   414
            Top             =   195
            Width           =   825
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   134
            Left            =   8010
            MousePointer    =   1  'Arrow
            TabIndex        =   413
            Top             =   195
            Width           =   360
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Conta corrente"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   133
            Left            =   6150
            MousePointer    =   1  'Arrow
            TabIndex        =   412
            Top             =   195
            Width           =   1095
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Agência"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   132
            Left            =   4900
            MousePointer    =   1  'Arrow
            TabIndex        =   411
            Top             =   195
            Width           =   570
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Portador/banco"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   18
            Left            =   1830
            MousePointer    =   1  'Arrow
            TabIndex        =   220
            Top             =   195
            Width           =   1125
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Tipo docto."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   19
            Left            =   307
            TabIndex        =   219
            Top             =   735
            Width           =   810
         End
         Begin VB.Label Label1 
            Alignment       =   2  'Centralizar
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Observação"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   20
            Left            =   7155
            TabIndex        =   218
            Top             =   1290
            Width           =   885
         End
      End
      Begin DrawSuite2014.USToolBar USToolBar6 
         Height          =   975
         Left            =   -74925
         TabIndex        =   222
         Top             =   330
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   1720
         ButtonCount     =   14
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Gerar"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Gerar duplicatas (Insert)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   35
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Financeiro"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Enviar para o financeiro (F3)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   39
         ButtonTop2      =   2
         ButtonWidth2    =   57
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Excluir"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Excluir (F4)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   98
         ButtonTop3      =   2
         ButtonWidth3    =   39
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonCaption4  =   "Relatório"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Relatório (F5)"
         ButtonKey4      =   "4"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   139
         ButtonTop4      =   2
         ButtonWidth4    =   51
         ButtonHeight4   =   21
         ButtonUseMaskColor4=   0   'False
         ButtonCaption5  =   "Anterior"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Registro anterior."
         ButtonKey5      =   "5"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   192
         ButtonTop5      =   2
         ButtonWidth5    =   47
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         ButtonCaption6  =   "Próximo"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Próximo registro."
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   241
         ButtonTop6      =   2
         ButtonWidth6    =   46
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonCaption7  =   "Plano de contas"
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonToolTipText7=   "Plano de contas (F7)"
         ButtonKey7      =   "7"
         ButtonAlignment7=   2
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft7     =   289
         ButtonTop7      =   2
         ButtonWidth7    =   84
         ButtonHeight7   =   21
         ButtonUseMaskColor7=   0   'False
         ButtonCaption8  =   "Impostos"
         ButtonEnabled8  =   0   'False
         ButtonIconSize8 =   32
         ButtonToolTipText8=   "Visualizar impostos (F8)"
         ButtonKey8      =   "8"
         ButtonAlignment8=   2
         BeginProperty ButtonFont8 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft8     =   375
         ButtonTop8      =   2
         ButtonWidth8    =   52
         ButtonHeight8   =   21
         ButtonUseMaskColor8=   0   'False
         ButtonCaption9  =   "Boleto"
         ButtonEnabled9  =   0   'False
         ButtonIconSize9 =   32
         ButtonToolTipText9=   "Emitir boleto (F9)"
         ButtonKey9      =   "9"
         ButtonAlignment9=   2
         BeginProperty ButtonFont9 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft9     =   429
         ButtonTop9      =   2
         ButtonWidth9    =   38
         ButtonHeight9   =   21
         ButtonUseMaskColor9=   0   'False
         ButtonCaption10 =   "Centro de custo"
         ButtonEnabled10 =   0   'False
         ButtonIconSize10=   32
         ButtonToolTipText10=   "Centro de custo (F10)"
         ButtonKey10     =   "10"
         ButtonAlignment10=   2
         BeginProperty ButtonFont10 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft10    =   469
         ButtonTop10     =   2
         ButtonWidth10   =   85
         ButtonHeight10  =   21
         ButtonUseMaskColor10=   0   'False
         ButtonEnabled11 =   0   'False
         ButtonIconSize11=   32
         ButtonAlignment11=   2
         ButtonType11    =   1
         ButtonStyle11   =   -1
         BeginProperty ButtonFont11 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState11   =   -1
         ButtonLeft11    =   556
         ButtonTop11     =   4
         ButtonWidth11   =   2
         ButtonHeight11  =   54
         ButtonCaption12 =   "Ajuda"
         ButtonEnabled12 =   0   'False
         ButtonIconSize12=   32
         ButtonToolTipText12=   "Ajuda (F1)"
         ButtonKey12     =   "12"
         ButtonAlignment12=   2
         BeginProperty ButtonFont12 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft12    =   560
         ButtonTop12     =   2
         ButtonWidth12   =   36
         ButtonHeight12  =   21
         ButtonUseMaskColor12=   0   'False
         ButtonCaption13 =   "Sair"
         ButtonEnabled13 =   0   'False
         ButtonIconSize13=   32
         ButtonToolTipText13=   "Sair (Esc)"
         ButtonKey13     =   "13"
         ButtonAlignment13=   2
         BeginProperty ButtonFont13 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft13    =   598
         ButtonTop13     =   2
         ButtonWidth13   =   26
         ButtonHeight13  =   21
         ButtonUseMaskColor13=   0   'False
         ButtonEnabled14 =   0   'False
         ButtonKey14     =   "14"
         BeginProperty ButtonFont14 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState14   =   5
         ButtonLeft14    =   626
         ButtonTop14     =   2
         ButtonWidth14   =   24
         ButtonHeight14  =   24
         Begin DrawSuite2014.USImageList USImageList6 
            Left            =   12870
            Top             =   180
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmFaturamento_Prod_serv_GNFe.frx":21A12
            Count           =   1
         End
      End
      Begin DrawSuite2014.USProgressBar PBLista 
         Height          =   255
         Index           =   4
         Left            =   -74925
         TabIndex        =   223
         Top             =   9705
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   450
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor2      =   0
         SearchText      =   ""
         Value           =   0
      End
      Begin MSComctlLib.ListView lst_Duplicata 
         Height          =   6210
         Left            =   -74925
         TabIndex        =   216
         Top             =   3480
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   10954
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         Checkboxes      =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         ForeColor       =   -2147483640
         BackColor       =   16777215
         Appearance      =   1
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   8
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "D"
            Text            =   "Vencimento"
            Object.Width           =   2646
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   1
            Object.Tag             =   "N"
            Text            =   "Valor"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   2
            Object.Tag             =   "T"
            Text            =   "Parcela"
            Object.Width           =   1411
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   3
            Object.Tag             =   "N"
            Text            =   "Id"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   4
            Object.Tag             =   "T"
            Text            =   "Env. financeiro"
            Object.Width           =   2646
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   5
            Object.Tag             =   "N"
            Text            =   "Nosso número"
            Object.Width           =   3528
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   6
            Object.Tag             =   "N"
            Text            =   "Remessa"
            Object.Width           =   2470
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   7
            Text            =   "Destinatário"
            Object.Width           =   11298
         EndProperty
      End
      Begin DrawSuite2014.USToolBar USToolBar5 
         Height          =   975
         Left            =   -74925
         TabIndex        =   226
         Top             =   330
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   1720
         ButtonCount     =   11
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Salvar"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Salvar (F3)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   38
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Excluir"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Excluir (F4)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   42
         ButtonTop2      =   2
         ButtonWidth2    =   39
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Relatório"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Relatório (F5)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   83
         ButtonTop3      =   2
         ButtonWidth3    =   51
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonCaption4  =   "Anterior"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Registro anterior."
         ButtonKey4      =   "4"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   136
         ButtonTop4      =   2
         ButtonWidth4    =   47
         ButtonHeight4   =   21
         ButtonUseMaskColor4=   0   'False
         ButtonCaption5  =   "Próximo"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Próximo registro."
         ButtonKey5      =   "5"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   185
         ButtonTop5      =   2
         ButtonWidth5    =   46
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         ButtonCaption6  =   "Impostos"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Visualizar impostos (F8)"
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   233
         ButtonTop6      =   2
         ButtonWidth6    =   52
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonCaption7  =   "Redespacho"
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonToolTipText7=   "Redespacho (F9)"
         ButtonKey7      =   "7"
         ButtonAlignment7=   2
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft7     =   287
         ButtonTop7      =   2
         ButtonWidth7    =   67
         ButtonHeight7   =   21
         ButtonUseMaskColor7=   0   'False
         ButtonEnabled8  =   0   'False
         ButtonIconSize8 =   32
         ButtonAlignment8=   2
         ButtonType8     =   1
         ButtonStyle8    =   -1
         BeginProperty ButtonFont8 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState8    =   -1
         ButtonLeft8     =   356
         ButtonTop8      =   4
         ButtonWidth8    =   2
         ButtonHeight8   =   54
         ButtonCaption9  =   "Ajuda"
         ButtonEnabled9  =   0   'False
         ButtonIconSize9 =   32
         ButtonToolTipText9=   "Ajuda (F1)"
         ButtonKey9      =   "9"
         ButtonAlignment9=   2
         BeginProperty ButtonFont9 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft9     =   360
         ButtonTop9      =   2
         ButtonWidth9    =   36
         ButtonHeight9   =   21
         ButtonUseMaskColor9=   0   'False
         ButtonCaption10 =   "Sair"
         ButtonEnabled10 =   0   'False
         ButtonIconSize10=   32
         ButtonToolTipText10=   "Sair (Esc)"
         ButtonKey10     =   "10"
         ButtonAlignment10=   2
         BeginProperty ButtonFont10 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft10    =   398
         ButtonTop10     =   2
         ButtonWidth10   =   26
         ButtonHeight10  =   21
         ButtonUseMaskColor10=   0   'False
         ButtonEnabled11 =   0   'False
         ButtonIconSize11=   32
         ButtonKey11     =   "11"
         ButtonAlignment11=   2
         BeginProperty ButtonFont11 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState11   =   5
         ButtonLeft11    =   426
         ButtonTop11     =   2
         ButtonWidth11   =   24
         ButtonHeight11  =   24
         ButtonUseMaskColor11=   0   'False
         Begin DrawSuite2014.USImageList USImageList5 
            Left            =   11880
            Top             =   90
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmFaturamento_Prod_serv_GNFe.frx":29757
            Count           =   1
         End
      End
      Begin MSComctlLib.ListView lst_DadosTransp 
         Height          =   5805
         Left            =   -74925
         TabIndex        =   198
         Top             =   3885
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   10239
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         SmallIcons      =   "ImageList1"
         ForeColor       =   -2147483640
         BackColor       =   -2147483643
         Appearance      =   1
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   3
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "T"
            Text            =   "Transportadora"
            Object.Width           =   26114
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   1
            Object.Tag             =   "N"
            Text            =   "ID Transportadora"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   2
            Object.Tag             =   "T"
            Text            =   "Tipo"
            Object.Width           =   0
         EndProperty
      End
      Begin DrawSuite2014.USToolBar USToolBar4 
         Height          =   975
         Left            =   -74925
         TabIndex        =   228
         Top             =   330
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   1720
         ButtonCount     =   12
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Salvar"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Salvar (F3)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   38
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Excluir"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Excluir (F4)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   42
         ButtonTop2      =   2
         ButtonWidth2    =   39
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Relatório"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Relatório (F5)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   83
         ButtonTop3      =   2
         ButtonWidth3    =   51
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonCaption4  =   "Anterior"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Registro anterior."
         ButtonKey4      =   "4"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   136
         ButtonTop4      =   2
         ButtonWidth4    =   47
         ButtonHeight4   =   21
         ButtonUseMaskColor4=   0   'False
         ButtonCaption5  =   "Próximo"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Próximo registro."
         ButtonKey5      =   "5"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   185
         ButtonTop5      =   2
         ButtonWidth5    =   46
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         ButtonCaption6  =   "Impostos"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Visualizar impostos (F8)"
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   233
         ButtonTop6      =   2
         ButtonWidth6    =   52
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonCaption7  =   "Pedido"
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonToolTipText7=   "Buscar transportadora do cliente no pedido (F9)"
         ButtonKey7      =   "7"
         ButtonAlignment7=   2
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft7     =   287
         ButtonTop7      =   2
         ButtonWidth7    =   40
         ButtonHeight7   =   21
         ButtonUseMaskColor7=   0   'False
         ButtonCaption8  =   "Cliente"
         ButtonEnabled8  =   0   'False
         ButtonIconSize8 =   32
         ButtonToolTipText8=   "Buscar transportadora do cliente (F10)"
         ButtonKey8      =   "8"
         ButtonAlignment8=   2
         BeginProperty ButtonFont8 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft8     =   329
         ButtonTop8      =   2
         ButtonWidth8    =   41
         ButtonHeight8   =   21
         ButtonUseMaskColor8=   0   'False
         ButtonEnabled9  =   0   'False
         ButtonIconSize9 =   32
         ButtonAlignment9=   2
         ButtonType9     =   1
         ButtonStyle9    =   -1
         BeginProperty ButtonFont9 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState9    =   -1
         ButtonLeft9     =   372
         ButtonTop9      =   4
         ButtonWidth9    =   2
         ButtonHeight9   =   54
         ButtonCaption10 =   "Ajuda"
         ButtonEnabled10 =   0   'False
         ButtonIconSize10=   32
         ButtonToolTipText10=   "Ajuda (F1)"
         ButtonKey10     =   "10"
         ButtonAlignment10=   2
         BeginProperty ButtonFont10 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft10    =   376
         ButtonTop10     =   2
         ButtonWidth10   =   36
         ButtonHeight10  =   21
         ButtonUseMaskColor10=   0   'False
         ButtonCaption11 =   "Sair"
         ButtonEnabled11 =   0   'False
         ButtonIconSize11=   32
         ButtonToolTipText11=   "Sair (Esc)"
         ButtonKey11     =   "11"
         ButtonAlignment11=   2
         BeginProperty ButtonFont11 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft11    =   414
         ButtonTop11     =   2
         ButtonWidth11   =   26
         ButtonHeight11  =   21
         ButtonUseMaskColor11=   0   'False
         ButtonEnabled12 =   0   'False
         ButtonKey12     =   "12"
         BeginProperty ButtonFont12 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState12   =   5
         ButtonLeft12    =   442
         ButtonTop12     =   2
         ButtonWidth12   =   24
         ButtonHeight12  =   24
         ButtonUseMaskColor12=   0   'False
         Begin DrawSuite2014.USImageList USImageList4 
            Left            =   10830
            Top             =   210
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmFaturamento_Prod_serv_GNFe.frx":2F625
            Count           =   1
         End
      End
      Begin DrawSuite2014.USProgressBar PBLista 
         Height          =   255
         Index           =   3
         Left            =   -74925
         TabIndex        =   229
         Top             =   9705
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   450
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor2      =   0
         SearchText      =   ""
         Value           =   0
      End
      Begin DrawSuite2014.USToolBar USToolBar3 
         Height          =   975
         Left            =   -74925
         TabIndex        =   236
         Top             =   330
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   1720
         ButtonCount     =   11
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Novo"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Novo (Insert)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   33
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Salvar"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Salvar (F3)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   37
         ButtonTop2      =   2
         ButtonWidth2    =   38
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Excluir"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Excluir (F4)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   77
         ButtonTop3      =   2
         ButtonWidth3    =   39
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonCaption4  =   "Relatório"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Relatório (F5)"
         ButtonKey4      =   "4"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   118
         ButtonTop4      =   2
         ButtonWidth4    =   51
         ButtonHeight4   =   21
         ButtonUseMaskColor4=   0   'False
         ButtonCaption5  =   "Anterior"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Registro anterior."
         ButtonKey5      =   "5"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   171
         ButtonTop5      =   2
         ButtonWidth5    =   47
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         ButtonCaption6  =   "Próximo"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Próximo registro."
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   220
         ButtonTop6      =   2
         ButtonWidth6    =   46
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonCaption7  =   "Impostos"
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonToolTipText7=   "Impostos sobre serviço (F7)"
         ButtonKey7      =   "7"
         ButtonAlignment7=   2
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft7     =   268
         ButtonTop7      =   2
         ButtonWidth7    =   52
         ButtonHeight7   =   21
         ButtonUseMaskColor7=   0   'False
         ButtonEnabled8  =   0   'False
         ButtonIconSize8 =   32
         ButtonAlignment8=   2
         ButtonType8     =   1
         ButtonStyle8    =   -1
         BeginProperty ButtonFont8 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState8    =   -1
         ButtonLeft8     =   322
         ButtonTop8      =   4
         ButtonWidth8    =   2
         ButtonHeight8   =   54
         ButtonCaption9  =   "Ajuda"
         ButtonEnabled9  =   0   'False
         ButtonIconSize9 =   32
         ButtonToolTipText9=   "Ajuda (F1)"
         ButtonKey9      =   "9"
         ButtonAlignment9=   2
         BeginProperty ButtonFont9 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft9     =   326
         ButtonTop9      =   2
         ButtonWidth9    =   36
         ButtonHeight9   =   21
         ButtonUseMaskColor9=   0   'False
         ButtonCaption10 =   "Sair"
         ButtonEnabled10 =   0   'False
         ButtonIconSize10=   32
         ButtonToolTipText10=   "Sair (Esc)"
         ButtonKey10     =   "10"
         ButtonAlignment10=   2
         BeginProperty ButtonFont10 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft10    =   364
         ButtonTop10     =   2
         ButtonWidth10   =   26
         ButtonHeight10  =   21
         ButtonUseMaskColor10=   0   'False
         ButtonEnabled11 =   0   'False
         ButtonIconSize11=   32
         ButtonKey11     =   "11"
         ButtonAlignment11=   2
         BeginProperty ButtonFont11 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState11   =   5
         ButtonLeft11    =   392
         ButtonTop11     =   2
         ButtonWidth11   =   24
         ButtonHeight11  =   24
         ButtonUseMaskColor11=   0   'False
         Begin DrawSuite2014.USImageList USImageList3 
            Left            =   12420
            Top             =   120
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmFaturamento_Prod_serv_GNFe.frx":35BA8
            Count           =   1
         End
      End
      Begin DrawSuite2014.USToolBar USToolBar2 
         Height          =   975
         Left            =   -74925
         TabIndex        =   255
         Top             =   330
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   1720
         ButtonCount     =   14
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Novo"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Novo (Insert)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   33
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Salvar"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Salvar (F3)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   37
         ButtonTop2      =   2
         ButtonWidth2    =   38
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Excluir"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Excluir (F4)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   77
         ButtonTop3      =   2
         ButtonWidth3    =   39
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonCaption4  =   "Relatório"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Relatório (F5)"
         ButtonKey4      =   "4"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   118
         ButtonTop4      =   2
         ButtonWidth4    =   51
         ButtonHeight4   =   21
         ButtonUseMaskColor4=   0   'False
         ButtonCaption5  =   "Anterior"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Registro anterior."
         ButtonKey5      =   "5"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   171
         ButtonTop5      =   2
         ButtonWidth5    =   47
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         ButtonCaption6  =   "Próximo"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Próximo registro."
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   220
         ButtonTop6      =   2
         ButtonWidth6    =   46
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonCaption7  =   "Impostos"
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonToolTipText7=   "Visualizar impostos (F8)"
         ButtonKey7      =   "7"
         ButtonAlignment7=   2
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft7     =   268
         ButtonTop7      =   2
         ButtonWidth7    =   52
         ButtonHeight7   =   21
         ButtonUseMaskColor7=   0   'False
         ButtonCaption8  =   "Relacionamento"
         ButtonEnabled8  =   0   'False
         ButtonIconSize8 =   32
         ButtonToolTipText8=   "Cadastrar/localizar nota fiscal para relacionamento (F9)"
         ButtonKey8      =   "8"
         ButtonAlignment8=   2
         BeginProperty ButtonFont8 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft8     =   322
         ButtonTop8      =   2
         ButtonWidth8    =   84
         ButtonHeight8   =   21
         ButtonUseMaskColor8=   0   'False
         ButtonCaption9  =   "Importação"
         ButtonEnabled9  =   0   'False
         ButtonIconSize9 =   32
         ButtonToolTipText9=   "Importação (F12)"
         ButtonKey9      =   "9"
         ButtonAlignment9=   2
         BeginProperty ButtonFont9 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft9     =   408
         ButtonTop9      =   2
         ButtonWidth9    =   63
         ButtonHeight9   =   21
         ButtonUseMaskColor9=   0   'False
         ButtonCaption10 =   "Empenho"
         ButtonEnabled10 =   0   'False
         ButtonIconSize10=   32
         ButtonToolTipText10=   "Empenhar produto."
         ButtonKey10     =   "10"
         ButtonAlignment10=   2
         BeginProperty ButtonFont10 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft10    =   473
         ButtonTop10     =   2
         ButtonWidth10   =   52
         ButtonHeight10  =   21
         ButtonUseMaskColor10=   0   'False
         ButtonEnabled11 =   0   'False
         ButtonIconSize11=   32
         ButtonAlignment11=   2
         ButtonType11    =   1
         ButtonStyle11   =   -1
         BeginProperty ButtonFont11 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState11   =   -1
         ButtonLeft11    =   527
         ButtonTop11     =   4
         ButtonWidth11   =   2
         ButtonHeight11  =   54
         ButtonCaption12 =   "Ajuda"
         ButtonEnabled12 =   0   'False
         ButtonIconSize12=   32
         ButtonToolTipText12=   "Ajuda (F1)"
         ButtonKey12     =   "12"
         ButtonAlignment12=   2
         BeginProperty ButtonFont12 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft12    =   531
         ButtonTop12     =   2
         ButtonWidth12   =   36
         ButtonHeight12  =   21
         ButtonUseMaskColor12=   0   'False
         ButtonCaption13 =   "Sair"
         ButtonEnabled13 =   0   'False
         ButtonIconSize13=   32
         ButtonToolTipText13=   "Sair (Esc)"
         ButtonKey13     =   "13"
         ButtonAlignment13=   2
         BeginProperty ButtonFont13 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft13    =   569
         ButtonTop13     =   2
         ButtonWidth13   =   26
         ButtonHeight13  =   21
         ButtonUseMaskColor13=   0   'False
         ButtonEnabled14 =   0   'False
         ButtonKey14     =   "14"
         BeginProperty ButtonFont14 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState14   =   5
         ButtonLeft14    =   597
         ButtonTop14     =   2
         ButtonWidth14   =   24
         ButtonHeight14  =   24
         ButtonUseMaskColor14=   0   'False
         Begin DrawSuite2014.USImageList USImageList2 
            Left            =   12150
            Top             =   180
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmFaturamento_Prod_serv_GNFe.frx":3B984
            Count           =   1
         End
      End
      Begin DrawSuite2014.USProgressBar PBLista 
         Height          =   255
         Index           =   0
         Left            =   75
         TabIndex        =   272
         Top             =   9720
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   450
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor2      =   0
         SearchText      =   ""
         Value           =   0
      End
      Begin MSComctlLib.ListView ListaNota 
         Height          =   2340
         Left            =   75
         TabIndex        =   74
         Top             =   6255
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   4128
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         Checkboxes      =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         ForeColor       =   -2147483641
         BackColor       =   16777215
         Appearance      =   1
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   13
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "N"
            Object.Width           =   529
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   1
            Object.Tag             =   "D"
            Text            =   "Dt. emissão"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   2
            Object.Tag             =   "N"
            Text            =   "Ordem fat."
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   3
            Object.Tag             =   "N"
            Text            =   "Nota fiscal"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   4
            Object.Tag             =   "T"
            Text            =   "Tipo"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   5
            Object.Tag             =   "T"
            Text            =   "Série"
            Object.Width           =   1058
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   6
            Object.Tag             =   "N"
            Text            =   "Valor total"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   7
            Object.Tag             =   "T"
            Text            =   "Destinatário"
            Object.Width           =   6006
         EndProperty
         BeginProperty ColumnHeader(9) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   8
            Object.Tag             =   "T"
            Text            =   "Status"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(10) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   9
            Object.Tag             =   "T"
            Text            =   "Enviada"
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(11) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   10
            Object.Tag             =   "T"
            Text            =   "Validada"
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(12) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   11
            Object.Tag             =   "T"
            Text            =   "Status NFe"
            Object.Width           =   3704
         EndProperty
         BeginProperty ColumnHeader(13) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   12
            Object.Tag             =   "N"
            Text            =   "IDempresa"
            Object.Width           =   0
         EndProperty
      End
      Begin DrawSuite2014.USToolBar USToolBar1 
         Height          =   975
         Left            =   75
         TabIndex        =   273
         Top             =   330
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   1720
         ButtonCount     =   18
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Novo"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Novo (Insert)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   33
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Filtrar"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Filtrar (F2)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   37
         ButtonTop2      =   2
         ButtonWidth2    =   36
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Salvar"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Salvar (F3)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   75
         ButtonTop3      =   2
         ButtonWidth3    =   38
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonCaption4  =   "Excluir"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Excluir (F4)"
         ButtonKey4      =   "4"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   115
         ButtonTop4      =   2
         ButtonWidth4    =   39
         ButtonHeight4   =   21
         ButtonUseMaskColor4=   0   'False
         ButtonCaption5  =   "Relatório"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Relatório (F5)"
         ButtonKey5      =   "5"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   156
         ButtonTop5      =   2
         ButtonWidth5    =   51
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         ButtonCaption6  =   "Anterior"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Registro anterior."
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   209
         ButtonTop6      =   2
         ButtonWidth6    =   47
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonCaption7  =   "Próximo"
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonToolTipText7=   "Próximo registro."
         ButtonKey7      =   "7"
         ButtonAlignment7=   2
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft7     =   258
         ButtonTop7      =   2
         ButtonWidth7    =   46
         ButtonHeight7   =   21
         ButtonUseMaskColor7=   0   'False
         ButtonCaption8  =   "Copiar"
         ButtonEnabled8  =   0   'False
         ButtonIconSize8 =   32
         ButtonToolTipText8=   "Copiar (F7)"
         ButtonKey8      =   "8"
         ButtonAlignment8=   2
         BeginProperty ButtonFont8 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft8     =   306
         ButtonTop8      =   2
         ButtonWidth8    =   39
         ButtonHeight8   =   21
         ButtonUseMaskColor8=   0   'False
         ButtonCaption9  =   "Validação"
         ButtonEnabled9  =   0   'False
         ButtonIconSize9 =   32
         ButtonToolTipText9=   "Validar/cancelar validação (F8)"
         ButtonKey9      =   "9"
         ButtonAlignment9=   2
         BeginProperty ButtonFont9 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft9     =   347
         ButtonTop9      =   2
         ButtonWidth9    =   53
         ButtonHeight9   =   21
         ButtonUseMaskColor9=   0   'False
         ButtonCaption10 =   "Impostos"
         ButtonEnabled10 =   0   'False
         ButtonIconSize10=   32
         ButtonToolTipText10=   "Visualizar impostos (F9)"
         ButtonKey10     =   "10"
         ButtonAlignment10=   2
         BeginProperty ButtonFont10 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft10    =   402
         ButtonTop10     =   2
         ButtonWidth10   =   52
         ButtonHeight10  =   21
         ButtonUseMaskColor10=   0   'False
         ButtonCaption11 =   "NFe"
         ButtonEnabled11 =   0   'False
         ButtonIconSize11=   32
         ButtonToolTipText11=   "Cadastrar dados da NFe (F10)"
         ButtonKey11     =   "11"
         ButtonAlignment11=   2
         BeginProperty ButtonFont11 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft11    =   456
         ButtonTop11     =   2
         ButtonWidth11   =   27
         ButtonHeight11  =   21
         ButtonUseMaskColor11=   0   'False
         ButtonCaption12 =   "NFSe"
         ButtonEnabled12 =   0   'False
         ButtonIconSize12=   32
         ButtonToolTipText12=   "Marcar/desmarcar como enviada para a sefaz/prefeitura (F11)"
         ButtonKey12     =   "12"
         ButtonAlignment12=   2
         BeginProperty ButtonFont12 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft12    =   485
         ButtonTop12     =   2
         ButtonWidth12   =   33
         ButtonHeight12  =   21
         ButtonUseMaskColor12=   0   'False
         ButtonCaption13 =   "Check-list"
         ButtonEnabled13 =   0   'False
         ButtonIconSize13=   32
         ButtonToolTipText13=   "Check-list de importação."
         ButtonKey13     =   "13"
         ButtonAlignment13=   2
         BeginProperty ButtonFont13 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft13    =   520
         ButtonTop13     =   2
         ButtonWidth13   =   54
         ButtonHeight13  =   21
         ButtonUseMaskColor13=   0   'False
         ButtonCaption14 =   "Atualizar"
         ButtonEnabled14 =   0   'False
         ButtonIconSize14=   32
         ButtonToolTipText14=   "Utilizado pelo administrador do sistema."
         ButtonKey14     =   "14"
         ButtonAlignment14=   2
         BeginProperty ButtonFont14 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft14    =   576
         ButtonTop14     =   2
         ButtonWidth14   =   50
         ButtonHeight14  =   21
         ButtonUseMaskColor14=   0   'False
         ButtonEnabled15 =   0   'False
         ButtonIconSize15=   32
         ButtonAlignment15=   2
         ButtonType15    =   1
         ButtonStyle15   =   -1
         BeginProperty ButtonFont15 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState15   =   -1
         ButtonLeft15    =   628
         ButtonTop15     =   4
         ButtonWidth15   =   2
         ButtonHeight15  =   54
         ButtonCaption16 =   "Ajuda"
         ButtonEnabled16 =   0   'False
         ButtonIconSize16=   32
         ButtonToolTipText16=   "Ajuda (F1)"
         ButtonKey16     =   "16"
         ButtonAlignment16=   2
         BeginProperty ButtonFont16 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft16    =   632
         ButtonTop16     =   2
         ButtonWidth16   =   36
         ButtonHeight16  =   21
         ButtonUseMaskColor16=   0   'False
         ButtonCaption17 =   "Sair"
         ButtonEnabled17 =   0   'False
         ButtonIconSize17=   32
         ButtonToolTipText17=   "Sair (Esc)"
         ButtonKey17     =   "17"
         ButtonAlignment17=   2
         BeginProperty ButtonFont17 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft17    =   670
         ButtonTop17     =   2
         ButtonWidth17   =   26
         ButtonHeight17  =   21
         ButtonUseMaskColor17=   0   'False
         ButtonEnabled18 =   0   'False
         ButtonIconSize18=   32
         ButtonKey18     =   "18"
         ButtonAlignment18=   2
         BeginProperty ButtonFont18 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState18   =   5
         ButtonLeft18    =   698
         ButtonTop18     =   2
         ButtonWidth18   =   24
         ButtonHeight18  =   24
         ButtonUseMaskColor18=   0   'False
         Begin DrawSuite2014.USImageList USImageList1 
            Left            =   12090
            Top             =   240
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmFaturamento_Prod_serv_GNFe.frx":43653
            Count           =   1
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   720
         Index           =   21
         Left            =   75
         TabIndex        =   266
         Top             =   1320
         Width           =   15195
         Begin VB.Frame Frame1 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Tipo"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   720
            Index           =   4
            Left            =   11460
            TabIndex        =   299
            Top             =   0
            Width           =   1050
            Begin VB.OptionButton opt_Entrada 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Entrada"
               ForeColor       =   &H00000000&
               Height          =   195
               Left            =   30
               TabIndex        =   33
               Top             =   450
               Width           =   975
            End
            Begin VB.OptionButton opt_Saida 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Saída"
               DisabledPicture =   "frmFaturamento_Prod_serv_GNFe.frx":4E0B1
               ForeColor       =   &H00000000&
               Height          =   195
               Left            =   30
               TabIndex        =   32
               Top             =   240
               Width           =   975
            End
         End
         Begin VB.Frame Frame1 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Status"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   720
            Index           =   3
            Left            =   10200
            TabIndex        =   298
            Top             =   0
            Width           =   1230
            Begin VB.OptionButton opt_Cancelada 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Cancelada"
               ForeColor       =   &H00000000&
               Height          =   195
               Left            =   30
               TabIndex        =   31
               Top             =   450
               Width           =   1155
            End
            Begin VB.OptionButton opt_Ativa 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Ativa"
               DisabledPicture =   "frmFaturamento_Prod_serv_GNFe.frx":297FF3
               ForeColor       =   &H00000000&
               Height          =   195
               Left            =   30
               TabIndex        =   30
               Top             =   240
               Width           =   1155
            End
         End
         Begin VB.Frame Frame1 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Tipo do formulário"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   720
            Index           =   0
            Left            =   12510
            TabIndex        =   267
            Top             =   0
            Width           =   1770
            Begin VB.OptionButton optProduto 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Produtos"
               Enabled         =   0   'False
               Height          =   195
               Left            =   450
               TabIndex        =   34
               Top             =   210
               Width           =   945
            End
            Begin VB.OptionButton optServico 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Serviços"
               Enabled         =   0   'False
               Height          =   195
               Left            =   450
               TabIndex        =   35
               Top             =   450
               Width           =   915
            End
         End
         Begin VB.Frame Frame1 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Enviada"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   720
            Index           =   5
            Left            =   14310
            TabIndex        =   297
            Top             =   0
            Width           =   900
            Begin VB.OptionButton Opt_sim 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Sim"
               Enabled         =   0   'False
               ForeColor       =   &H00000000&
               Height          =   195
               Left            =   150
               TabIndex        =   36
               Top             =   210
               Width           =   555
            End
            Begin VB.OptionButton Opt_nao 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Não"
               Enabled         =   0   'False
               ForeColor       =   &H00000000&
               Height          =   195
               Left            =   150
               TabIndex        =   37
               Top             =   450
               Width           =   585
            End
         End
      End
      Begin DrawSuite2014.USToolBar USToolBar7 
         Height          =   975
         Left            =   -74925
         TabIndex        =   274
         Top             =   330
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   1720
         ButtonCount     =   7
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Filtrar"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Filtrar (F2)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   42
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Gerar OF"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Gerar ordem de faturamento (F3)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   46
         ButtonTop2      =   2
         ButtonWidth2    =   57
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Relatório"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Relatório (F5)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   105
         ButtonTop3      =   2
         ButtonWidth3    =   60
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonAlignment4=   2
         ButtonType4     =   1
         ButtonStyle4    =   -1
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState4    =   -1
         ButtonLeft4     =   167
         ButtonTop4      =   4
         ButtonWidth4    =   2
         ButtonHeight4   =   54
         ButtonCaption5  =   "Ajuda"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Ajuda (F1)"
         ButtonKey5      =   "5"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   171
         ButtonTop5      =   2
         ButtonWidth5    =   41
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         ButtonCaption6  =   "Sair"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Sair (Esc)"
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   214
         ButtonTop6      =   2
         ButtonWidth6    =   30
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonKey7      =   "7"
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState7    =   5
         ButtonLeft7     =   246
         ButtonTop7      =   2
         ButtonWidth7    =   24
         ButtonHeight7   =   24
         ButtonUseMaskColor7=   0   'False
         Begin DrawSuite2014.USImageList USImageList7 
            Left            =   13380
            Top             =   210
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmFaturamento_Prod_serv_GNFe.frx":4E1F35
            Count           =   1
         End
      End
      Begin DrawSuite2014.USProgressBar PBLista 
         Height          =   255
         Index           =   5
         Left            =   -74925
         TabIndex        =   275
         Top             =   9720
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   450
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor2      =   0
         SearchText      =   "Atualizando..."
         Value           =   0
      End
      Begin DrawSuite2014.USToolBar USToolBar8 
         Height          =   975
         Left            =   -74925
         TabIndex        =   288
         Top             =   330
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   1720
         ButtonCount     =   4
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Filtrar"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Filtrar (F2)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   42
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Ajuda"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Ajuda (F1)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   46
         ButtonTop2      =   2
         ButtonWidth2    =   41
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Sair"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Sair (Esc)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   89
         ButtonTop3      =   2
         ButtonWidth3    =   30
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonKey4      =   "4"
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState4    =   5
         ButtonLeft4     =   121
         ButtonTop4      =   2
         ButtonWidth4    =   24
         ButtonHeight4   =   24
         ButtonUseMaskColor4=   0   'False
         Begin DrawSuite2014.USImageList USImageList8 
            Left            =   13380
            Top             =   210
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmFaturamento_Prod_serv_GNFe.frx":4E5692
            Count           =   1
         End
      End
      Begin MSComctlLib.ListView Lista_carteira 
         Height          =   5505
         Left            =   -74925
         TabIndex        =   8
         Top             =   3570
         Visible         =   0   'False
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   9710
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         AllowReorder    =   -1  'True
         Checkboxes      =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         SmallIcons      =   "ImageList1"
         ForeColor       =   0
         BackColor       =   16777215
         Appearance      =   1
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   6.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   31
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "N"
            Object.Width           =   529
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   1
            Object.Tag             =   "N"
            Text            =   "Cotacao"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   2
            Object.Tag             =   "T"
            Text            =   "Empresa"
            Object.Width           =   3175
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   3
            Object.Tag             =   "T"
            Text            =   "Cód. int."
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   4
            Object.Tag             =   "N"
            Text            =   "Rev."
            Object.Width           =   882
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   5
            Object.Tag             =   "T"
            Text            =   "Cód. ref."
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   6
            Object.Tag             =   "T"
            Text            =   "Descrição"
            Object.Width           =   3881
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   7
            Object.Tag             =   "T"
            Text            =   "Un. com."
            Object.Width           =   1323
         EndProperty
         BeginProperty ColumnHeader(9) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   8
            Object.Tag             =   "T"
            Text            =   "Ped. cliente"
            Object.Width           =   1587
         EndProperty
         BeginProperty ColumnHeader(10) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   9
            Object.Tag             =   "T"
            Text            =   "N. item"
            Object.Width           =   1411
         EndProperty
         BeginProperty ColumnHeader(11) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   10
            Object.Tag             =   "D"
            Text            =   "Pr. final"
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(12) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   11
            Object.Tag             =   "N"
            Text            =   "Vlr. total"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(13) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   12
            Object.Tag             =   "T"
            Text            =   "Ped. int."
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(14) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   13
            Object.Tag             =   "N"
            Text            =   "Rev."
            Object.Width           =   926
         EndProperty
         BeginProperty ColumnHeader(15) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   14
            Object.Tag             =   "T"
            Text            =   "Programa"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(16) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   15
            Object.Tag             =   "N"
            Text            =   "Rev."
            Object.Width           =   935
         EndProperty
         BeginProperty ColumnHeader(17) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   16
            Object.Tag             =   "N"
            Text            =   "ID"
            Object.Width           =   970
         EndProperty
         BeginProperty ColumnHeader(18) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   17
            Object.Tag             =   "T"
            Text            =   "Cliente"
            Object.Width           =   4939
         EndProperty
         BeginProperty ColumnHeader(19) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   18
            Object.Tag             =   "T"
            Text            =   "UF"
            Object.Width           =   970
         EndProperty
         BeginProperty ColumnHeader(20) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   19
            Object.Tag             =   "T"
            Text            =   "Antec."
            Object.Width           =   1147
         EndProperty
         BeginProperty ColumnHeader(21) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   20
            Object.Tag             =   "T"
            Text            =   "Parc."
            Object.Width           =   1147
         EndProperty
         BeginProperty ColumnHeader(22) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   21
            Object.Tag             =   "T"
            Text            =   "Moeda"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(23) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   22
            Object.Tag             =   "T"
            Text            =   "Transportadora"
            Object.Width           =   3881
         EndProperty
         BeginProperty ColumnHeader(24) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   23
            Object.Tag             =   "N"
            Text            =   "Qtde. vend."
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(25) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   24
            Object.Tag             =   "N"
            Text            =   "Qtde. faturar"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(26) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   25
            Object.Tag             =   "N"
            Text            =   "Qtde. faturada"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(27) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   26
            Object.Tag             =   "N"
            Text            =   "Saldo"
            Object.Width           =   1587
         EndProperty
         BeginProperty ColumnHeader(28) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   27
            Object.Tag             =   "N"
            Text            =   "Emp. est."
            Object.Width           =   1587
         EndProperty
         BeginProperty ColumnHeader(29) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   28
            Object.Tag             =   "N"
            Text            =   "Emp. prod."
            Object.Width           =   1587
         EndProperty
         BeginProperty ColumnHeader(30) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   29
            Object.Tag             =   "T"
            Text            =   "Observações"
            Object.Width           =   5292
         EndProperty
         BeginProperty ColumnHeader(31) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   30
            Object.Tag             =   "N"
            Text            =   "TabelaSN"
            Object.Width           =   0
         EndProperty
      End
      Begin MSComctlLib.ListView ListaProdutos 
         Height          =   2370
         Left            =   -74910
         TabIndex        =   123
         Top             =   4695
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   4180
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         Checkboxes      =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         ForeColor       =   -2147483641
         BackColor       =   16777215
         Appearance      =   1
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   6.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   24
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "N"
            Object.Width           =   1411
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   1
            Object.Tag             =   "T"
            Text            =   "Cod. interno"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   2
            Object.Tag             =   "T"
            Text            =   "CFOP"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   3
            Object.Tag             =   "T"
            Text            =   "NCM"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   4
            Object.Tag             =   "T"
            Text            =   "Descrição"
            Object.Width           =   5477
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   5
            Object.Tag             =   "T"
            Text            =   "Un. est."
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   6
            Object.Tag             =   "T"
            Text            =   "Un. com."
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   7
            Object.Tag             =   "N"
            Text            =   "Qtde."
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(9) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   8
            Object.Tag             =   "N"
            Text            =   "Vlr. unit."
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(10) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   9
            Object.Tag             =   "N"
            Text            =   "Vlr. total"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(11) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   10
            Object.Tag             =   "N"
            Text            =   "ICMS"
            Object.Width           =   1235
         EndProperty
         BeginProperty ColumnHeader(12) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   11
            Object.Tag             =   "N"
            Text            =   "Vlr. ICMS"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(13) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   12
            Object.Tag             =   "N"
            Text            =   "IPI"
            Object.Width           =   1235
         EndProperty
         BeginProperty ColumnHeader(14) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   13
            Object.Tag             =   "N"
            Text            =   "Vlr. IPI"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(15) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   14
            Object.Tag             =   "N"
            Text            =   "Ordem"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(16) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   15
            Object.Tag             =   "T"
            Text            =   "Ped. cliente"
            Object.Width           =   2646
         EndProperty
         BeginProperty ColumnHeader(17) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   16
            Object.Tag             =   "N"
            Text            =   "Vlr. frete"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(18) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   17
            Object.Tag             =   "N"
            Text            =   "Vlr. seguro"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(19) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   18
            Object.Tag             =   "N"
            Text            =   "Vlr. desp. acess."
            Object.Width           =   2469
         EndProperty
         BeginProperty ColumnHeader(20) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   19
            Object.Tag             =   "N"
            Text            =   "Vlr. desconto"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(21) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   20
            Object.Tag             =   "N"
            Text            =   "Vlr. ICMS int dest."
            Object.Width           =   2469
         EndProperty
         BeginProperty ColumnHeader(22) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   21
            Object.Tag             =   "N"
            Text            =   "Vlr. ICMS int. ori."
            Object.Width           =   2469
         EndProperty
         BeginProperty ColumnHeader(23) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   22
            Object.Tag             =   "N"
            Text            =   "Vlr. FCP"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(24) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   23
            Object.Tag             =   "T"
            Text            =   "Empenhado"
            Object.Width           =   2117
         EndProperty
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Totalização"
         Height          =   465
         Index           =   8
         Left            =   75
         TabIndex        =   262
         Top             =   9240
         Width           =   15195
         Begin VB.Label Lbl1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   " "
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   195
            Left            =   1200
            TabIndex        =   263
            Top             =   180
            Width           =   13875
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Vlr. total faturado últ. 12 meses"
         Height          =   465
         Index           =   28
         Left            =   12585
         TabIndex        =   310
         Top             =   9240
         Visible         =   0   'False
         Width           =   2685
         Begin VB.Label Lbl2 
            Alignment       =   2  'Centralizar
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "0,00"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   195
            Left            =   1140
            TabIndex        =   311
            Top             =   180
            Width           =   375
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Enabled         =   0   'False
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000005&
         Height          =   1365
         Index           =   12
         Left            =   -74925
         TabIndex        =   238
         Top             =   1305
         Width           =   15195
         Begin VB.TextBox Txt_ID_CFOP_serv 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4230
            Locked          =   -1  'True
            TabIndex        =   149
            TabStop         =   0   'False
            ToolTipText     =   "ID da CFOP."
            Top             =   390
            Width           =   585
         End
         Begin VB.CheckBox Chk_CFOP_serv 
            BackColor       =   &H00E0E0E0&
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   4230
            TabIndex        =   295
            Top             =   195
            Width           =   195
         End
         Begin VB.TextBox txtcodServ 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            MaxLength       =   50
            TabIndex        =   145
            ToolTipText     =   "Código interno."
            Top             =   385
            Width           =   1695
         End
         Begin VB.TextBox txtDescserv 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2430
            Locked          =   -1  'True
            MaxLength       =   255
            TabIndex        =   160
            TabStop         =   0   'False
            ToolTipText     =   "Descrição."
            Top             =   930
            Width           =   6315
         End
         Begin VB.TextBox txtqtdserv 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   13765
            TabIndex        =   157
            ToolTipText     =   "Quantidade."
            Top             =   390
            Width           =   1250
         End
         Begin VB.TextBox txtVlrunitserv 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            TabIndex        =   158
            ToolTipText     =   "Valor unitário."
            Top             =   930
            Width           =   1110
         End
         Begin VB.TextBox txtVlrtotalserv 
            Alignment       =   1  'Alinhar à Direita
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   1305
            Locked          =   -1  'True
            TabIndex        =   159
            TabStop         =   0   'False
            ToolTipText     =   "Valor total."
            Top             =   930
            Width           =   1110
         End
         Begin VB.TextBox txt_pcclienteserv 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   10380
            MaxLength       =   60
            TabIndex        =   163
            ToolTipText     =   "Número do pedido de compra do cliente."
            Top             =   930
            Width           =   2055
         End
         Begin VB.CommandButton cmdservicos 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   2220
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":4E77CF
            Style           =   1  'Graphical
            TabIndex        =   147
            ToolTipText     =   "Localizar serviços."
            Top             =   385
            Width           =   315
         End
         Begin VB.TextBox txtof_servico 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   8760
            TabIndex        =   161
            ToolTipText     =   "Número da ordem/lote."
            Top             =   930
            Width           =   1215
         End
         Begin VB.ComboBox txtunserv 
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":4E78D1
            Left            =   12180
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":4E7926
            Locked          =   -1  'True
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   155
            TabStop         =   0   'False
            ToolTipText     =   "Unidade de estoque."
            Top             =   390
            Width           =   780
         End
         Begin VB.CommandButton cmdfiltrarordem_servico 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   9990
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":4E7996
            Style           =   1  'Graphical
            TabIndex        =   162
            ToolTipText     =   "Localizar ordem/lote."
            Top             =   930
            Width           =   315
         End
         Begin VB.CommandButton Cmd_filtrar_prod_serv 
            Appearance      =   0  'Flat
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Index           =   1
            Left            =   1890
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":4E7A98
            Style           =   1  'Graphical
            TabIndex        =   146
            ToolTipText     =   "Filtrar por código interno."
            Top             =   385
            Width           =   315
         End
         Begin VB.CheckBox Chk_servico_executado_cliente 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Serviço executado no cliente?"
            Height          =   195
            Left            =   12535
            TabIndex        =   164
            Top             =   990
            Width           =   2445
         End
         Begin VB.CommandButton Cmd_localizar_CFOP_serv 
            BackColor       =   &H00C0C0C0&
            Height          =   315
            Left            =   9945
            Picture         =   "frmFaturamento_Prod_serv_GNFe.frx":4E7EB3
            Style           =   1  'Graphical
            TabIndex        =   152
            ToolTipText     =   "Localizar CFOP."
            Top             =   385
            Width           =   345
         End
         Begin VB.TextBox Txt_CFOP_serv 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4830
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   150
            TabStop         =   0   'False
            ToolTipText     =   "CFOP."
            Top             =   385
            Width           =   1110
         End
         Begin VB.TextBox Txt_natureza_operacao_serv 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5955
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   151
            TabStop         =   0   'False
            ToolTipText     =   "Natureza da operação."
            Top             =   385
            Width           =   3990
         End
         Begin VB.ComboBox Cmb_un_com_serv 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":4E7FB5
            Left            =   12975
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":4E800A
            Locked          =   -1  'True
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   156
            TabStop         =   0   'False
            ToolTipText     =   "Unidade comercial."
            Top             =   390
            Width           =   780
         End
         Begin VB.Frame Frame1 
            BackColor       =   &H00E0E0E0&
            Caption         =   "CST"
            ForeColor       =   &H00000000&
            Height          =   705
            Index           =   13
            Left            =   10410
            TabIndex        =   239
            Top             =   15
            Width           =   1665
            Begin VB.ComboBox Cmb_CST_Cofins_Serv 
               Appearance      =   0  'Flat
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   400
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   330
               ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":4E807A
               Left            =   840
               List            =   "frmFaturamento_Prod_serv_GNFe.frx":4E80E1
               Sorted          =   -1  'True
               Style           =   2  'Dropdown List
               TabIndex        =   154
               ToolTipText     =   "Situação tributária Cofins."
               Top             =   330
               Width           =   660
            End
            Begin VB.ComboBox Cmb_CST_PIS_Serv 
               Appearance      =   0  'Flat
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   400
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   330
               ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":4E8167
               Left            =   180
               List            =   "frmFaturamento_Prod_serv_GNFe.frx":4E81CE
               Sorted          =   -1  'True
               Style           =   2  'Dropdown List
               TabIndex        =   153
               ToolTipText     =   "Situação tributária PIS."
               Top             =   330
               Width           =   660
            End
            Begin VB.Label Label1 
               Appearance      =   0  'Flat
               AutoSize        =   -1  'True
               BackColor       =   &H80000005&
               BackStyle       =   0  'Transparente
               Caption         =   "Cofins"
               ForeColor       =   &H00000000&
               Height          =   195
               Index           =   109
               Left            =   945
               TabIndex        =   388
               Top             =   150
               Width           =   450
            End
            Begin VB.Label Label1 
               Appearance      =   0  'Flat
               AutoSize        =   -1  'True
               BackColor       =   &H80000005&
               BackStyle       =   0  'Transparente
               Caption         =   "PIS"
               ForeColor       =   &H00000000&
               Height          =   195
               Index           =   16
               Left            =   390
               TabIndex        =   240
               Top             =   150
               Width           =   240
            End
         End
         Begin VB.TextBox txtnaovisualizarvalor2 
            Alignment       =   2  'Centralizar
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   420
            TabStop         =   0   'False
            Text            =   "Valores não disponíveis"
            Top             =   930
            Visible         =   0   'False
            Width           =   2220
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Pedido do cliente"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   108
            Left            =   10800
            TabIndex        =   387
            Top             =   735
            Width           =   1215
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Ordem/lote"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   107
            Left            =   8962
            TabIndex        =   386
            Top             =   735
            Width           =   810
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Descrição"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   106
            Left            =   5242
            TabIndex        =   385
            Top             =   735
            Width           =   690
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor total"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   105
            Left            =   1493
            TabIndex        =   384
            Top             =   735
            Width           =   735
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Quantidade"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   104
            Left            =   13970
            TabIndex        =   383
            Top             =   195
            Width           =   840
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Un. com."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   103
            Left            =   13043
            TabIndex        =   382
            Top             =   195
            Width           =   645
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Un. est."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   102
            Left            =   12278
            TabIndex        =   381
            Top             =   195
            Width           =   585
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Natureza da operação"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   101
            Left            =   7148
            TabIndex        =   380
            Top             =   195
            Width           =   1605
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "CFOP"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   100
            Left            =   5183
            TabIndex        =   379
            Top             =   195
            Width           =   405
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "ID"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   99
            Left            =   4500
            TabIndex        =   378
            Top             =   195
            Width           =   165
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Cód. de referência"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   98
            Left            =   2760
            TabIndex        =   377
            Top             =   195
            Width           =   1350
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Valor unitário"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   12
            Left            =   263
            TabIndex        =   242
            Top             =   735
            Width           =   945
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparente
            Caption         =   "Cód. interno"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   11
            Left            =   577
            TabIndex        =   241
            Top             =   195
            Width           =   900
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   750
         Index           =   25
         Left            =   -74925
         TabIndex        =   292
         Top             =   1290
         Width           =   15195
         Begin VB.Frame Frame1 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Filtrar"
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   750
            Index           =   26
            Left            =   0
            TabIndex        =   296
            Top             =   0
            Width           =   2535
            Begin VB.OptionButton Opt_filtrar_ped_int 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Ped. interno"
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   210
               Left            =   180
               TabIndex        =   0
               Top             =   240
               Value           =   -1  'True
               Width           =   1305
            End
            Begin VB.OptionButton Opt_filtrar_ped_compra 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Ped. compra (remessa)"
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   210
               Left            =   180
               TabIndex        =   1
               Top             =   450
               Width           =   2265
            End
         End
         Begin VB.CheckBox Chk_tem_estoque 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Empenho no estoque"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   4170
            TabIndex        =   27
            Top             =   360
            Value           =   1  'Marcado
            Width           =   2085
         End
         Begin VB.Frame Frame1 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Carregar"
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   750
            Index           =   22
            Left            =   2550
            TabIndex        =   293
            Top             =   0
            Width           =   1335
            Begin VB.OptionButton Opt_servico_filtrar 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Serviço"
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   210
               Left            =   180
               TabIndex        =   3
               Top             =   450
               Width           =   915
            End
            Begin VB.OptionButton Opt_produto_filtrar 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Produto"
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   210
               Left            =   180
               TabIndex        =   2
               Top             =   240
               Value           =   -1  'True
               Width           =   975
            End
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Height          =   1515
         Index           =   23
         Left            =   -74925
         TabIndex        =   280
         Top             =   2040
         Width           =   15195
         Begin VB.Frame Frame1 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Carregar no campo descrição"
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   615
            Index           =   24
            Left            =   11550
            TabIndex        =   290
            Top             =   810
            Width           =   3465
            Begin VB.OptionButton Optdescricao 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Descrição"
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   210
               Left            =   180
               TabIndex        =   25
               Top             =   300
               Value           =   -1  'True
               Width           =   1125
            End
            Begin VB.OptionButton optespecificacao 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Descrição comercial"
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   210
               Left            =   1350
               TabIndex        =   26
               Top             =   300
               Width           =   1965
            End
         End
         Begin VB.CheckBox Chk_data 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Dt. venda"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   0
            Left            =   5700
            TabIndex        =   21
            Top             =   1118
            Width           =   1275
         End
         Begin VB.CheckBox Chk_data 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Prazo final"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   1
            Left            =   6975
            TabIndex        =   22
            Top             =   1118
            Width           =   1185
         End
         Begin VB.Frame Frame1 
            BackColor       =   &H00E0E0E0&
            BorderStyle     =   0  'Nenhum
            Enabled         =   0   'False
            Height          =   405
            Index           =   20
            Left            =   8310
            TabIndex        =   285
            Top             =   960
            Width           =   3135
            Begin MSComCtl2.DTPicker msk_data 
               Height          =   315
               Index           =   1
               Left            =   1740
               TabIndex        =   24
               ToolTipText     =   "Data final para pesquisa."
               Top             =   90
               Width           =   1395
               _ExtentX        =   2461
               _ExtentY        =   556
               _Version        =   393216
               BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   400
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               CalendarBackColor=   16777215
               CalendarForeColor=   0
               CalendarTitleBackColor=   8421504
               CalendarTitleForeColor=   16777215
               CalendarTrailingForeColor=   255
               Format          =   137232385
               CurrentDate     =   39057
            End
            Begin MSComCtl2.DTPicker msk_data 
               Height          =   315
               Index           =   0
               Left            =   0
               TabIndex        =   23
               ToolTipText     =   "Data início para pesquisa."
               Top             =   90
               Width           =   1395
               _ExtentX        =   2461
               _ExtentY        =   556
               _Version        =   393216
               BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   400
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               CalendarBackColor=   16777215
               CalendarForeColor=   0
               CalendarTitleBackColor=   8421504
               CalendarTitleForeColor=   16777215
               CalendarTrailingForeColor=   255
               Format          =   137232387
               CurrentDate     =   39057
            End
            Begin VB.Label Label1 
               BackStyle       =   0  'Transparente
               Caption         =   "à"
               ForeColor       =   &H00000000&
               Height          =   255
               Index           =   25
               Left            =   1500
               TabIndex        =   286
               Top             =   120
               Width           =   255
            End
         End
         Begin VB.ComboBox Cmb_empresa_filtro 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":4E8254
            Left            =   180
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":4E8256
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   4
            ToolTipText     =   "Empresa."
            Top             =   390
            Width           =   6435
         End
         Begin VB.TextBox txtTexto 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   180
            TabIndex        =   6
            ToolTipText     =   "Texto para pesquisa."
            Top             =   1050
            Width           =   5400
         End
         Begin VB.ComboBox cmbfiltrarpor 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":4E8258
            Left            =   6630
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":4E8274
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   5
            ToolTipText     =   "Opções para filtro."
            Top             =   390
            Width           =   3315
         End
         Begin VB.Frame Frame1 
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   510
            Index           =   19
            Left            =   10230
            TabIndex        =   281
            Top             =   210
            Width           =   4785
            Begin VB.OptionButton optIgual 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Igual"
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   255
               Left            =   3930
               TabIndex        =   20
               Top             =   180
               Width           =   705
            End
            Begin VB.OptionButton Optmeio 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Meio frase"
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   255
               Left            =   1470
               TabIndex        =   18
               Top             =   180
               Width           =   1275
            End
            Begin VB.OptionButton Optinicio 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Início frase"
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   255
               Left            =   180
               TabIndex        =   17
               Top             =   180
               Value           =   -1  'True
               Width           =   1275
            End
            Begin VB.OptionButton Optfim 
               BackColor       =   &H00E0E0E0&
               Caption         =   "Fim frase"
               BeginProperty Font 
                  Name            =   "Arial"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   255
               Left            =   2760
               TabIndex        =   19
               Top             =   180
               Width           =   1155
            End
         End
         Begin VB.ComboBox cmbTexto 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   330
            ItemData        =   "frmFaturamento_Prod_serv_GNFe.frx":4E82E8
            Left            =   180
            List            =   "frmFaturamento_Prod_serv_GNFe.frx":4E82EA
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   7
            ToolTipText     =   "Familia."
            Top             =   1050
            Width           =   5385
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Empresa"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   23
            Left            =   3030
            TabIndex        =   284
            Top             =   180
            Width           =   735
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Texto para pesquisa"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   2
            Left            =   2145
            TabIndex        =   283
            Top             =   840
            Width           =   1470
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparente
            Caption         =   "Filtrar por"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   24
            Left            =   7860
            TabIndex        =   282
            Top             =   180
            Width           =   840
         End
      End
      Begin MSComctlLib.ListView Lista_carteira_faturar 
         Height          =   6255
         Left            =   -74925
         TabIndex        =   9
         Top             =   2820
         Visible         =   0   'False
         Width           =   15195
         _ExtentX        =   26802
         _ExtentY        =   11033
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         AllowReorder    =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         SmallIcons      =   "ImageList1"
         ForeColor       =   0
         BackColor       =   16777215
         Appearance      =   1
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   8
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "N"
            Text            =   "ID"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   1
            Object.Tag             =   "T"
            Text            =   "Empresa"
            Object.Width           =   5997
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   2
            Object.Tag             =   "D"
            Text            =   "Dt. emissão"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   3
            Object.Tag             =   "T"
            Text            =   "Ordem fat."
            Object.Width           =   2293
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   4
            Object.Tag             =   "T"
            Text            =   "Tipo"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   5
            Object.Tag             =   "T"
            Text            =   "Série"
            Object.Width           =   1058
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   6
            Object.Tag             =   "N"
            Text            =   "ID"
            Object.Width           =   970
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   7
            Object.Tag             =   "T"
            Text            =   "Destinatário"
            Object.Width           =   11739
         EndProperty
      End
   End
End
Attribute VB_Name = "frmFaturamento_Prod_Serv_GNFe"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Dim TipoNF2         As String 'OK
Dim Pedido          As String 'OK
Public Aplicacao    As String 'OK

Dim IDclienteNF     As Long 'OK
Dim ClienteNF       As String 'OK
Dim MoedaNF         As String 'OK

Dim ValorICMS_Arredondar          As Double 'OK
Dim Frete                         As Double 'OK
Dim Seguro                        As Double 'OK
Dim Acessorias                    As Double 'OK
Dim Vlr_total_aprox_tributos_prod As Double 'OK
Dim Vlr_total_aprox_tributos_serv As Double 'OK
'Dim ValorICMS_desonerado          As Double 'OK
Dim ValorTotalFCP                 As Double 'OK
Dim ValorTotalICMSINTUFDEST       As Double 'OK
Dim ValorTotalICMSINTUFREM        As Double 'OK

'Variáveis para controle da NF
Dim NF_cancelada            As Boolean 'OK
Public NF_enviada          As Boolean 'OK
Public NF_alterada             As Boolean 'OK
Public NFe_liberada         As Boolean 'OK

Public Atualizalistanota    As Boolean 'OK
Dim AtualizaImpSN           As Boolean 'OK
Dim Faturado                As Boolean 'OK
Dim Faturado_Parcial        As Boolean 'OK
Dim Faturar                 As Boolean 'OK
Public FaturadoParcial      As Boolean 'OK
Public Novo_Nota            As Boolean 'OK
Public Descricao_comercial  As Boolean 'OK
Dim Novo_Nota1              As Boolean 'OK
Dim Novo_Nota2              As Boolean 'OK
Dim Novo_Nota3              As Boolean 'OK
Public Strsql_Faturamento   As String 'OK
Public Strsql_FaturamentoTotal As String 'OK
Public Strsql_FaturamentoTotalCanc As String 'OK
Public Strsql_FaturamentoNFe As String 'OK
Public Strsql_FaturamentoNFSe As String 'OK
Dim FormulaRel_OF As String
Dim Strsql_Carteira_Faturamento   As String 'OK
Dim TBLISTA_Faturamento_NF  As ADODB.Recordset 'OK
Dim TBLISTA_Faturamento_NF1  As ADODB.Recordset 'OK
Dim Cancelar_alt_totais     As Boolean 'OK
Dim GerarDuplicatas         As Boolean 'OK
Public Produto_Relacionado  As Boolean 'OK
Public Faturamento_Vendas_PI As Boolean 'OK
Dim GerarOF As Boolean 'OK
Public TabelaSN As Integer 'OK
Public RegimeEmpresa As Integer 'OK

Sub ProcAjuda()
On Error GoTo tratar_erro

If Formulario = "Faturamento/Nota fiscal/Própria" Then
     FunAbrirVideoWeb ("http://www.youtube.com/watch?v=CGYv8OmQrDk&list=UUODGiDjQ-BCrxh0YXfJvoqg&index=48&feature=plcp")
ElseIf Formulario = "Faturamento/Nota fiscal/Terceiros" Then
        
ElseIf Formulario = "Estoque/Ordem de faturamento" Then
        
Else
    FunAbrirVideoWeb ("http://www.youtube.com/watch?v=ixbnhWHUFIs&list=UUODGiDjQ-BCrxh0YXfJvoqg&index=20&feature=plcp")
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaComboForma()
On Error GoTo tratar_erro

Familiatext = ""
cmb_tipopagto.Clear
If Opt_saida.Value = True Then TextoFiltro = "Tipo = 'R'" Else TextoFiltro = "Tipo = 'P'"
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_FormaPagto where " & TextoFiltro & " order by Descricao", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Do While TBAbrir.EOF = False
        If Familiatext <> TBAbrir!Descricao Then cmb_tipopagto.AddItem TBAbrir!Descricao
        Familiatext = TBAbrir!Descricao
        TBAbrir.MoveNext
    Loop
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcFiltrarMes()
On Error GoTo tratar_erro

M = FunVerificaMes(TabFiltro.SelectedItem.Key)
CamposFiltro = "NF.ID, NF.dt_DataEmissao, NF.int_NotaFiscal, NF.TipoNF, NF.Serie, TN.dbl_Valor_Total_Nota, NF.txt_Razao_Nome, NF.Int_status, NF.Imprimir, NF.ID_empresa, NF.Aplicacao, NF.DtValidacaoOF, NF.DtValidacao"
If Faturamento_NF_Saida = True Then DataFiltro = "NF.dt_DataEmissao" Else DataFiltro = "NF.dt_Saida_Entrada"
If Formulario = "Estoque/Ordem de faturamento" Then
    TextoFiltroVal = "and NF.int_NotaFiscal IS NULL"
    OrdenarFiltro = "order by NF.ID"
Else
    TextoFiltroVal = "and NF.DtValidacaoOF IS NOT NULL"
    OrdenarFiltro = "order by NNF desc"
End If
If OptDomes.Value = True Then DataFiltroTexto = "month(" & DataFiltro & ")= '" & M & "' and Year(" & DataFiltro & ") = '" & IIf(cmbAno = "", Year(Date), cmbAno) & "'"
If OptAteomes.Value = True Then DataFiltroTexto = "month(" & DataFiltro & ")<= '" & M & "' and Year(" & DataFiltro & ") = '" & IIf(cmbAno = "", Year(Date), cmbAno) & "'"
If TabFiltro.SelectedItem.Key = "Todas" Then DataFiltroTexto = ""

Strsql_Faturamento = "Select " & CamposFiltro & ", CAST(NF.int_NotaFiscal AS int) AS NNF from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where " & DataFiltroTexto & " " & TextoFiltroVal & " group by " & CamposFiltro & ", CAST(NF.int_NotaFiscal AS int) HAVING NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " " & OrdenarFiltro
Strsql_FaturamentoTotal = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor1, Sum(TN.Valor_Total_Receber_Pagar) as Valor2 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where " & DataFiltroTexto & " " & TextoFiltroVal & " and NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and NF.Int_status = 1"
Strsql_FaturamentoTotalCanc = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor3 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where " & DataFiltroTexto & " " & TextoFiltroVal & " and NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and NF.Int_status = 2"
Strsql_FaturamentoNFe = "Select " & CamposFiltro & ", CAST(NF.int_NotaFiscal AS int) AS NNF from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where " & DataFiltroTexto & " and NF.DtValidacao IS NOT NULL AND NF.TipoNF <> 'SA' group by " & CamposFiltro & ", CAST(NF.int_NotaFiscal AS int) HAVING NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " " & OrdenarFiltro
Strsql_FaturamentoNFSe = "Select " & CamposFiltro & ", CAST(NF.int_NotaFiscal AS int) AS NNF from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where " & DataFiltroTexto & " and NF.DtValidacao IS NOT NULL AND NF.TipoNF = 'SA' group by " & CamposFiltro & ", CAST(NF.int_NotaFiscal AS int) HAVING NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " " & OrdenarFiltro

ProcCarregaListaNota (1)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ActiveResize1_ResizeComplete()
On Error GoTo tratar_erro

ProcCorrigeForm

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Chk_data_Click(Index As Integer)
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
If Chk_data(0).Value = 1 Then
    Chk_data(1).Value = 0
    Frame1(20).Enabled = True
    Msk_data(0).SetFocus
ElseIf Chk_data(1).Value = 1 Then
        Chk_data(0).Value = 0
        Frame1(20).Enabled = True
        Msk_data(0).SetFocus
    Else
        Frame1(20).Enabled = False
        Msk_data(1).Value = Date
        Msk_data(0).Value = Date
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Chk_tem_estoque_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Chk_tem_IPI_frete_prod_Click()
On Error GoTo tratar_erro

ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmb_empresa_Click()
On Error GoTo tratar_erro

ProcLimpaCamposNota
'ProcLimparTudo
'ListaNota.ListItems.Clear
If Formulario = "Estoque/Ordem de faturamento" And Cmb_empresa <> "" Then ProcMostraValoresOF
Lbl2.Caption = Format(FunVerifVlrTotalFat12UltMesesSomado(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)), "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmb_empresa_filtro_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmb_opcao_lista_Click()
On Error GoTo tratar_erro

With ListaNota
    For InitFor = 1 To .ListItems.Count
        .ListItems.Item(InitFor).Checked = False
    Next InitFor
End With

With USToolBar1
    If Cmb_opcao_lista = "Excluir" Then
        .ButtonState(4) = 0
        .ButtonState(8) = 5
        .ButtonState(9) = 5
    ElseIf Cmb_opcao_lista = "Copiar" Then
            .ButtonState(4) = 5
            .ButtonState(8) = 0
            .ButtonState(9) = 5
        ElseIf Cmb_opcao_lista = "Validação" Then
                .ButtonState(4) = 5
                .ButtonState(8) = 5
                .ButtonState(9) = 0
            Else
                .ButtonState(4) = 5
                .ButtonState(8) = 5
                .ButtonState(9) = 5
    End If
    .Refresh
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmb_opcao_lista_Produtos_Click()
On Error GoTo tratar_erro

With listaProdutos
    For InitFor = 1 To .ListItems.Count
        .ListItems.Item(InitFor).Checked = False
    Next InitFor
End With

With USToolBar2
    If Cmb_opcao_lista_Produtos = "Excluir" Then
        .ButtonState(3) = 0
        .ButtonState(10) = 5
    Else
        .ButtonState(3) = 5
        .ButtonState(10) = 0
    End If
    .Refresh
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmb_tipo_transp_Click()
On Error GoTo tratar_erro

ProcCarregaTransportadora

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmbAno_Click()
On Error GoTo tratar_erro

ProcFiltrarMes

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmbfiltrarpor_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear
If cmbfiltrarpor = "Cliente" Or cmbfiltrarpor = "Fornecedor" Or cmbfiltrarpor = "Família" Then
    txtTexto.Visible = False
    cmbTexto.Visible = True
    With cmbTexto
        .Clear
        If Opt_filtrar_ped_int.Value = True Then NomeViewFiltro = "Carteira_ordem_fat" Else NomeViewFiltro = "Carteira_ordem_fat_PC"
        If cmbfiltrarpor = "Cliente" Then
            CampoFiltro = "Cliente"
        ElseIf cmbfiltrarpor = "Fornecedor" Then
                CampoFiltro = "Fornecedor"
            Else
                CampoFiltro = "Familia"
        End If
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select " & CampoFiltro & " as NomeCampo from " & NomeViewFiltro & " where " & CampoFiltro & " is not null group by " & CampoFiltro, Conexao, adOpenKeyset, adLockReadOnly
        If TBAbrir.EOF = False Then
            .AddItem ""
            Do While TBAbrir.EOF = False
                .AddItem TBAbrir!NomeCampo
                TBAbrir.MoveNext
            Loop
        End If
        TBAbrir.Close
    End With
Else
    txtTexto.Visible = True
    cmbTexto.Visible = False
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmbTexto_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmd_cancelar_totais_Click()
On Error GoTo tratar_erro

ProcCancelar

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmd_cli_forn_transp_Click()
On Error GoTo tratar_erro

With Cmb_tipo_transp
    Acao = "localizar a transportadora"
    If .Text = "" Then
        NomeCampo = "o tipo da transportadora"
        ProcVerificaAcao
        .SetFocus
        Exit Sub
    End If

    Sit_REG = 2
    If .Text = "Cliente" Then
        ProcConfVariaveisLocCliente False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False
        frmVendas_LocalizarCliente.Show 1
    ElseIf .Text = "Fornecedor" Then
            ProcConfVariaveisLocForn False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False
            FrmCompras_localizafornecedor.Show 1
        Else
            frmFaturamento_Prod_Serv_Localizar_Empresa.Show 1
    End If
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcRedespacho()
On Error GoTo tratar_erro

Sit_REG = 3
Faturamento = True
frmFaturamento_Prod_serv_cliente_forn.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmd_consultar_chave_acesso_Click()
On Error GoTo tratar_erro
'If Txt_chave_acesso = "" Then Exit Sub
If TemInternet = True Then

iret = ShellExecute(Me.hWnd, vbNullString, "www.nfe.fazenda.gov.br/PORTAL/consultaRecaptcha.aspx?tipoConsulta=completa&tipoConteudo=XbSeqxE8pl8=", vbNullString, "c:\", SW_SHOWNORMAL)

    Chat = False
    Video_ajuda = False
    Sit_REG = 1
'    With Frm_web
'        .Show
'        .Web.Navigate "https://www.nfe.fazenda.gov.br/PORTAL/consulta.aspx?tipoConsulta=completa&tipoConteudo=XbSeqxE8pl8="
'    End With
Else
    MsgBox ("Não é permitido consultar a chave de acesso, pois não foi encontrado conexão com a internet."), vbExclamation
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Sub
End Sub

Sub ProcCarregaDadosProduto()
On Error GoTo tratar_erro

Permitido = True
If txtCod_Produto <> "" Then
    CFTexto = ""
    
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select * from projproduto where Desenho = '" & txtCod_Produto & "' and Tipo <> 'S' and DtValidacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        If TBProduto!Bloqueado = False Then
            txtCod_Produto = IIf(IsNull(TBProduto!Desenho), "", TBProduto!Desenho)
            
            'Verifica se o produto pertence ao cliente ou fornecedor
            If txttipocliente <> "E" Then
                Set TBItem = CreateObject("adodb.recordset")
                Set TBClientes = CreateObject("adodb.recordset")
                TBClientes.Open "Select ID from Clientes where IDCliente = " & txtIDCliente & " and NomeRazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
                If TBClientes.EOF = False Then
                    TBItem.Open "Select ID, PConsumo, PRevenda, ID_CF from Projproduto_clientes where Codproduto = " & TBProduto!Codproduto & " and IDCliente = " & txtIDCliente, Conexao, adOpenKeyset, adLockOptimistic
                    If TBItem.EOF = True Then
                        Set TBCiclo = CreateObject("adodb.recordset")
                        TBCiclo.Open "Select Codigo from empresa where codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Bloquear_produtos = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBCiclo.EOF = False Then
                            MsgBox ("Este produto não pertence ao cliente " & txt_Razao & "."), vbExclamation
                            TBCiclo.Close
                            Exit Sub
                        Else
                            If MsgBox("Este produto não pertence ao cliente " & txt_Razao & ", deseja prosseguir assim mesmo?", vbQuestion + vbYesNo) = vbNo Then
                                TBCiclo.Close
                                Exit Sub
                            End If
                        End If
                        TBCiclo.Close
                    Else
                        If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                            Valor = IIf(IsNull(TBItem!PConsumo), 0, TBItem!PConsumo)
                        Else
                            Valor = IIf(IsNull(TBItem!PRevenda), 0, TBItem!PRevenda)
                        End If
                        CFTexto = IIf(IsNull(TBItem!ID_CF), "", TBItem!ID_CF)
                        
                        Permitido = False
                    End If
                Else
                    TBItem.Open "Select ID, PCusto from Projproduto_fornecedor where Codproduto = " & TBProduto!Codproduto & " and Idfornecedor = " & txtIDCliente, Conexao, adOpenKeyset, adLockOptimistic
                    If TBItem.EOF = True Then
                        If MsgBox("Este produto não pertence ao fornecedor " & txt_Razao & ", deseja prosseguir assim mesmo?", vbQuestion + vbYesNo) = vbNo Then Exit Sub
                    Else
                        Valor = IIf(IsNull(TBItem!PCusto), 0, TBItem!PCusto)
                        Permitido = False
                    End If
                End If
                TBClientes.Close
                TBItem.Close
            End If
                    
            If Permitido1 = False Then txtDescricao_Produto.Text = IIf(IsNull(TBProduto!Descricao), "", TBProduto!Descricao) Else txtDescricao_Produto.Text = IIf(IsNull(TBProduto!descricaotecnica), "", TBProduto!descricaotecnica)
            If IsNull(TBProduto!Unidade) = False And TBProduto!Unidade <> "" Then txtun.Text = TBProduto!Unidade
            Txt_GTIN = IIf(IsNull(TBProduto!GTIN), "", TBProduto!GTIN)
            
            If Permitido = True Then
                If txttipocliente <> "E" Then
                    If TBProduto!Compras = True And TBProduto!Vendas = False Then
                        Valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto)
                    ElseIf TBProduto!Compras = False And TBProduto!Vendas = True Then
                            If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                                Valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                            Else
                                Valor = IIf(IsNull(TBProduto!PRevenda), 0, TBProduto!PRevenda)
                            End If
                        ElseIf TBProduto!Compras = True And TBProduto!Vendas = True Then
                                If Opt_entrada.Value = True Then
                                    Valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto)
                                Else
                                    If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                                        Valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                                    Else
                                        Valor = IIf(IsNull(TBProduto!PRevenda), 0, TBProduto!PRevenda)
                                    End If
                                End If
                    End If
                Else
                    If Opt_entrada.Value = True Then Valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto) Else Valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                End If
            End If
            With txtVLUnit
                .Text = Format(Valor / FunVerificaTabelaConversaoUnidade(txtun, Cmb_un_com), "###,##0.0000000000")
                If cbo_UF <> "EX" And TBProduto!Valor_bloqueado = True Then
                    .Locked = True
                    .TabStop = False
                End If
            End With
            
            If Chk_CFOP_prod.Value = 0 Then
                If Opt_saida.Value = True Then ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP1), 0, TBProduto!ID_CFOP1), True Else ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), True
            End If
            
            If CFTexto = "" Then CFTexto = IIf(IsNull(TBProduto!ID_CF), "", TBProduto!ID_CF)
            Txt_ID_CF = CFTexto
            ProcCarregaDadosCSTProd

            ProcCarregaComboCodRef cmbreferencia, "P.codproduto = " & TBProduto!Codproduto, txtIDCliente, IIf(Len(txttipocliente) = 2, "C", "F"), True, True
            ProcBloqueiaCamposProd False
            
            If IsNull(TBProduto!Unidade_com) = False And TBProduto!Unidade_com <> "" Then Cmb_un_com.Text = TBProduto!Unidade_com
        Else
            MsgBox ("Não é permitido utilizar este produto, pois o mesmo está bloqueado."), vbExclamation
            ProcBloqueiaCamposProd True
        End If
        
    Else
        If FunVerifNFProdServSemCad(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = False Then ProcLiberaCamposProd
    End If
End If

Exit Sub
tratar_erro:
    If Err.Number = "383" Then
        MsgBox ("Não foi encontrado cadstro de conversão da unidade " & TBProduto!Unidade & " para unidade comercial " & TBProduto!Unidade_com & "."), vbExclamation
        Exit Sub
    End If
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcVerificaNFPedInt(IDprodserv As Long)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Detalhes_Nota_pedidos NFPP INNER JOIN tbl_dados_nota_fiscal NF ON NF.ID = NFPP.ID_nota where NFPP.ID_prod_NF = " & IDprodserv & " and NF.ID = " & TxtID & " and NF.Pedido_interno = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    With txtVLUnit
        .Locked = True
        .TabStop = False
    End With
    With txtVlrunitserv
        .Locked = True
        .TabStop = False
    End With
Else
    With txtVLUnit
        .Locked = False
        .TabStop = True
    End With
    With txtVlrunitserv
        .Locked = False
        .TabStop = True
    End With
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcBloqueiaCamposProd(ProdBloq As Boolean)
On Error GoTo tratar_erro

If ProdBloq = True Then
    With txtDescricao_Produto
        .Locked = True
        .TabStop = False
    End With
Else
    If FunVerifNFProdServSemCad(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = True Then
        With txtDescricao_Produto
            .Locked = True
            .TabStop = False
        End With
    End If
End If
With Txt_GTIN
    .Locked = True
    .TabStop = False
End With
With txtun
    .Locked = True
    .TabStop = False
End With
'With Cmb_un_com
'    .Locked = True
'    .TabStop = False
'End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcLiberaCamposProd()
On Error GoTo tratar_erro

With txtDescricao_Produto
    .Locked = False
    .TabStop = True
End With
With Txt_GTIN
    .Locked = False
    .TabStop = True
End With
With txtun
    .Locked = False
    .TabStop = True
End With
'With Cmb_un_com
'    .Locked = False
'    .TabStop = True
'End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmd_filtrar_prod_serv_Click(Index As Integer)
On Error GoTo tratar_erro

If Index = 0 Then
    Permitido1 = False
    ProcLimpaCamposProd1
    ProcCarregaDadosProduto
Else
    Permitido1 = False
    ProcLimpaCamposServicos1
    ProcCarregaDadosServico
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaDadosServico()
On Error GoTo tratar_erro

Permitido = True
If txtcodServ <> "" Then
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select * from projproduto where Desenho = '" & txtcodServ & "' and tipo = 'S' and DtValidacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        If TBProduto!Bloqueado = False Then
            txtcodServ = IIf(IsNull(TBProduto!Desenho), "", TBProduto!Desenho)
            
            'Verifica se o serviço pertence ao cliente ou fornecedor
            If txttipocliente <> "E" Then
                Set TBItem = CreateObject("adodb.recordset")
                Set TBClientes = CreateObject("adodb.recordset")
                TBClientes.Open "Select * from Clientes where IDCliente = " & txtIDCliente & " and NomeRazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
                If TBClientes.EOF = False Then
                    TBItem.Open "Select * from Projproduto_clientes where Codproduto = " & TBProduto!Codproduto & " and IDCliente = " & txtIDCliente, Conexao, adOpenKeyset, adLockOptimistic
                    If TBItem.EOF = True Then
                        Set TBCiclo = CreateObject("adodb.recordset")
                        TBCiclo.Open "Select * from empresa where codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Bloquear_produtos = 'False'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBCiclo.EOF = False Then
                            If MsgBox("Este serviço não pertence ao cliente " & txt_Razao & ", deseja prosseguir assim mesmo?", vbQuestion + vbYesNo) = vbNo Then
                                TBCiclo.Close
                                Exit Sub
                            End If
                        Else
                            MsgBox ("Este serviço não pertence ao cliente " & txt_Razao & "."), vbExclamation
                            TBCiclo.Close
                            Exit Sub
                        End If
                        TBCiclo.Close
                    Else
                        If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                            Valor = IIf(IsNull(TBItem!PConsumo), 0, TBItem!PConsumo)
                        Else
                            Valor = IIf(IsNull(TBItem!PRevenda), 0, TBItem!PRevenda)
                        End If
                        Permitido = False
                    End If
                Else
                    TBItem.Open "Select * from Projproduto_fornecedor where Codproduto = " & TBProduto!Codproduto & " and Idfornecedor = " & txtIDCliente, Conexao, adOpenKeyset, adLockOptimistic
                    If TBItem.EOF = True Then
                        If MsgBox("Este serviço não pertence ao fornecedor " & txt_Razao & ", deseja prosseguir assim mesmo?", vbQuestion + vbYesNo) = vbNo Then Exit Sub
                    Else
                        Valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto)
                        Permitido = False
                    End If
                End If
                TBClientes.Close
                TBItem.Close
            End If
            
            If Permitido1 = False Then txtDescserv.Text = IIf(IsNull(TBProduto!Descricao), "", TBProduto!Descricao) Else txtDescserv.Text = IIf(IsNull(TBProduto!descricaotecnica), "", TBProduto!descricaotecnica)
            If IsNull(TBProduto!Unidade) = False And TBProduto!Unidade <> "" Then txtunserv.Text = TBProduto!Unidade
            If IsNull(TBProduto!Unidade_com) = False And TBProduto!Unidade_com <> "" Then Cmb_un_com_serv.Text = TBProduto!Unidade_com
            
            If Permitido = True Then
                If txttipocliente <> "E" Then
                    If TBProduto!Compras = True And TBProduto!Vendas = False Then
                        Valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto)
                    ElseIf TBProduto!Compras = False And TBProduto!Vendas = True Then
                            If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                                Valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                            Else
                                Valor = IIf(IsNull(TBProduto!PRevenda), 0, TBProduto!PRevenda)
                            End If
                        ElseIf TBProduto!Compras = True And TBProduto!Vendas = True Then
                                If Opt_entrada.Value = True Then
                                    Valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto)
                                Else
                                    If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                                        Valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                                    Else
                                        Valor = IIf(IsNull(TBProduto!PRevenda), 0, TBProduto!PRevenda)
                                    End If
                                End If
                    End If
                Else
                    If Opt_entrada.Value = True Then Valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto) Else Valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                End If
            End If
            
            With txtVlrunitserv
                .Text = Format(Valor / FunVerificaTabelaConversaoUnidade(txtunserv, Cmb_un_com_serv), "###,##0.0000000000")
                If TBProduto!Valor_bloqueado = True Then
                    .Locked = True
                    .TabStop = False
                End If
            End With
            
            If Chk_CFOP_serv.Value = 0 Then
                If Opt_saida.Value = True Then ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP1), 0, TBProduto!ID_CFOP1), False Else ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), False
            End If
            
            If TBProduto!Servico_cliente = True Then Chk_servico_executado_cliente.Value = 1 Else Chk_servico_executado_cliente.Value = 0
            
            ProcCarregaComboCodRef cmbReferenciaserv, "P.codproduto = " & TBProduto!Codproduto, txtIDCliente, IIf(Len(txttipocliente) = 2, "C", "F"), True, True
        Else
            MsgBox ("Não é permitido utilizar este serviço, pois o mesmo está bloqueado."), vbExclamation
        End If
        ProcBloqueiaCamposServ
    Else
        If FunVerifNFProdServSemCad(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = False Then ProcLiberaCamposServ
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcBloqueiaCamposServ()
On Error GoTo tratar_erro

With txtDescserv
    .Locked = True
    .TabStop = False
End With
With txtunserv
    .Locked = True
    .TabStop = False
End With
With Cmb_un_com_serv
    .Locked = True
    .TabStop = False
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcLiberaCamposServ()
On Error GoTo tratar_erro

With txtDescserv
    .Locked = False
    .TabStop = True
End With
With txtunserv
    .Locked = False
    .TabStop = True
End With
With Cmb_un_com_serv
    .Locked = False
    .TabStop = True
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub procGerarBoleto()
On Error GoTo tratar_erro

If lst_Duplicata.ListItems.Count = 0 Then Exit Sub
If txtDtValidacao = "" Then
    MsgBox ("Não é permitido gerar o boleto, pois a nota fiscal não foi validada."), vbExclamation
    Exit Sub
End If
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from Empresa where Codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    If IsNull(TBAbrir!Registro_boleto) = True Or TBAbrir!Registro_boleto = "" Then
        MsgBox ("Não é permitido emitir boleto, pois o mesmo não possui registro."), vbExclamation
        Exit Sub
    End If
End If
TBAbrir.Close

Acao = "gerar o boleto"
If Txt_ID_duplicata = 0 Then
    NomeCampo = "a duplicata na lista"
    ProcVerificaAcao
    Exit Sub
End If
If txttipocliente = "E" Then
    MsgBox ("Só é permitido emitir boleto para cliente ou fornecedor."), vbExclamation
    Exit Sub
End If

Permitido = True
Familiatext = ""
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_detalhes_recebimento where ID = " & lst_Duplicata.SelectedItem.ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    If IsNull(TBAbrir!txt_Portador_Banco) = True Or TBAbrir!txt_Portador_Banco = "" Or cbo_PortBanco = "" Then
        Familiatext = "O banco"
        Permitido = False
    End If
    If IsNull(TBAbrir!txt_Agencia) = True Or TBAbrir!txt_Agencia = "" Then
        If Familiatext <> "" Then Familiatext = Familiatext & "; " & vbCrLf & "A agência" Else Familiatext = "A agência"
        Permitido = False
    End If
    If IsNull(TBAbrir!txt_conta) = True Or TBAbrir!txt_conta = "" Then
        If Familiatext <> "" Then Familiatext = Familiatext & "; " & vbCrLf & "A conta" Else Familiatext = "A conta"
        Permitido = False
    End If
    If IsNull(TBAbrir!txt_tipopagto) = True Or TBAbrir!txt_tipopagto = "" Then
        If Familiatext <> "" Then Familiatext = Familiatext & "; " & vbCrLf & "A forma de pagamento/recebimento" Else Familiatext = "A forma de pagamento/recebimento"
        Permitido = False
    End If
End If
If cbo_PortBanco <> "" Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from tbl_Instituicoes where ID = " & cbo_PortBanco.ItemData(cbo_PortBanco.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        If IsNull(TBAbrir!Codigo_cedente) = True Or TBAbrir!Codigo_cedente = "" Then
            If Familiatext <> "" Then Familiatext = Familiatext & "; " & vbCrLf & "O Código do cedente no cadastro do banco" Else Familiatext = "O Código do cedente no cadastro do banco"
            Permitido = False
        End If
        If IsNull(TBAbrir!Codigo_cedente_registrado) = True Or TBAbrir!Codigo_cedente_registrado = "" Then
            If Familiatext <> "" Then Familiatext = Familiatext & "; " & vbCrLf & "O Código do cedente reg. no cadastro do banco" Else Familiatext = "O Código do cedente reg. no cadastro do banco"
            Permitido = False
        End If
    End If
End If
If Permitido = False Then
    MsgBox ("Exclua a(s) duplicata(s), informe os campos abaixo e clique no botão gerar duplicatas antes de " & Acao & "." & vbCrLf & Familiatext), vbExclamation
    Exit Sub
End If
If Left(cmb_tipopagto, 6) <> "Boleto" And Left(cmb_tipopagto, 6) <> "BOLETO" Then
    MsgBox ("Não é permitido gerar boleto para essa forma de pagamento/recebimento, favor alterar."), vbExclamation
    cmb_tipopagto.SetFocus
    Exit Sub
End If

Financeiro_Contas_Receber = False
frmFaturamento_Prod_serv_boleto.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcImpostos()
On Error GoTo tratar_erro

Acao = "visualizar os impostos"
If TxtID = "" Then
    If Formulario = "Estoque/Ordem de faturamento" Then NomeCampo = "a ordem de faturamento" Else NomeCampo = "a nota fiscal"
    ProcVerificaAcao
    Exit Sub
End If
Vendas_Proposta = False
Vendas_PI = False
ProcVerificaEmpresaCliente
FrmImpostos.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcNFe()
On Error GoTo tratar_erro

If Formulario = "Estoque/Ordem de faturamento" Or Faturamento_NF_Saida = False Then
    MsgBox ("Não é permitido cadastrar dados da NFe deste módulo."), vbExclamation
    Exit Sub
End If
If TemInternet = True And ErroDriverMYSQL = False Then
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select CNPJ from Empresa where Codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
    If TBFIltro.EOF = False Then
        FunAbreBDSite
        If ConexaoMySql.State = 1 Then
            Set TBMySQL = New ADODB.Recordset
            TBMySQL.Open "Select ID From Clientes Where CNPJ = '" & TBFIltro!CNPJ & "' and GNFe_liberado = 'NÃO'", ConexaoMySql, adOpenKeyset, adLockOptimistic, adCmdText
            If TBMySQL.EOF = False Then
                MsgBox ("Não é permitido acessar o módulo de liberação de NFe, pois a empresa " & Cmb_empresa & " está bloqueada."), vbExclamation
                TBFIltro.Close
                TBMySQL.Close
                Exit Sub
            End If
            TBMySQL.Close
        End If
    End If
    TBFIltro.Close
ElseIf TemInternet = True Then
    MsgBox ("Não é permitido abrir este módulo, pois no momento estamos sem conexão com nosso servidor, favor tentar mais tarde."), vbExclamation
    Exit Sub
End If
'frmFaturamento_Prod_Serv_FormaEmissao.Show
frmFaturamento_Prod_Serv_Migrate.Show

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcNFSe()
On Error GoTo tratar_erro

If FunVerifAtualizacaoObrigatoria(False, True, False) = False Then
    If Formulario = "Estoque/Ordem de faturamento" Or Faturamento_NF_Saida = False Then
        MsgBox ("Não é permitido cadastrar dados da NFSe deste módulo."), vbExclamation
        Exit Sub
    End If
    
    If TemInternet = True And ErroDriverMYSQL = False Then
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select CNPJ from Empresa where Codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
        If TBFIltro.EOF = False Then
            FunAbreBDSite
            If ConexaoMySql.State = 1 Then
                Set TBMySQL = New ADODB.Recordset
                TBMySQL.Open "Select ID From Clientes Where CNPJ = '" & TBFIltro!CNPJ & "' and NFSe_liberado = 'NÃO'", ConexaoMySql, adOpenKeyset, adLockOptimistic, adCmdText
                If TBMySQL.EOF = False Then
                    MsgBox ("Não é permitido acessar o módulo de liberação de NFSe, pois a empresa " & Cmb_empresa & " está bloqueada."), vbExclamation
                    TBFIltro.Close
                    TBMySQL.Close
                    Exit Sub
                End If
                TBMySQL.Close
            End If
        End If
        TBFIltro.Close
    ElseIf TemInternet = True Then
        MsgBox ("Não é permitido abrir este módulo, pois no momento estamos sem conexão com nosso servidor, favor tentar mais tarde."), vbExclamation
        Exit Sub
    End If
    
    frmFaturamento_Prod_Serv_NFSe.Show
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcPlanoContas()
On Error GoTo tratar_erro

If lst_Duplicata.ListItems.Count = 0 Then Exit Sub
If lst_Duplicata.SelectedItem.ListSubItems(4) = "NÃO" Then
    MsgBox ("Envie as duplicata(s) para o financeiro antes de verificar as contas contábeis."), vbExclamation
    Exit Sub
End If
frmFaturamento_Prod_Serv_FamiliasDuplicata.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCorrigeNota_fiscal()
On Error GoTo tratar_erro

PBLista(0).Min = 0
PBLista(0).Max = TBAbrir.RecordCount
PBLista(0).Value = 1
Contador = 0
Do While TBAbrir.EOF = False
    If TBAbrir!Nota_fiscal <> "" Then TBAbrir!Nota_fiscal = FunTamanhoTextoZeroEsq(FunSóNumeros(TBAbrir!Nota_fiscal), 9)
    TBAbrir.Update
    TBAbrir.MoveNext
    Contador = Contador + 1
    PBLista(0).Value = Contador
Loop

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmd_localizar_CFOP_serv_Click()
On Error GoTo tratar_erro

Clientes = False
Vendas_Proposta = False
Vendas_PI = False
Faturamento = True
Compras_Pedido = False
Sit_REG = 3
frm_ListaNatureza.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmd_localizar_CFOP_prod_Click()
On Error GoTo tratar_erro

Clientes = False
Vendas_Proposta = False
Vendas_PI = False
Faturamento = True
Compras_Pedido = False
Sit_REG = 2
frm_ListaNatureza.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmd_localizar_tipo_dcto_Click()
On Error GoTo tratar_erro

Financeiro_Contas_Pagar = False
Financeiro_Contas_Receber = False
Clientes = False
Compras_Fornecedores = False
frmContas_Tipo_Dcto.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmd_salvar_ICMS_SN_Click()
On Error GoTo tratar_erro

If Alterar = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = False Or Permitido = False Then
    MsgBox ("Não é permitido salvar, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_dadosadicionais where id_nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = True Then TBAbrir.AddNew
'FunCarregaCampoDACFOP
'TBAbrir!mem_DadosAdicionais = txtDados_DadosAdicionais
TBAbrir!IDNotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
TBAbrir!ID_nota = TxtID.Text
TBAbrir.Update
TBAbrir.Close

Valor = IIf(txtICMSSN = "", 0, txtICMSSN)
NovoValor = Replace(Valor, ",", ".")
Conexao.Execute "Update tbl_Detalhes_Nota Set ICMS_SN = " & NovoValor & " where ID_nota = " & TxtID

Valor = IIf(txtVLRMPA = "", 0, txtVLRMPA)
Valor1 = IIf(txtVLRMOA = "", 0, txtVLRMOA)
NovoValor = Replace(Valor, ",", ".")
NovoValor1 = Replace(Valor1, ",", ".")
Conexao.Execute "Update tbl_Totais_Nota Set VLRMPA = " & NovoValor & ", VLRMOA = " & NovoValor1 & " where ID_nota = " & TxtID

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select NFP.Int_codigo, NFP.Tem_IPI_frete, NFP.ID_CF, NFP.ID_CFOP, NFP.dbl_ValorTotal, NFP.Valor_desconto, NFP.Valor_frete, NFP.int_ICMS, NFP.ICMS_SN, NFP.dbl_ValorIPI, NFP.NaoArredondar, NFP.txt_CST, NFP.CST_IPI, NFP.CST_PIS, NFP.CST_Cofins, NFP.dbl_ValorUnitario, NFP.int_Qtd, NFP.Valor_seguro, NFP.Valor_acessorias, NFP.VlrMPA, TN.Total_DAS from tbl_Detalhes_Nota NFP INNER JOIN tbl_Totais_Nota TN ON TN.ID_nota = NFP.ID_nota where NFP.id_nota = " & TxtID.Text & " and NFP.Remessa = 'False' and NFP.Retorno = 'False' order by NFP.int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Do While TBProduto.EOF = False
        ProcRecalculaICMS
        TBProduto.MoveNext
    Loop
End If
TBProduto.Close

MsgBox ("Alteração efetuada com sucesso."), vbInformation
'==================================
Modulo = Formulario
Evento = "Salvar vlr. MP, MO aplicada e  vlr. do crédito de ICMS SN"
ID_documento = TxtID
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
ProcVerificaTipoNF False
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
Documento1 = ""
ProcGravaEvento
'==================================
ProcCarregaLista
If NF_alterada = True Then ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
ProcGravarTotaisNota
ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
ProcCarregaListaNota (IIf(FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmd_salvar_totais_Click()
On Error GoTo tratar_erro

ProcAlterar

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdEspecie_Click()
On Error GoTo tratar_erro

Qualidade_Plano = False
Faturamento = True
Aplic = 1
frmPlanoinspecao_Tipodimensao.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdMarca_Click()
On Error GoTo tratar_erro

Qualidade_Plano = False
Faturamento = True
Aplic = 2
frmPlanoinspecao_Tipodimensao.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdPagAnt_Click(Index As Integer)
On Error GoTo tratar_erro

If FunSóNumeros(Right(lblPaginas(Index).Caption, 4)) <= 1 Then Exit Sub
Select Case Index
    Case 0:
        If TBLISTA_Faturamento_NF.AbsolutePage <> 2 Then
            If TBLISTA_Faturamento_NF.AbsolutePage = -3 Then
                ProcExibePagina (TBLISTA_Faturamento_NF.PageCount - 1)
            Else
                TBLISTA_Faturamento_NF.AbsolutePage = TBLISTA_Faturamento_NF.AbsolutePage - 2
                ProcExibePagina (TBLISTA_Faturamento_NF.AbsolutePage)
            End If
        Else
            ProcExibePagina (1)
        End If
    Case 1:
        If TBLISTA_Faturamento_NF1.AbsolutePage <> 2 Then
            If TBLISTA_Faturamento_NF1.AbsolutePage = -3 Then
                ProcExibePagina1 (TBLISTA_Faturamento_NF1.PageCount - 1)
            Else
                TBLISTA_Faturamento_NF1.AbsolutePage = TBLISTA_Faturamento_NF1.AbsolutePage - 2
                ProcExibePagina1 (TBLISTA_Faturamento_NF1.AbsolutePage)
            End If
        Else
            ProcExibePagina1 (1)
        End If
    Case 2:
    
    Case 3:
    
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdPagIr_Click(Index As Integer)
On Error GoTo tratar_erro

If txtPagIr(Index) = "" Then Exit Sub
Quant = FunSóNumeros(Right(lblPaginas(Index).Caption, 4))
If Quant <= 1 Or txtPagIr(Index) > Quant Then Exit Sub
If txtPagIr(Index).Text >= 1 And txtPagIr(Index).Text <= Quant Then
    Select Case Index
        Case 0:
            TBLISTA_Faturamento_NF.AbsolutePage = txtPagIr(Index).Text
            ProcExibePagina (TBLISTA_Faturamento_NF.AbsolutePage)
        Case 1:
            TBLISTA_Faturamento_NF1.AbsolutePage = txtPagIr(Index).Text
            ProcExibePagina1 (TBLISTA_Faturamento_NF1.AbsolutePage)
        Case 2:
        
        Case 3:
        
    End Select
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdPagPrim_Click(Index As Integer)
On Error GoTo tratar_erro

If FunSóNumeros(Right(lblPaginas(Index).Caption, 4)) <= 1 Then Exit Sub
Select Case Index
    Case 0:
        TBLISTA_Faturamento_NF.AbsolutePage = 1
        ProcExibePagina (TBLISTA_Faturamento_NF.AbsolutePage)
    Case 1:
        TBLISTA_Faturamento_NF1.AbsolutePage = 1
        ProcExibePagina1 (TBLISTA_Faturamento_NF1.AbsolutePage)
    Case 2:
    
    Case 3:
    
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdPagProx_Click(Index As Integer)
On Error GoTo tratar_erro

If FunSóNumeros(Right(lblPaginas(Index).Caption, 4)) <= 1 Then Exit Sub
Select Case Index
    Case 0:
        If TBLISTA_Faturamento_NF.AbsolutePage <> -3 Then
            If TBLISTA_Faturamento_NF.AbsolutePage = 1 Then
                ProcExibePagina (2)
            Else
                ProcExibePagina (TBLISTA_Faturamento_NF.AbsolutePage)
            End If
        Else
            ProcExibePagina (TBLISTA_Faturamento_NF.PageCount)
        End If
    Case 1:
        If TBLISTA_Faturamento_NF1.AbsolutePage <> -3 Then
            If TBLISTA_Faturamento_NF1.AbsolutePage = 1 Then
                ProcExibePagina1 (2)
            Else
                ProcExibePagina1 (TBLISTA_Faturamento_NF1.AbsolutePage)
            End If
        Else
            ProcExibePagina1 (TBLISTA_Faturamento_NF1.PageCount)
        End If
    Case 2:
    
    Case 3:
    
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdPagUlt_Click(Index As Integer)
On Error GoTo tratar_erro

If FunSóNumeros(Right(lblPaginas(Index).Caption, 4)) <= 1 Then Exit Sub
Select Case Index
    Case 0:
        TBLISTA_Faturamento_NF.AbsolutePage = TBLISTA_Faturamento_NF.PageCount
        ProcExibePagina (TBLISTA_Faturamento_NF.AbsolutePage)
    Case 1:
        TBLISTA_Faturamento_NF1.AbsolutePage = TBLISTA_Faturamento_NF1.PageCount
        ProcExibePagina1 (TBLISTA_Faturamento_NF1.AbsolutePage)
    Case 2:
    
    Case 3:
    
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Frame17_DblClick()
On Error GoTo tratar_erro

TributacaoICMS = ""
TributacaoIPI = ""
TributacaoPIS = ""
TributacaoCofins = ""

If txtCST_ICMS <> "" Then
    If Len(txtCST_ICMS) = 3 Then QtdeTrib = 2 Else QtdeTrib = 3
    Mercadoria = Left(txtCST_ICMS, 1)
    Tributacao = Right(txtCST_ICMS, QtdeTrib)
    Select Case Mercadoria
        Case 0: Origem = "0 - Nacional"
        Case 1: Origem = "1 - Estrangeira - Importação direta"
        Case 2: Origem = "2 - Estrangeira - Adquirida no mercado interno"
        Case 3: Origem = "3 - Nacional - Mercadoria ou bem com Conteúdo de Importação superior a 40% (quarenta por cento)"
        Case 4: Origem = "4 - Nacional - Cuja produção tenha sido feita em conformidade com os processos produtivos básicos"
        Case 5: Origem = "5 - Nacional - Mercadoria ou bem com Conteúdo de Importação inferior ou igual a 40% (quarenta por cento)"
        Case 6: Origem = "6 - Estrangeira - Importação direta, sem similar nacional, constante em lista de Resolução CAMEX"
        Case 7: Origem = "7 - Estrangeira - Adquirida no mercado interno, sem similar nacional, constante em lista de Resolução CAMEX"
        Case 8: Origem = "8 - Nacional - Mercadoria ou bem com Conteúdo de Importação superior a 70%"
    End Select
    
    Select Case Tributacao
        Case "00": TributacaoICMS = "00 - Tributada integralmente"
        Case "10": TributacaoICMS = "10 - Tributada e com cobrança do ICMS por substituição"
        Case "101": TributacaoICMS = "101 - Tributada pelo Simples Nacional com permissão de crédito"
        Case "102": TributacaoICMS = "102 - Tributada pelo Simples Nacional sem permissão de crédito"
        Case "103": TributacaoICMS = "103 - Isenção do ICMS no Simples Nacional para faixa de receita bruta"
        Case "20": TributacaoICMS = "20 - Com redução de base de cálculo"
        Case "201": TributacaoICMS = "201 - Tributada pelo Simples Nacional com permissão de crédito e com cobrança do ICMS por Substituição Tributária"
        Case "202": TributacaoICMS = "202 - Tributada pelo Simples Nacional sem permissão de crédito e com cobrança do ICMS por Substituição Tributária"
        Case "203": TributacaoICMS = "203 - Isenção do ICMS nos Simples Nacional para faixa de receita bruta e com cobrança do ICMS por Substituição Tributária"
        Case "30": TributacaoICMS = "30 - Isenta ou não tributada e com cobrança do ICMS por substituição tributária"
        Case "300": TributacaoICMS = "300 - Imune"
        Case "40": TributacaoICMS = "40 - Isenta"
        Case "400": TributacaoICMS = "400 - Não tributada pelo Simples Nacional"
        Case "41": TributacaoICMS = "41 - Não tributada"
        Case "50": TributacaoICMS = "50 - Suspensão"
        Case "500": TributacaoICMS = "500 - ICMS cobrado anteriormente por substituição tributária (substituído) ou por antecipação"
        Case "51": TributacaoICMS = "51 - Diferimento"
        Case "60": TributacaoICMS = "60 - ICMS cobrado anteriormente por substituição tributária"
        Case "70": TributacaoICMS = "70 - Com redução de base de cálculo e cobrança do ICMS por substituição tributária"
        Case "90": TributacaoICMS = "90 - Outras"
        Case "900": TributacaoICMS = "900 - Outros"
    End Select
End If

If txtCST_IPI <> "" Then
    Tributacao = Right(txtCST_IPI, 2)
    Select Case Tributacao
        Case "00": TributacaoIPI = "00 - Entrada com recuperação de crédito"
        Case "01": TributacaoIPI = "01 - Entrada tributada com alíquota zero"
        Case "02": TributacaoIPI = "02 - Entrada isenta"
        Case "03": TributacaoIPI = "03 - Entrada não-tributada"
        Case "04": TributacaoIPI = "04 - Entrada imune"
        Case "05": TributacaoIPI = "05 - Entrada com suspensão"
        Case "49": TributacaoIPI = "49 - Outras entradas"
        Case "50": TributacaoIPI = "50 - Saída tributada"
        Case "51": TributacaoIPI = "51 - Saída tributada com alíquota zero"
        Case "52": TributacaoIPI = "52 - Saída isenta"
        Case "53": TributacaoIPI = "53 - Saída não-tributada"
        Case "54": TributacaoIPI = "54 - Saída imune"
        Case "55": TributacaoIPI = "55 - Saída com suspensão"
        Case "99": TributacaoIPI = "99 - Outras saídas"
    End Select
End If

If txtCST_PIS <> "" Then
    Tributacao = Right(txtCST_PIS, 2)
    Select Case Tributacao
        Case "01": TributacaoPIS = "01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))"
        Case "02": TributacaoPIS = "02 - Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))"
        Case "03": TributacaoPIS = "03 - Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)"
        Case "04": TributacaoPIS = "04 - Operação Tributável (tributação monofásica (alíquota zero))"
        Case "05": TributacaoPIS = "05 - Operação Tributável (Substituição Tributária)"
        Case "06": TributacaoPIS = "06 - Operação Tributável (alíquota zero)"
        Case "07": TributacaoPIS = "07 - Operação Isenta da Contribuição"
        Case "08": TributacaoPIS = "08 - Operação Sem Incidência da Contribuição"
        Case "09": TributacaoPIS = "09 - Operação com Suspensão da Contribuição"
        Case "49": TributacaoPIS = "49 - Outras Operações de Saída"
        Case "50": TributacaoPIS = "50 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
        Case "51": TributacaoPIS = "51 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
        Case "52": TributacaoPIS = "52 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação"
        Case "53": TributacaoPIS = "53 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
        Case "54": TributacaoPIS = "54 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
        Case "55": TributacaoPIS = "55 - Operação com Direito a Crédito - Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
        Case "56": TributacaoPIS = "56 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
        Case "60": TributacaoPIS = "60 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
        Case "61": TributacaoPIS = "61 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
        Case "62": TributacaoPIS = "62 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação"
        Case "63": TributacaoPIS = "63 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
        Case "64": TributacaoPIS = "64 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
        Case "65": TributacaoPIS = "65 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
        Case "66": TributacaoPIS = "66 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
        Case "67": TributacaoPIS = "67 - Crédito Presumido - Outras Operações"
        Case "70": TributacaoPIS = "70 - Operação de Aquisição sem Direito a Crédito"
        Case "71": TributacaoPIS = "71 - Operação de Aquisição com Isenção"
        Case "72": TributacaoPIS = "72 - Operação de Aquisição com Suspensão"
        Case "73": TributacaoPIS = "73 - Operação de Aquisição a Alíquota Zero"
        Case "74": TributacaoPIS = "74 - Operação de Aquisição sem Incidência da Contribuição"
        Case "75": TributacaoPIS = "75 - Operação de Aquisição por Substituição Tributária"
        Case "98": TributacaoPIS = "98 - Outras Operações de Entrada"
        Case "99": TributacaoPIS = "99 - Outras Operações"
    End Select
End If

If txtCST_Cofins <> "" Then
    Tributacao = Right(txtCST_Cofins, 2)
    Select Case Tributacao
        Case "01": TributacaoCofins = "01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))"
        Case "02": TributacaoCofins = "02 - Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))"
        Case "03": TributacaoCofins = "03 - Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)"
        Case "04": TributacaoCofins = "04 - Operação Tributável (tributação monofásica (alíquota zero))"
        Case "05": TributacaoCofins = "05 - Operação Tributável (Substituição Tributária)"
        Case "06": TributacaoCofins = "06 - Operação Tributável (alíquota zero)"
        Case "07": TributacaoCofins = "07 - Operação Isenta da Contribuição"
        Case "08": TributacaoCofins = "08 - Operação Sem Incidência da Contribuição"
        Case "09": TributacaoCofins = "09 - Operação com Suspensão da Contribuição"
        Case "49": TributacaoCofins = "49 - Outras Operações de Saída"
        Case "50": TributacaoCofins = "50 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
        Case "51": TributacaoCofins = "51 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
        Case "52": TributacaoCofins = "52 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação"
        Case "53": TributacaoCofins = "53 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
        Case "54": TributacaoCofins = "54 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
        Case "55": TributacaoCofins = "55 - Operação com Direito a Crédito - Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
        Case "56": TributacaoCofins = "56 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
        Case "60": TributacaoCofins = "60 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
        Case "61": TributacaoCofins = "61 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
        Case "62": TributacaoCofins = "62 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação"
        Case "63": TributacaoCofins = "63 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
        Case "64": TributacaoCofins = "64 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
        Case "65": TributacaoCofins = "65 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
        Case "66": TributacaoCofins = "66 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
        Case "67": TributacaoCofins = "67 - Crédito Presumido - Outras Operações"
        Case "70": TributacaoCofins = "70 - Operação de Aquisição sem Direito a Crédito"
        Case "71": TributacaoCofins = "71 - Operação de Aquisição com Isenção"
        Case "72": TributacaoCofins = "72 - Operação de Aquisição com Suspensão"
        Case "73": TributacaoCofins = "73 - Operação de Aquisição a Alíquota Zero"
        Case "74": TributacaoCofins = "74 - Operação de Aquisição sem Incidência da Contribuição"
        Case "75": TributacaoCofins = "75 - Operação de Aquisição por Substituição Tributária"
        Case "98": TributacaoCofins = "98 - Outras Operações de Entrada"
        Case "99": TributacaoCofins = "99 - Outras Operações"
    End Select
End If
MsgBox ("Origem da mercadoria do ICMS: " & Origem & vbCrLf & "Tributação pelo ICMS: " & TributacaoICMS & " " & vbCrLf & "Tributação pelo IPI: " & TributacaoIPI & " " & vbCrLf & "Tributação pelo PIS: " & TributacaoPIS & " " & vbCrLf & "Tributação pelo Cofins: " & TributacaoCofins), vbInformation

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Frame1_DblClick(Index As Integer)
On Error GoTo tratar_erro

If Index = 13 Then
    TributacaoPIS = ""
    TributacaoCofins = ""
    
    If Cmb_CST_PIS_Serv <> "" Then
        Tributacao = Right(Cmb_CST_PIS_Serv, 2)
        Select Case Tributacao
            Case "01": TributacaoPIS = "01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))"
            Case "02": TributacaoPIS = "02 - Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))"
            Case "03": TributacaoPIS = "03 - Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)"
            Case "04": TributacaoPIS = "04 - Operação Tributável (tributação monofásica (alíquota zero))"
            Case "06": TributacaoPIS = "06 - Operação Tributável (alíquota zero)"
            Case "07": TributacaoPIS = "07 - Operação Isenta da Contribuição"
            Case "08": TributacaoPIS = "08 - Operação Sem Incidência da Contribuição"
            Case "09": TributacaoPIS = "09 - Operação com Suspensão da Contribuição"
            Case "49": TributacaoPIS = "49 - Outras Operações de Saída"
            Case "50": TributacaoPIS = "50 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
            Case "51": TributacaoPIS = "51 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
            Case "52": TributacaoPIS = "52 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação"
            Case "53": TributacaoPIS = "53 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
            Case "54": TributacaoPIS = "54 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
            Case "55": TributacaoPIS = "55 - Operação com Direito a Crédito - Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
            Case "56": TributacaoPIS = "56 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
            Case "60": TributacaoPIS = "60 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
            Case "61": TributacaoPIS = "61 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
            Case "62": TributacaoPIS = "62 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação"
            Case "63": TributacaoPIS = "63 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
            Case "64": TributacaoPIS = "64 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
            Case "65": TributacaoPIS = "65 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
            Case "66": TributacaoPIS = "66 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
            Case "67": TributacaoPIS = "67 - Crédito Presumido - Outras Operações"
            Case "70": TributacaoPIS = "70 - Operação de Aquisição sem Direito a Crédito"
            Case "71": TributacaoPIS = "71 - Operação de Aquisição com Isenção"
            Case "72": TributacaoPIS = "72 - Operação de Aquisição com Suspensão"
            Case "73": TributacaoPIS = "73 - Operação de Aquisição a Alíquota Zero"
            Case "74": TributacaoPIS = "74 - Operação de Aquisição sem Incidência da Contribuição"
            Case "75": TributacaoPIS = "75 - Operação de Aquisição por Substituição Tributária"
            Case "98": TributacaoPIS = "98 - Outras Operações de Entrada"
            Case "99": TributacaoPIS = "99 - Outras Operações"
        End Select
    End If
    
    If Cmb_CST_Cofins_Serv <> "" Then
        Tributacao = Right(Cmb_CST_Cofins_Serv, 2)
        Select Case Tributacao
            Case "01": TributacaoCofins = "01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))"
            Case "02": TributacaoCofins = "02 - Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))"
            Case "03": TributacaoCofins = "03 - Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)"
            Case "04": TributacaoCofins = "04 - Operação Tributável (tributação monofásica (alíquota zero))"
            Case "06": TributacaoCofins = "06 - Operação Tributável (alíquota zero)"
            Case "07": TributacaoCofins = "07 - Operação Isenta da Contribuição"
            Case "08": TributacaoCofins = "08 - Operação Sem Incidência da Contribuição"
            Case "09": TributacaoCofins = "09 - Operação com Suspensão da Contribuição"
            Case "49": TributacaoCofins = "49 - Outras Operações de Saída"
            Case "50": TributacaoCofins = "50 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
            Case "51": TributacaoCofins = "51 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
            Case "52": TributacaoCofins = "52 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação"
            Case "53": TributacaoCofins = "53 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
            Case "54": TributacaoCofins = "54 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
            Case "55": TributacaoCofins = "55 - Operação com Direito a Crédito - Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
            Case "56": TributacaoCofins = "56 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
            Case "60": TributacaoCofins = "60 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
            Case "61": TributacaoCofins = "61 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
            Case "62": TributacaoCofins = "62 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação"
            Case "63": TributacaoCofins = "63 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
            Case "64": TributacaoCofins = "64 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
            Case "65": TributacaoCofins = "65 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
            Case "66": TributacaoCofins = "66 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
            Case "67": TributacaoCofins = "67 - Crédito Presumido - Outras Operações"
            Case "70": TributacaoCofins = "70 - Operação de Aquisição sem Direito a Crédito"
            Case "71": TributacaoCofins = "71 - Operação de Aquisição com Isenção"
            Case "72": TributacaoCofins = "72 - Operação de Aquisição com Suspensão"
            Case "73": TributacaoCofins = "73 - Operação de Aquisição a Alíquota Zero"
            Case "74": TributacaoCofins = "74 - Operação de Aquisição sem Incidência da Contribuição"
            Case "75": TributacaoCofins = "75 - Operação de Aquisição por Substituição Tributária"
            Case "98": TributacaoCofins = "98 - Outras Operações de Entrada"
            Case "99": TributacaoCofins = "99 - Outras Operações"
        End Select
    End If
    MsgBox ("Tributação pelo PIS: " & TributacaoPIS & " " & vbCrLf & "Tributação pelo Cofins: " & TributacaoCofins), vbInformation
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Lista_carteira_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

Permitido1 = False
If ColumnHeader = "" Then
    With Lista_carteira
        For InitFor = 1 To .ListItems.Count
            If .ListItems.Item(InitFor).Checked = True Then
                .ListItems.Item(InitFor).Checked = False
            Else
                Permitido1 = True
                
                If Opt_produto_filtrar = True Then Familiatext = "produto" Else Familiatext = "serviço"
                If IDclienteNF = 0 Then
                    IDclienteNF = .ListItems.Item(InitFor).SubItems(16)
                    ClienteNF = .ListItems.Item(InitFor).SubItems(17)
                End If
                If IDclienteNF <> .ListItems.Item(InitFor).SubItems(16) Then GoTo Proximo
                If MoedaNF = "" Then MoedaNF = .ListItems.Item(InitFor).SubItems(21)
                If MoedaNF <> .ListItems.Item(InitFor).SubItems(21) Then GoTo Proximo
                If MoedaNF <> "REAL" Then
                    OutraMoeda = True
                    Moeda = MoedaNF
                End If
                If Opt_filtrar_ped_int.Value = True Then
                    If FunVerifDadosPedido(.ListItems.Item(InitFor).SubItems(1), Familiatext, False) = False Then GoTo Proximo
                End If
                
                .ListItems.Item(InitFor).Checked = True
            End If
Proximo:
        Next InitFor
    End With
Else
    ProcOrdenaListView Lista_carteira, ColumnHeader
End If
If Permitido1 = False Then
    IDclienteNF = 0
    MoedaNF = ""
    OutraMoeda = False
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Function FunVerifDadosPedido(Cotacao As Long, NomeCampo As String, TemMsg As Boolean) As Boolean
On Error GoTo tratar_erro

FunVerifDadosPedido = True
Set TBProposta = CreateObject("adodb.recordset")
TBProposta.Open "Select * from vendas_proposta where cotacao = " & Cotacao, Conexao, adOpenKeyset, adLockOptimistic
If TBProposta.EOF = False Then
    If IsNull(TBProposta!Tipo_cliente) = True Then
        If TemMsg = True Then MsgBox ("Não é permitido selecionar este " & NomeCampo & ", pois não consta o tipo do cliente no pedido " & TBProposta!Ncotacao & " - rev. " & TBProposta!Revisao & "."), vbExclamation
        FunVerifDadosPedido = False
        Exit Function
    End If
    If IsNull(TBProposta!UF) = True Then
        If TemMsg = True Then MsgBox ("Não é permitido selecionar este " & NomeCampo & ", pois não consta a UF do cliente no pedido " & TBProposta!Ncotacao & " - rev. " & TBProposta!Revisao & "."), vbExclamation
        FunVerifDadosPedido = False
        Exit Function
    End If
    Set TBClientes = CreateObject("adodb.recordset")
    TBClientes.Open "Select * from clientes where idcliente = " & TBProposta!IDCliente, Conexao, adOpenKeyset, adLockOptimistic
    If TBClientes.EOF = True Then
        If TemMsg = True Then MsgBox ("Não é permitido selecionar este " & NomeCampo & ", pois não está cadastrado o cliente no pedido " & TBProposta!Ncotacao & " - rev. " & TBProposta!Revisao & "."), vbExclamation
        FunVerifDadosPedido = False
        Exit Function
    End If
    TBClientes.Close
End If
TBProposta.Close

Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Function
End Function

Private Sub Lista_carteira_faturar_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

ProcOrdenaListView Lista_carteira_faturar, ColumnHeader

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Lista_carteira_faturar_ItemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

If Lista_carteira_faturar.ListItems.Count = 0 Then Exit Sub
ProcLimpaCamposNota
TxtID.Text = Lista_carteira_faturar.SelectedItem
ProcCarregaDadosNota IIf(TxtID = "", 0, TxtID)
CamposFiltro = "NF.ID, NF.dt_DataEmissao, NF.dt_Saida_Entrada, NF.int_NotaFiscal, NF.TipoNF, NF.Serie, TN.dbl_Valor_Total_Nota, NF.txt_Razao_Nome, NF.Int_status, NF.Imprimir, NF.ID_empresa, NF.Aplicacao, NF.DtValidacaoOF, NF.DtValidacao"
Strsql_Faturamento = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & TxtID
Strsql_FaturamentoTotal = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor1, Sum(TN.Valor_Total_Receber_Pagar) as Valor2 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & TxtID & " and NF.Int_status = 1"
Strsql_FaturamentoTotalCanc = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor3 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & TxtID & " and NF.Int_status = 2"
Strsql_FaturamentoNFe = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.TipoNF <> 'SA' AND NF.ID = " & TxtID
Strsql_FaturamentoNFSe = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.TipoNF = 'SA' AND NF.ID = " & TxtID
ProcCarregaListaNota (1)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Lista_carteira_ItemCheck(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

Permitido1 = False
With Lista_carteira
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True And .ListItems.Item(InitFor) = Item Then
            If Opt_filtrar_ped_int.Value = True Then
                If Opt_produto_filtrar = True Then Familiatext = "produto" Else Familiatext = "serviço"
                TextoCliForn = "cliente"
            Else
                Familiatext = "produto"
                TextoCliForn = "fornecedor"
            End If
            Permitido1 = True
            If IDclienteNF = 0 Then
                IDclienteNF = .ListItems.Item(InitFor).SubItems(16)
                ClienteNF = .ListItems.Item(InitFor).SubItems(17)
            End If
            If IDclienteNF <> .ListItems.Item(InitFor).SubItems(16) Then
                MsgBox ("Só é permitido selecionar " & Familiatext & " do " & TextoCliForn & " " & IDclienteNF & " - " & ClienteNF & "."), vbExclamation
                .ListItems.Item(InitFor).Checked = False
                Exit Sub
            End If
            If MoedaNF = "" Then MoedaNF = .ListItems.Item(InitFor).SubItems(21)
            If MoedaNF <> .ListItems.Item(InitFor).SubItems(21) Then
                MsgBox ("Só é permitido selecionar " & Familiatext & " de pedido com a moeda " & MoedaNF & "."), vbExclamation
                .ListItems.Item(InitFor).Checked = False
                Exit Sub
            End If
            If MoedaNF <> "REAL" Then
                OutraMoeda = True
                Moeda = MoedaNF
            End If
            If Opt_filtrar_ped_int.Value = True Then
                If FunVerifDadosPedido(.ListItems.Item(InitFor).SubItems(1), Familiatext, True) = False Then .ListItems.Item(InitFor).Checked = False
            End If
        End If
    Next InitFor
End With
If Permitido1 = False Then
    IDclienteNF = 0
    ClienteNF = ""
    MoedaNF = ""
    OutraMoeda = False
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ListaNota_ItemCheck(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

With ListaNota
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True And .ListItems.Item(InitFor) = Item Then
            If Cmb_opcao_lista = "Excluir" Then
                If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
                If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & .ListItems(InitFor), "a mesma", Familiatext, "excluir esta", False, True) = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                
                Set TBVendas = CreateObject("adodb.recordset")
                TBVendas.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                If TBVendas.EOF = False Then
                    'Status da NF
                    If TBVendas!Int_status = 1 Then NF_cancelada = False Else opt_Cancelada.Value = True
                    'NF impressa
                    If TBVendas!Imprimir = True Then NF_enviada = True Else NF_enviada = False
                    
                    'NFe liberada
                    NFe_liberada = False
                    If TBVendas!Aplicacao = "P" Then
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select * From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then
                            If IsNull(TBAbrir!Status) = False And TBAbrir!Status <> "" And TBAbrir!Status <> "2" Then NFe_liberada = True
                        End If
                        TBAbrir.Close
                    End If
                    
                    'NF alterada (totalização)
                    If TBVendas!Alterar = True Then NF_alterada = True Else NF_alterada = False
                                
                    FunVerifAlteracaoNF .ListItems(InitFor), True, IIf(.ListItems(InitFor).ListSubItems(4) = "Serviço(s)", True, False)
                    If Permitido1 = False Then
                        MsgBox ("Não é permitido excluir, " & MsgTexto & "."), vbExclamation
                        .ListItems.Item(InitFor).Checked = False
                        Exit Sub
                    End If
                End If
                TBVendas.Close
                
                Mensagem = "Não é permitido excluir esta nota, pois a mesma está sendo utilizada no módulo"
                If Opt_saida.Value = True Then
                    ProcVerificaRegistroUtilizado "tbl_contas_receber", "ID_Nota = " & .ListItems(InitFor) & " and LogSit = 'S'", "Financeiro/Contas a receber"
                Else
                    ProcVerificaRegistroUtilizado "tbl_ContasPagar", "ID_Nota = " & .ListItems(InitFor) & " and LogSit = 'S'", "Financeiro/Contas a pagar"
                End If
                If Permitido = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                ProcVerificaRegistroUtilizado "Faturamento_Relacionamento", "Id_nota = " & .ListItems(InitFor) & " or ID_nota_relacionada = " & .ListItems(InitFor), "Relacionamento de notas fiscais"
                If Permitido = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                If Formulario = "Faturamento/Nota fiscal/Própria" And .ListItems(InitFor).ListSubItems(3) = "" Then
                    MsgBox ("Não é permitido excluir ordem de faturamento por este módulo."), vbExclamation
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
            ElseIf Cmb_opcao_lista = "Validação" Then
                If Formulario = "Estoque/Ordem de faturamento" Then
                    If .ListItems(InitFor).ListSubItems(10) = "Sim" Then
                        Set TBVendas = CreateObject("adodb.recordset")
                        TBVendas.Open "Select ID From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor) & " and int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                        If TBVendas.EOF = False Then
                            MsgBox ("Não é permitido cancelar a validação desta ordem de faturamento, pois a mesma já é uma nota fiscal."), vbExclamation
                            .ListItems.Item(InitFor).Checked = False
                            TBVendas.Close
                            Exit Sub
                        End If
                        TBVendas.Close
                    Else
                    End If
                Else
                    If .ListItems(InitFor).ListSubItems(3) <> "" Then
                        'NFe liberada
                        Set TBVendas = CreateObject("adodb.recordset")
                        TBVendas.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor) & " and Aplicacao = 'P'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBVendas.EOF = False Then
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select * From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                If IsNull(TBAbrir!Status) = False And TBAbrir!Status <> "" And TBAbrir!Status <> 2 Then
                                    MsgBox ("Não é permitido alterar a validação desta nota fiscal, pois a mesma já foi liberada para envio."), vbExclamation
                                    .ListItems.Item(InitFor).Checked = False
                                    Exit Sub
                                End If
                            End If
                            TBAbrir.Close
                        End If
                        TBVendas.Close
                        
                        If .ListItems(InitFor).ListSubItems(10) = "Sim" Then
                            'Verifica se no cadastro da empresa é permitido fazer movimentação do estoque automaticamente se não ele bloqueia a validação
                            Set TBCodigoDesc = CreateObject("adodb.recordset")
                            TBCodigoDesc.Open "Select Codigo from Empresa where Codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Baixa_Auto_Estoque_NF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                            If TBCodigoDesc.EOF = True Then
                                'Verifica se existe movimentação de estoque
                                Set TBEstoque = CreateObject("adodb.recordset")
                                TBEstoque.Open "Select NF.ID from (tbl_dados_nota_fiscal NF INNER JOIN tbl_Detalhes_Nota NFP ON NF.ID = NFP.ID_nota) INNER JOIN Estoque_movimentacao EM ON EM.ID_prod_NF = NFP.Int_codigo where NF.ID = " & .ListItems(InitFor) & " and NF.Aplicacao = 'P' and EM.Documento = '" & .ListItems(InitFor).ListSubItems(3) & "' and (EM.Operacao = 'SAIDA_NOTA' or EM.Operacao = 'SAIDA_NOTA_PARCIAL')", Conexao, adOpenKeyset, adLockOptimistic
                                If TBEstoque.EOF = False Then
                                    TBEstoque.Close
                                    MsgBox ("Não é permitido cancelar a validação desta nota, pois a mesma está sendo utilizada no módulo Estoque/Movimentação."), vbExclamation
                                    .ListItems.Item(InitFor).Checked = False
                                    Exit Sub
                                End If
                                TBEstoque.Close
                            End If
                            TBCodigoDesc.Close
                            
                            If VerificaContaBaixada(.ListItems(InitFor), "cancelar a validação", True) = True Then
                                .ListItems.Item(InitFor).Checked = False
                                Exit Sub
                            End If
                        Else
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select NF.ID_empresa, NF.dt_Saida_Entrada, NF.Modelo, NF.TabelaSN, NF.Aplicacao, E.Simples, E.Simples1 From tbl_Dados_Nota_Fiscal NF INNER JOIN Empresa E ON E.Codigo = NF.ID_empresa where NF.id = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                If TBAbrir!Aplicacao = "P" Then
                                    If TBAbrir!Simples = True And (IsNull(TBAbrir!TabelaSN) = True Or TBAbrir!TabelaSN = 0) Then
                                        MsgBox ("Não é permitido validar esta nota, pois não foi informado a tabela do simples nacional."), vbExclamation
                                        .ListItems.Item(InitFor).Checked = False
                                        Exit Sub
                                    End If
                                Else
                                    If IsNull(TBAbrir!dt_Saida_Entrada) = True Or TBAbrir!dt_Saida_Entrada = "" Then
                                        MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo Data."), vbExclamation
                                        .ListItems.Item(InitFor).Checked = False
                                        Exit Sub
                                    End If
                                    Set TBVendas = CreateObject("adodb.recordset")
                                    TBVendas.Open "Select Forma_pagamento, Finalidade_emissao, Chave_acesso From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                    If TBVendas.EOF = True Then
                                        MsgBox ("Não é permitido validar esta nota, pois não foram informados os campos Finalidade de emissão e Chave de acesso da NFe."), vbExclamation
                                        .ListItems.Item(InitFor).Checked = False
                                        Exit Sub
                                    Else
                                        If IsNull(TBVendas!Finalidade_emissao) = True Or TBVendas!Finalidade_emissao = "" Then
                                            MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo Finalidade de emissão."), vbExclamation
                                            .ListItems.Item(InitFor).Checked = False
                                            Exit Sub
                                        End If
                                        If (Left(TBAbrir!Modelo, 2) = "55" Or Left(TBAbrir!Modelo, 2) = "57") And (IsNull(TBVendas!Chave_acesso) = True Or TBVendas!Chave_acesso = "") Then
                                            MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo Chave de acesso da NFe."), vbExclamation
                                            .ListItems.Item(InitFor).Checked = False
                                            Exit Sub
                                        End If
                                    End If
                                End If
                                Set TBVendas = CreateObject("adodb.recordset")
                                TBVendas.Open "Select ID_CFOP, Tipo, ID_CF, txt_CST, CST_IPI, CST_PIS, CST_Cofins, N_Referencia, dbl_ValorUnitario From tbl_Detalhes_Nota where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                If TBVendas.EOF = False Then
                                    Do While TBVendas.EOF = False
                                        If IsNull(TBVendas!ID_CFOP) = True Or TBVendas!ID_CFOP = "" Or TBVendas!ID_CFOP = "0" Then
                                            MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo CFOP em todos os produtos/serviços."), vbExclamation
                                            .ListItems.Item(InitFor).Checked = False
                                            Exit Sub
                                        End If
                                        If TBVendas!Tipo = "P" Then
                                            If IsNull(TBVendas!ID_CF) = True Or TBVendas!ID_CF = "" Or TBVendas!ID_CF = "0" Then
                                                MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo NCM em todos os produtos/serviços."), vbExclamation
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                            If IsNull(TBVendas!txt_CST) = True Or TBVendas!txt_CST = "" Then
                                                MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo CST de ICMS em todos os produtos/serviços."), vbExclamation
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                            If IsNull(TBVendas!CST_IPI) = True Or TBVendas!CST_IPI = "" Then
                                                MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo CST de IPI em todos os produtos/serviços."), vbExclamation
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                            If IsNull(TBVendas!CST_PIS) = True Or TBVendas!CST_PIS = "" Then
                                                MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo CST de PIS em todos os produtos/serviços."), vbExclamation
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                            If IsNull(TBVendas!CST_Cofins) = True Or TBVendas!CST_Cofins = "" Then
                                                MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo CST de Cofins em todos os produtos/serviços."), vbExclamation
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                        End If
                                        Set TBFI = CreateObject("adodb.recordset")
                                        TBFI.Open "Select ID From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor) & " and (Finalidade_emissao = 1 or Finalidade_emissao = 4)", Conexao, adOpenKeyset, adLockOptimistic
                                        If TBFI.EOF = False Then
                                            If TBVendas!Tipo = "P" And TBVendas!dbl_ValorUnitario = 0 Then
                                                MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo valor unitário todos os produtos."), vbExclamation
                                                .ListItems.Item(InitFor).Checked = False
                                                TBFI.Close
                                                Exit Sub
                                            End If
                                        End If
                                        TBFI.Close
                                        
                                        If FunVerifCodRefFornSPED(TBAbrir!ID_empresa) = True Then
                                            If IsNull(TBVendas!N_referencia) = True Or TBVendas!N_referencia = "" Then
                                                MsgBox ("Não é permitido validar esta nota, pois não foi informado o campo Código de referência em todos os produtos/serviços."), vbExclamation
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                        End If
                                        TBVendas.MoveNext
                                    Loop
                                End If
                                TBVendas.Close
                            End If
                            TBAbrir.Close
                            
                        End If
                    End If
                    
                    'Não deixar validar se tiver transportadora sem frete
                    Set TBVendas = CreateObject("adodb.recordset")
                    TBVendas.Open "Select * From tbl_dados_transp where id_nota = " & .ListItems(InitFor) & " and txt_Frete_Conta IS NULL", Conexao, adOpenKeyset, adLockOptimistic
                    If TBVendas.EOF = False Then
                        MsgBox ("Não é permitido validar esta nota fiscal, pois a transportadora esta sem o tipo de frete."), vbExclamation
                        .ListItems.Item(InitFor).Checked = False
                        Exit Sub
                    End If
                    TBVendas.Close
                End If
            End If
        End If
    Next InitFor
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub listaProdutos_ItemCheck(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

With listaProdutos
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True And .ListItems.Item(InitFor) = Item Then
        
            If Cmb_opcao_lista_Produtos = "Excluir" Then
                If txtNFiscal = "" Then Familiatext = "a ordem de faturamento" Else Familiatext = "a nota fiscal"
                If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & TxtID, Familiatext, "produto", "excluir este", False, True) = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                
                Mensagem = "Não é permitido excluir este produto, pois o mesmo está sendo utilizado no módulo"
                ProcVerificaRegistroUtilizado "Faturamento_Relacionamento", "(Id_produto = " & .ListItems(InitFor) & " or ID_produto_relacionada = " & .ListItems(InitFor) & ")", "Faturamento/Nota fiscal/Relacionamento de nota fiscal"
                If Permitido = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                ProcVerificaRegistroUtilizado "tbl_Detalhes_Nota_NFe", "ID_item = " & .ListItems(InitFor), "Faturamento/Nota fiscal/Importação"
                If Permitido = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                
                Set TBAbrir = CreateObject("adodb.recordset")
                TBAbrir.Open "Select * From tbl_ContasPagar where ID_nota = " & TxtID & " and Despesas_NF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                If TBAbrir.EOF = False Then
                    MsgBox ("Não é permitido excluir este produto, pois já existe(m) despesa(s) de importação cadastrada(s) para esta nota."), vbExclamation
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                TBAbrir.Close
                ProcVerificaRegistroUtilizado "Estoque_movimentacao", "ID_prod_NF = " & .ListItems(InitFor), "Estoque/Movimentação"
                If Permitido = False Then .ListItems.Item(InitFor).Checked = False
            ElseIf Cmb_opcao_lista_Produtos = "Empenhar" Then
                    If .ListItems(InitFor).ListSubItems(23) = "Sim" Then
                        MsgBox ("Não é permitido empenhar, pois este produto já foi empenhado."), vbExclamation
                        .ListItems.Item(InitFor).Checked = False
                        Exit Sub
                    End If
                        
                    Set TBCarteira = CreateObject("adodb.recordset")
                    TBCarteira.Open "Select ID_carteira from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems.Item(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                    If TBCarteira.EOF = True Then
                        MsgBox ("Não é permitido empenhar, pois este produto não possui pedido inteno."), vbExclamation
                        .ListItems.Item(InitFor).Checked = False
                        TBCarteira.Close
                        Exit Sub
                    End If
                    TBCarteira.Close
                        
                    EstoqueAtual = FunVerificaQtdeEstoque(.ListItems(InitFor).ListSubItems(1), Cmb_empresa.ItemData(Cmb_empresa.ListIndex), "")
                    'Verifica empenho de vendas
                    Valor1 = 0
                    Set TBFI = CreateObject("adodb.recordset")
                    TBFI.Open "Select Qtde_requisitar from Qtde_empenhada_produto_venda where Desenho = '" & .ListItems(InitFor).ListSubItems(1) & "'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBFI.EOF = False Then EstoqueAtual = EstoqueAtual - IIf(IsNull(TBFI!Qtde_requisitar), 0, TBFI!Qtde_requisitar)
                    'Verifica empenho na produção
                    Valor1 = 0
                    Set TBFI = CreateObject("adodb.recordset")
                    TBFI.Open "Select Qtde_empenhar from Qtde_empenhada_produto where Codigo = '" & .ListItems(InitFor).ListSubItems(1) & "'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBFI.EOF = False Then EstoqueAtual = EstoqueAtual - IIf(IsNull(TBFI!Qtde_empenhar), 0, TBFI!Qtde_empenhar)
                    TBFI.Close
                    If EstoqueAtual = 0 Then
                        MsgBox ("Não é permitido empenhar, pois não existe este produto em estoque."), vbExclamation
                        .ListItems.Item(InitFor).Checked = False
                    End If
                Else
                    If .ListItems(InitFor).ListSubItems(23) = "Não" Then
                        MsgBox ("Não é permitido cancelar o empenho, pois este produto não foi empenhado."), vbExclamation
                        .ListItems.Item(InitFor).Checked = False
                        Exit Sub
                    End If
                    Set TBCarteira = CreateObject("adodb.recordset")
                    TBCarteira.Open "Select ID from Estoque_Controle_Empenho_Vendas where ID_faturamento = " & .ListItems.Item(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                    If TBCarteira.EOF = True Then
                        MsgBox ("Não é permitido cancelar o empenho, pois o mesmo não foi gerado por esta ordem de faturamento."), vbExclamation
                        .ListItems.Item(InitFor).Checked = False
                    End If
                    TBCarteira.Close
            End If
        End If
    Next InitFor
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Listaservicos_ItemCheck(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

With Listaservicos
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If txtNFiscal = "" Then Familiatext = "a ordem de faturamento" Else Familiatext = "a nota fiscal"
            If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & TxtID, Familiatext, "serviço", "excluir este", False, True) = False Then .ListItems.Item(InitFor).Checked = False
        End If
    Next InitFor
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub msk_data_CallbackKeyDown(Index As Integer, ByVal KeyCode As Integer, ByVal Shift As Integer, ByVal CallbackField As String, CallbackDate As Date)
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Opt_entrada_Click()
On Error GoTo tratar_erro

ProcCarregaOpcaoListaProd

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Opt_filtrar_ped_compra_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
ProcCorrigeFormPedIntCompra

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Opt_filtrar_ped_int_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
ProcCorrigeFormPedIntCompra

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCorrigeFormPedIntCompra()
On Error GoTo tratar_erro

If Opt_filtrar_ped_int.Value = True Then
    Frame1(22).Visible = True
    Chk_tem_estoque.Visible = True
    Chk_data(0).Caption = "Dt. venda"
Else
    Frame1(22).Visible = False
    Chk_tem_estoque.Visible = False
    Chk_data(0).Caption = "Dt. compra"
End If

With cmbfiltrarpor
    .Clear
    If Opt_filtrar_ped_int.Value = True Then
        .AddItem "Cliente"
        .AddItem "Pedido do cliente"
        .AddItem "Pedido interno"
        .AddItem "Programa"
    Else
        .AddItem "Fornecedor"
        .AddItem "Pedido de compra"
    End If
    .AddItem "Código de referência"
    .AddItem "Código interno"
    .AddItem "Descrição"
    .AddItem "Família"
    .Text = "Código interno"
End With

With Lista_carteira
    If Opt_filtrar_ped_int.Value = True Then
        .ColumnHeaders(13).Text = "Ped. int."
        .ColumnHeaders(18).Text = "Cliente"
        .ColumnHeaders(24).Text = "Qtde. vend."
        ProcCorrigeColunasForm Lista_carteira, "Estoque/Ordem de faturamento - Carteira de fat. - PI", 30, False, 300, 0, 1800, 1000, 500, 1000, 2200, 750, 900, 800, 850, 1000, 850, 525, 1100, 530, 550, 2800, 550, 650, 650, 1200, 2200, 1000, 1000, 1100, 900, 900, 900, 3000, 0
    Else
        .ColumnHeaders(13).Text = "Ped. compra"
        .ColumnHeaders(18).Text = "Fornecedor"
        .ColumnHeaders(24).Text = "Qtde. comp."
        ProcCorrigeColunasForm Lista_carteira, "Estoque/Ordem de faturamento - Carteira de fat. - PC", 30, False, 300, 0, 1800, 1000, 0, 1000, 2200, 750, 0, 0, 850, 1000, 1000, 0, 0, 0, 550, 2800, 550, 0, 0, 1200, 2200, 1000, 0, 1100, 900, 0, 0, 3000, 0
    End If
End With
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Opt_produto_filtrar_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub opt_Saida_Click()
On Error GoTo tratar_erro

ProcCarregaOpcaoListaProd

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaOpcaoListaProd()
On Error GoTo tratar_erro

With Cmb_opcao_lista_Produtos
    .Clear
    If Opt_saida.Value = True Then
        USToolBar6.ButtonState(10) = 5
        ProcCarregaComboTipoDocto cmbtipo_conta, "Tipo = 'R'"
        .AddItem "Excluir"
        If Formulario = "Estoque/Ordem de faturamento" Then
            .AddItem "Empenhar"
            .AddItem "Cancelar empenho"
        End If
    Else
        USToolBar6.ButtonState(10) = 0
        ProcCarregaComboTipoDocto cmbtipo_conta, "Tipo = 'P'"
        .AddItem "Excluir"
    End If
    .Text = "Excluir"
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Opt_servico_filtrar_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub OptAteomes_Click()
On Error GoTo tratar_erro

ProcFiltrarMes

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub OptDomes_Click()
On Error GoTo tratar_erro

ProcFiltrarMes

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Optfim_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub optIgual_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Optinicio_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Optmeio_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub optProduto_Click()
On Error GoTo tratar_erro

ProcVerificaTipoNF True

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub OptServico_Click()
On Error GoTo tratar_erro

ProcVerificaTipoNF True

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub TabFiltro_Click()
On Error GoTo tratar_erro

ProcFiltrarMes

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaListaNota(Pagina As Integer)
On Error GoTo tratar_erro

lblRegistros(1).Caption = "Nº de registros: 0"
lblPaginas(1).Caption = "Página: 0 de: 0"
Valor1 = 0
Valor2 = 0
Valor3 = 0
NF = 0
ListaNota.ListItems.Clear
If Strsql_Faturamento = "" Then Exit Sub
Set TBLISTA_Faturamento_NF1 = CreateObject("adodb.recordset")
TBLISTA_Faturamento_NF1.Open Strsql_Faturamento, Conexao, adOpenKeyset, adLockReadOnly
If TBLISTA_Faturamento_NF1.EOF = False Then ProcExibePagina1 (Pagina)
ProcCarregaTotal

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExibePagina1(Pagina)
On Error GoTo tratar_erro

ListaNota.ListItems.Clear
TBLISTA_Faturamento_NF1.PageSize = IIf(txtNreg(1) = "", 30, txtNreg(1))
TBLISTA_Faturamento_NF1.AbsolutePage = Pagina
TamanhoPagina = TBLISTA_Faturamento_NF1.PageSize
ContadorReg = 1

PBLista(0).Min = 0
PBLista(0).Max = FunVerifMaxPBListaPaginacao(TBLISTA_Faturamento_NF1.RecordCount - IIf(Pagina > 1, (TBLISTA_Faturamento_NF1.PageSize * (Pagina - 1)), 0), TBLISTA_Faturamento_NF1.PageSize)
PBLista(0).Value = 1
Contador = 0
Do While TBLISTA_Faturamento_NF1.EOF = False And (ContadorReg <= TamanhoPagina)
    With ListaNota.ListItems
        .Add , , TBLISTA_Faturamento_NF1!ID
        .Item(.Count).SubItems(1) = IIf(IsNull(TBLISTA_Faturamento_NF1!dt_DataEmissao), "", (Format(TBLISTA_Faturamento_NF1!dt_DataEmissao, "dd/mm/yy")))
        .Item(.Count).SubItems(2) = TBLISTA_Faturamento_NF1!ID
        .Item(.Count).SubItems(3) = IIf(IsNull(TBLISTA_Faturamento_NF1!int_NotaFiscal), "", TBLISTA_Faturamento_NF1!int_NotaFiscal)
        If IsNull(TBLISTA_Faturamento_NF1!TipoNF) = False Then
            If TBLISTA_Faturamento_NF1!TipoNF = "M1" Then TipoNF2 = "Produto(s)"
            If TBLISTA_Faturamento_NF1!TipoNF = "SA" Then TipoNF2 = "Serviço(s)"
            If TBLISTA_Faturamento_NF1!TipoNF = "M1SA" Then TipoNF2 = "Prod./Serv."
        End If
        .Item(.Count).SubItems(4) = TipoNF2
        .Item(.Count).SubItems(5) = IIf(IsNull(TBLISTA_Faturamento_NF1!Serie), "", TBLISTA_Faturamento_NF1!Serie)
        .Item(.Count).SubItems(6) = IIf(IsNull(TBLISTA_Faturamento_NF1!dbl_Valor_Total_Nota), "0,00", Format(TBLISTA_Faturamento_NF1!dbl_Valor_Total_Nota, "###,##0.00"))
        .Item(.Count).SubItems(7) = IIf(IsNull(TBLISTA_Faturamento_NF1!txt_Razao_Nome), "", TBLISTA_Faturamento_NF1!txt_Razao_Nome)
        .Item(.Count).SubItems(8) = IIf(TBLISTA_Faturamento_NF1!Int_status = 1, "Ativa", "Cancelada")
        .Item(.Count).SubItems(9) = IIf(TBLISTA_Faturamento_NF1!Imprimir = True, "Sim", "Não")
        If Formulario = "Estoque/Ordem de faturamento" Then
            .Item(.Count).SubItems(10) = IIf(IsNull(TBLISTA_Faturamento_NF1!DtValidacaoOF) = False, "Sim", "Não")
        Else
            .Item(.Count).SubItems(10) = IIf(IsNull(TBLISTA_Faturamento_NF1!DtValidacao) = False, "Sim", "Não")
        End If
        .Item(.Count).SubItems(11) = FunVerifStatusNFe(TBLISTA_Faturamento_NF1!ID)
        .Item(.Count).SubItems(12) = IIf(IsNull(TBLISTA_Faturamento_NF1!ID_empresa), 0, TBLISTA_Faturamento_NF1!ID_empresa)
    End With
    TBLISTA_Faturamento_NF1.MoveNext
    ContadorReg = ContadorReg + 1
    Contador = Contador + 1
    PBLista(0).Value = Contador
Loop
lblRegistros(1).Caption = "Nº de registros: " & TBLISTA_Faturamento_NF1.RecordCount
If TBLISTA_Faturamento_NF1.AbsolutePage = adPosBOF Then
   lblPaginas(1).Caption = "Página: 1 de: " & TBLISTA_Faturamento_NF1.PageCount
ElseIf TBLISTA_Faturamento_NF1.AbsolutePage = adPosEOF Then
        lblPaginas(1).Caption = "Página: " & TBLISTA_Faturamento_NF1.PageCount & " de: " & TBLISTA_Faturamento_NF1.PageCount
    Else
        lblPaginas(1).Caption = "Página: " & TBLISTA_Faturamento_NF1.AbsolutePage - 1 & " de: " & TBLISTA_Faturamento_NF1.PageCount
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaTotal()
On Error GoTo tratar_erro

'Total faturado e total a receber/pagar
Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open Strsql_FaturamentoTotal, Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    Valor1 = IIf(IsNull(TBLISTA!Valor1), 0, TBLISTA!Valor1)
    Valor2 = IIf(IsNull(TBLISTA!Valor2), 0, TBLISTA!Valor2)
End If
'Total de notas canceladas
Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open Strsql_FaturamentoTotalCanc, Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    Valor3 = IIf(IsNull(TBLISTA!Valor3), 0, TBLISTA!Valor3)
End If
TBLISTA.Close
If Formulario = "Estoque/Ordem de faturamento" Then
    Lbl1.Caption = " Vlr. total ordem(ns) = " & Format(Valor1, "###,##0.00")
Else
    If Faturamento_NF_Saida = True Then DuplicataTexto = "Vlr. total a receber" Else DuplicataTexto = "Vlr. total a pagar"
    Lbl1.Caption = " Vlr. total faturado = " & Format(Valor1, "###,##0.00") & "  /  " & DuplicataTexto & " = " & Format(Valor2, "###,##0.00") & "  /  Vlr. total cancelado = " & Format(Valor3, "###,##0.00")
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub chkRemessa_Click()
On Error GoTo tratar_erro

If chkRemessa.Value = 1 Then chkRetorno.Value = 0

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub chkRetorno_Click()
On Error GoTo tratar_erro

If chkRetorno.Value = 1 Then chkRemessa.Value = 0

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmd_salvar_alteracoes_duplicata_Click()
On Error GoTo tratar_erro

If Alterar = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If lst_Duplicata.ListItems.Count = 0 Then Exit Sub
FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = False Then
    MsgBox ("Não é permitido salvar, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
Acao = "salvar"
If Txt_ID_duplicata = 0 Then
    NomeCampo = "a duplicata na lista"
    ProcVerificaAcao
    Exit Sub
End If
If txtvalorduplicata = "" Then
    NomeCampo = "o valor"
    ProcVerificaAcao
    txtvalorduplicata.SetFocus
    Exit Sub
End If
If txtvalorduplicata <= 0 Then
    MsgBox ("Não é permitido salvar, pois o valor da duplicata não pode ser menor ou igual a zero."), vbExclamation
    txtvalorduplicata.SetFocus
    Exit Sub
End If
With txt_Duplicata
    .PromptInclude = False
    If Len(.Text) < 6 Then
        MsgBox ("O número da parcela digitada não é válido, digite o número correto."), vbExclamation
        .SetFocus
        Exit Sub
    End If
    .PromptInclude = True
End With
Set TBGravar = CreateObject("adodb.recordset")
TBGravar.Open "Select * from tbl_detalhes_recebimento WHERE ID = " & Txt_ID_duplicata, Conexao, adOpenKeyset, adLockOptimistic
If TBGravar.EOF = False Then
    If TBGravar!Nosso_numero <> "" Then
        MsgBox ("Não é permitido alterar os dados desta duplicata, pois a mesma já tem boleto emitido."), vbExclamation
        TBGravar.Close
        Exit Sub
    End If
    TBGravar!txt_Portador_Banco = cbo_PortBanco
    TBGravar!txt_Agencia = txt_Agencia
    TBGravar!txt_conta = txt_conta
    TBGravar!dt_Vencimento = Txt_vencimento.Value
    TBGravar!dbl_Valor = txtvalorduplicata
    TBGravar!txt_Parcela = txt_Duplicata
    TBGravar!Valor_Extenso = FunValorExtenso(TBGravar!dbl_Valor)
    TBGravar!txt_tipopagto = cmb_tipopagto
    TBGravar!Obs = txtObs_Duplicata
    TBGravar.Update
    MsgBox ("Alteração efetuada com sucesso."), vbInformation
    '==================================
    Modulo = Formulario
    Evento = "Alterar duplicata"
    ID_documento = Txt_ID_duplicata
    ProcVerificaTipoNF False
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
    Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
    Documento1 = "Data vencimento: " & Format(Txt_vencimento.Value, "dd/mm/yy") & " - Valor: " & Format(txtvalorduplicata, "###,##0.00") & " - Parcela: " & txt_Duplicata
    ProcGravaEvento
    '==================================
    ProcCarregaListaDuplicatas IIf(TxtID = "", 0, TxtID)
    
    If txtNFiscal <> "" And txtDtValidacao <> "" Then
        If MsgBox("Deseja enviar a(s) duplicata(s) para o financeiro agora?", vbQuestion + vbYesNo) = vbYes Then ProcEnviarDupFinanceiro IIf(TxtID = "", 0, TxtID), True
    End If
    
End If
TBGravar.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcSalvarServico()
On Error GoTo tratar_erro

If Alterar = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = False Or Permitido = False Then
    MsgBox ("Não é permitido salvar, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
If Frame1(12).Enabled = False Then
    ProcVerificaSalvar
    Exit Sub
End If
Acao = "salvar"
'If txtNFiscal.Text = "" Then
'    If Formulario = "Estoque/Ordem de faturamento" Then NomeCampo = "o número ordem de faturamento" Else NomeCampo = "o número da nota fiscal"
'    ProcVerificaAcao
'    txtNFiscal.SetFocus
'    Exit Sub
'End If
If txtcodServ.Text = "" Then
    NomeCampo = "o código interno"
    ProcVerificaAcao
    txtcodServ.SetFocus
    Exit Sub
End If

If Faturamento_NF_Saida = True Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from Empresa where Codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Codigo_ref_DANFE = 'True'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        If cmbReferenciaserv = "" Then
            NomeCampo = "o código de referência"
            ProcVerificaAcao
            cmbReferenciaserv.SetFocus
            Exit Sub
        End If
    End If
    TBAbrir.Close
End If

If Formulario <> "Estoque/Ordem de faturamento" Then
    If Txt_CFOP_serv = "" Then
        NomeCampo = "a CFOP"
        ProcVerificaAcao
        Cmd_localizar_CFOP_serv_Click
        Exit Sub
    End If
End If
If txtunserv.Text = "" Then
    NomeCampo = "a unidade de estoque"
    ProcVerificaAcao
    txtunserv.SetFocus
    Exit Sub
End If
If Cmb_un_com_serv.Text = "" Then
    NomeCampo = "a unidade comercial"
    ProcVerificaAcao
    Cmb_un_com_serv.SetFocus
    Exit Sub
End If
Valor = IIf(txtqtdserv = "", 0, txtqtdserv)
If Valor <= 0 Then
    NomeCampo = "a quantidade"
    ProcVerificaAcao
    txtqtdserv.SetFocus
    Exit Sub
End If
Valor1 = IIf(txtVlrunitserv = "", 0, txtVlrunitserv)
If Valor1 < 0 Then
    NomeCampo = "o valor unitário"
    ProcVerificaAcao
    txtVlrunitserv.SetFocus
    Exit Sub
End If
If txtDescserv.Text = "" Then
    NomeCampo = "a descrição"
    ProcVerificaAcao
    txtDescserv.SetFocus
    Exit Sub
End If
'Se a unidade for diferente verifica se esta cadastrado o peso bruto e UN/KG
If FunBloqueiaUnConversao(txtcodServ, txtunserv, Cmb_un_com_serv, False) = True Then Exit Sub

Conexao.Execute "Update tbl_Dados_Nota_Fiscal Set Alterar = 'False' where id = " & TxtID.Text
NF_alterada = False

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select * from tbl_detalhes_Nota where Int_codigo = " & txtidservico, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
    If FunVerifValidacaoRegistro("alterar", txtDtValidacao, Familiatext, "o serviço", False) = False Then Exit Sub
    
    If TBProduto!int_Cod_Produto <> txtcodServ Then
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & txtidservico, Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            MsgBox ("Não é permitido alterar este serviço, pois o mesmo pertence a um pedido interno."), vbExclamation
            TBAbrir.Close
            Exit Sub
        End If
    End If
    If Faturamento_NF_Saida = True And txtNFiscal <> "" And TBProduto!int_Qtd <> Valor Then
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select RespValidacaoOF from tbl_Dados_Nota_Fiscal where ID = " & TxtID & " and RespValidacaoOF <> '" & pubUsuario & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            MsgBox ("Só é permitido alterar a quantidade deste serviço pelo usuário " & TBAbrir!RespValidacaoOF & "."), vbExclamation
            TBAbrir.Close
            Exit Sub
        End If
        TBAbrir.Close
    End If
    
Else
    TBProduto.AddNew
    TBProduto!Tipo = "S"
End If

If NFe_liberada = True Then
    TBProduto!Ordem = IIf(txtof_servico = "", 0, txtof_servico)
Else
    TBProduto!int_Cod_Produto = txtcodServ.Text
    TBProduto!ID_nota = TxtID.Text
    TBProduto!Txt_descricao = txtDescserv.Text
    TBProduto!N_referencia = cmbReferenciaserv
    Set TBItem = CreateObject("adodb.recordset")
    TBItem.Open "Select codProduto, Classe from projproduto where desenho = '" & txtcodServ & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBItem.EOF = False Then
        TBProduto!Codproduto = TBItem!Codproduto
        TBProduto!Familia = TBItem!Classe
    End If
    TBItem.Close
    TBProduto!ID_CFOP = IIf(Txt_ID_CFOP_serv = "", 0, Txt_ID_CFOP_serv)
    TBProduto!CST_PIS = Cmb_CST_PIS_Serv
    TBProduto!CST_Cofins = Cmb_CST_Cofins_Serv
    TBProduto!Ordem = IIf(txtof_servico = "", 0, txtof_servico)
    TBProduto!PCCliente = Trim(txt_pcclienteserv)
    TBProduto!int_Qtd = txtqtdserv.Text
    TBProduto!txt_Unid = txtunserv.Text
    TBProduto!Unidade_com = Cmb_un_com_serv.Text
    TBProduto!dbl_ValorUnitario = txtVlrunitserv.Text
    TBProduto!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    TBProduto!dbl_ValorTotal = txtVlrtotalserv.Text
    If Chk_servico_executado_cliente.Value = 1 Then TBProduto!Servico_cliente = True Else TBProduto!Servico_cliente = False
        
    ProcSalvarImpostosServ
    
    'Calcula Valor aproximado de tributos
    TBProduto!Aliq_aprox_tributos = FunCalcularAproxTrib(TBProduto!PIS_Serv + TBProduto!Cofins_Serv, 0, IIf(Txt_ID_CFOP_serv = "", 0, Txt_ID_CFOP_serv), True)
    If TBProduto!Aliq_aprox_tributos = 0 Then
        TBProduto!Valor_aprox_tributos = 0
    Else
        TBProduto!Valor_aprox_tributos = Format((TBProduto!dbl_ValorTotal * TBProduto!Aliq_aprox_tributos) / 100, "###,##0.00")
    End If
        
    'Calcula quantidade se a unidade for diferente
    If FunVerifUNConversao(txtunserv, Cmb_un_com_serv) = True Then
        TBProduto!Qtde_estoque = FunConverteUN(txtunserv, Cmb_un_com_serv, txtqtdserv, txtcodServ)
    Else
        TBProduto!Qtde_estoque = Null
    End If
End If

TBProduto.Update
txtidservico = TBProduto!Int_codigo

ProcAtualizaQtdeFatProdServPed TBProduto!Int_codigo, TBProduto!int_Qtd

ProcCarregaListaServicos
If Novo_Nota2 = True Then
    MsgBox ("Novo serviço cadastrado com sucesso."), vbInformation
    Evento = "Novo serviço"
Else
    MsgBox ("Alteração efetuada com sucesso."), vbInformation
    Evento = "Alterar serviço"
    If CodigoLista2 <> 0 And Listaservicos.ListItems.Count <> 0 Then
        Listaservicos.SelectedItem = Listaservicos.ListItems(CodigoLista2)
        Listaservicos.SetFocus
    End If
End If
'==================================
Modulo = Formulario
ID_documento = txtidservico
ProcVerificaTipoNF False
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
Documento1 = "Cód. interno: " & txtcodServ
ProcGravaEvento
'==================================
Novo_Nota2 = False
ProcGravarTotaisNota
ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
ProcCarregaListaNota (IIf(FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcSalvarImpostosServ()
On Error GoTo tratar_erro

'Impostos
Valor_total = txtVlrtotalserv

'Empresa
ProcControleImposto IIf(Txt_ID_CFOP_serv = "", 0, Txt_ID_CFOP_serv), IIf(txtIDCliente = "", 0, txtIDCliente)
ProcVerifImpostosEmpresa Cmb_empresa.ItemData(Cmb_empresa.ListIndex), False, txtcodServ, Chk_servico_executado_cliente, Valor_total, True, TabelaSN, Lbl2.Caption
If DAS > 0 Then
    NovoValor = Replace(DAS, ",", ".")
    Conexao.Execute "UPDATE tbl_Totais_Nota Set DAS = " & NovoValor & " where ID_nota = " & TxtID
End If
If TBProduto!Imposto_manual_serv <> True Then
    TBProduto!PIS_Serv = PIS_Serv
    TBProduto!Cofins_Serv = Cofins_Serv
    TBProduto!CSLL_Serv = CSLL_Serv
    TBProduto!ISS = ISS_Serv
    TBProduto!INSS_Serv = INSS_Serv
    TBProduto!IRRF_Serv = IRRF_Serv
    TBProduto!cpp = CPP_Serv
End If
If TBProduto!PIS_Serv <> 0 Then TBProduto!Total_PIS_serv = Format((Valor_total * TBProduto!PIS_Serv) / 100, "###,##0.00") Else TBProduto!Total_PIS_serv = 0
If TBProduto!Cofins_Serv <> 0 Then TBProduto!Total_Cofins_serv = Format((Valor_total * TBProduto!Cofins_Serv) / 100, "###,##0.00") Else TBProduto!Total_Cofins_serv = 0
If TBProduto!CSLL_Serv <> 0 Then TBProduto!Total_CSLL_serv = Format((Valor_total * TBProduto!CSLL_Serv) / 100, "###,##0.00") Else TBProduto!Total_CSLL_serv = 0
If TBProduto!ISS <> 0 Then TBProduto!VlrISS = Format((Valor_total * TBProduto!ISS) / 100, "###,##0.00") Else TBProduto!VlrISS = 0
If TBProduto!INSS_Serv <> 0 Then TBProduto!Total_INSS_serv = Format((Valor_total * TBProduto!INSS_Serv) / 100, "###,##0.00") Else TBProduto!Total_INSS_serv = 0
If TBProduto!IRRF_Serv <> 0 Then TBProduto!Total_IRRF_serv = Format((Valor_total * TBProduto!IRRF_Serv) / 100, "###,##0.00") Else TBProduto!Total_IRRF_serv = 0
If TBProduto!cpp <> 0 Then TBProduto!Total_CPP = Format((Valor_total * TBProduto!cpp) / 100, "###,##0.00") Else TBProduto!Total_CPP = 0

TBProduto!IRPJ_Serv = IRPJ_Serv
If TBProduto!IRPJ_Serv <> 0 Then TBProduto!Total_IRPJ_serv = Format((Valor_total * TBProduto!IRPJ_Serv) / 100, "###,##0.00") Else TBProduto!Total_IRPJ_serv = 0

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcLimpaCamposServicos()
On Error GoTo tratar_erro

cmbReferenciaserv.Clear

Txt_ID_CFOP_serv = ""
Txt_CFOP_serv = ""
Txt_natureza_operacao_serv = ""
If Novo_Nota2 = True Then
    Set TBTempo = CreateObject("adodb.recordset")
    TBTempo.Open "Select * from tbl_Detalhes_Nota where ID_nota = " & IIf(TxtID = "", 0, TxtID) & " and Tipo = 'S' and ID_CFOP IS NOT NULL order by Int_codigo desc", Conexao, adOpenKeyset, adLockOptimistic
    If TBTempo.EOF = False Then
        If Chk_CFOP_serv.Value = 1 Then
            Txt_ID_CFOP_serv = TBTempo!ID_CFOP
            Permitido = True
        End If
    End If
    If Permitido = False And Len(txttipocliente) = 2 Then
        'Verifica CFOP vinculada ao cliente
        Set TBTempo = CreateObject("adodb.recordset")
        TBTempo.Open "Select * FROM Clientes_DadosComerciais where IDCliente = " & IIf(txtIDCliente = "", 0, txtIDCliente) & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
        If TBTempo.EOF = False Then
            Txt_ID_CFOP_serv = IIf(IsNull(TBTempo!IDCFOP), "", TBTempo!IDCFOP)
        End If
    End If
End If

Set TBTempo = CreateObject("adodb.recordset")
TBTempo.Open "Select * FROM tbl_NaturezaOperacao where IDCountCfop = " & IIf(Txt_ID_CFOP_serv = "", 0, Txt_ID_CFOP_serv), Conexao, adOpenKeyset, adLockOptimistic
If TBTempo.EOF = False Then
    Txt_CFOP_serv = IIf(IsNull(TBTempo!ID_CFOP), "", TBTempo!ID_CFOP)
    Txt_natureza_operacao_serv = IIf(IsNull(TBTempo!Txt_descricao), "", TBTempo!Txt_descricao)
End If
TBTempo.Close

Cmb_CST_PIS_Serv.ListIndex = -1
Cmb_CST_Cofins_Serv.ListIndex = -1
txtunserv.ListIndex = -1
Cmb_un_com_serv.ListIndex = -1
txtqtdserv.Text = ""
With txtVlrunitserv
    .Text = ""
    .Locked = False
    .TabStop = True
End With
txtVlrtotalserv.Text = ""
txtDescserv.Text = ""
txt_pcclienteserv.Text = ""
txtof_servico.Text = ""
Chk_servico_executado_cliente.Value = 0
CodigoLista2 = 0

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcLimpaCamposServicos1()
On Error GoTo tratar_erro

cmbReferenciaserv.Clear
Cmb_CST_PIS_Serv.ListIndex = -1
Cmb_CST_Cofins_Serv.ListIndex = -1
txtunserv.ListIndex = -1
Cmb_un_com_serv.ListIndex = -1
txtqtdserv.Text = ""
With txtVlrunitserv
    .Text = ""
    .Locked = False
    .TabStop = True
End With
txtVlrtotalserv.Text = ""
txtDescserv.Text = ""
txt_pcclienteserv.Text = ""
txtof_servico.Text = ""
Chk_servico_executado_cliente.Value = 0

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcLimpaCamposProd()
On Error GoTo tratar_erro

cmbreferencia.Clear

Txt_ID_CFOP_prod = ""
Txt_CFOP_prod = ""
Txt_natureza_operacao_prod = ""
If Novo_Nota1 = True Then
    Set TBTempo = CreateObject("adodb.recordset")
    TBTempo.Open "Select * from tbl_Detalhes_Nota where ID_nota = " & IIf(TxtID = "", 0, TxtID) & " and Tipo = 'P' and ID_CFOP IS NOT NULL order by Int_codigo desc", Conexao, adOpenKeyset, adLockOptimistic
    If TBTempo.EOF = False Then
        If Chk_CFOP_prod.Value = 1 Then
            Txt_ID_CFOP_prod = TBTempo!ID_CFOP
            Permitido = True
        End If
    End If
    If Permitido = False And Len(txttipocliente) = 2 Then
        'Verifica CFOP vinculada ao cliente
        Set TBTempo = CreateObject("adodb.recordset")
        TBTempo.Open "Select * FROM Clientes_DadosComerciais where IDCliente = " & IIf(txtIDCliente = "", 0, txtIDCliente) & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
        If TBTempo.EOF = False Then
            Txt_ID_CFOP_prod = IIf(IsNull(TBTempo!IDCFOP), "", TBTempo!IDCFOP)
        End If
    End If
End If

Txt_ID_CF = ""
Txt_CF = ""
txtCST_ICMS.ListIndex = -1
txtCST_IPI.ListIndex = -1
txtCST_PIS.ListIndex = -1
txtCST_Cofins.ListIndex = -1
txtDescricao_Produto.Text = ""
txtun.ListIndex = -1
Cmb_un_com.ListIndex = -1
txtQtd = ""
With txtVLUnit
    .Text = ""
    .Locked = False
    .TabStop = True
End With
txtVLTotal.Text = ""
txtIcms.Text = ""
txtIPI.Text = ""
txtValor_IPI.Text = ""
Txt_codigo_enq_IPI = "___"
Txt_complemento_descricao = ""
Txt_GTIN = ""
Txt_inf_adicionais_prod = ""
txtOF.Text = ""
Txt_IDestoque = 0
txt_VlrFrete_prod = ""
Chk_tem_IPI_frete_prod.Value = 0
txt_vlrSeguro_prod = ""
txt_OutrasDisp_prod = ""
Txt_valor_total_desc_prod = ""
Txt_n_item = ""
txt_pccliente.Text = ""
chkNaoArredondar.Value = 0

chkRemessa.Value = 0
chkRetorno.Value = 0
Set TBTempo = CreateObject("adodb.recordset")
TBTempo.Open "Select * FROM tbl_NaturezaOperacao where IDCountCfop = " & IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), Conexao, adOpenKeyset, adLockOptimistic
If TBTempo.EOF = False Then
    Txt_CFOP_prod = IIf(IsNull(TBTempo!ID_CFOP), "", TBTempo!ID_CFOP)
    Txt_natureza_operacao_prod = IIf(IsNull(TBTempo!Txt_descricao), "", TBTempo!Txt_descricao)
    If TBTempo!Remessa = True Then chkRemessa.Value = 1
    If TBTempo!Retorno = True Then chkRetorno.Value = 1
End If
TBTempo.Close

If Faturamento_NF_Saida = True Then
    ProcVerifImpostosSN Cmb_empresa.ItemData(Cmb_empresa.ListIndex), TabelaSN, Lbl2.Caption
    txtICMSSN = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.00"))
End If

CodigoLista1 = 0
ProcCarregaCSTICMS
Produto_Relacionado = False

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcLimpaCamposProd1()
On Error GoTo tratar_erro

cmbreferencia.Clear
Txt_ID_CF = ""
Txt_CF = ""
txtCST_ICMS.ListIndex = -1
txtCST_IPI.ListIndex = -1
txtCST_PIS.ListIndex = -1
txtCST_Cofins.ListIndex = -1
txtDescricao_Produto.Text = ""
txtun.ListIndex = -1
Cmb_un_com.ListIndex = -1
txtQtd = ""
With txtVLUnit
    .Text = ""
    .Locked = False
    .TabStop = True
End With
txtVLTotal.Text = ""
txtIcms.Text = ""
txtIPI.Text = ""
txtValor_IPI.Text = ""
Txt_codigo_enq_IPI = "___"
Txt_complemento_descricao = ""
Txt_GTIN = ""
Txt_inf_adicionais_prod = ""
txtOF.Text = ""
Txt_IDestoque = 0
txt_VlrFrete_prod = ""
Chk_tem_IPI_frete_prod.Value = 0
txt_vlrSeguro_prod = ""
txt_OutrasDisp_prod = ""
Txt_valor_total_desc_prod = ""
Txt_n_item = ""
txt_pccliente.Text = ""

If Faturamento_NF_Saida = True Then
    ProcVerifImpostosSN Cmb_empresa.ItemData(Cmb_empresa.ListIndex), TabelaSN, Lbl2.Caption
    txtICMSSN = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.00"))
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaListaDuplicatas(ID_nota As Long)
On Error GoTo tratar_erro

'Libera a edição dos campos da duplicata
With cbo_PortBanco
    .Locked = False
    .TabStop = True
End With
With cmb_tipopagto
    .Locked = False
    .TabStop = True
End With
With txt_Cond_Recebimento
    .Locked = False
    .TabStop = True
End With

Init = 0
Sit_REG = 0
Valor = 0
lst_Duplicata.ListItems.Clear
Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * from tbl_Detalhes_Recebimento where ID_Nota = " & ID_nota & " order by dt_Vencimento, txt_parcela", Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    'Bloqueia a edição dos campos da duplicata
    With cbo_PortBanco
        .Locked = True
        .TabStop = False
    End With
    With cmb_tipopagto
        .Locked = True
        .TabStop = False
    End With
    With txt_Cond_Recebimento
        .Locked = True
        .TabStop = False
    End With
    
    TBLISTA.MoveLast
    PBLista(4).Min = 0
    PBLista(4).Max = TBLISTA.RecordCount
    PBLista(4).Value = 1
    Contador = 0
    TBLISTA.MoveFirst
    Do While TBLISTA.EOF = False
        With lst_Duplicata.ListItems
            .Add , , Format(TBLISTA!dt_Vencimento, "dd/mm/yyyy")
            .Item(.Count).SubItems(1) = Format(TBLISTA!dbl_Valor, "###,##0.00")
            .Item(.Count).SubItems(2) = TBLISTA!txt_Parcela
            .Item(.Count).SubItems(3) = TBLISTA!ID
            
            'Verifica se já foi enviada a conta para o financeiro
            'Verifica se é nota de devolução
            Set TBFIltro = CreateObject("adodb.recordset")
            TBFIltro.Open "Select CFOP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & ID_nota & " and CFOP.Devolucao = 'True'", Conexao, adOpenKeyset, adLockOptimistic
            If TBFIltro.EOF = False And (Opt_saida.Value = True And Len(txttipocliente) = 1 Or Opt_entrada.Value = True And Len(txttipocliente) = 2) Then
                'Fornecedor
                If Opt_saida.Value = True And Len(txttipocliente) = 1 Then TextoFiltro = "tbl_ContasPagar where ID_Nota = " & ID_nota & " and txt_Parcela = '" & TBLISTA!txt_Parcela & "'"
                'Cliente
                If Opt_entrada.Value = True And Len(txttipocliente) = 2 Then TextoFiltro = "tbl_contas_receber where ID_Nota = " & ID_nota & " and Parcela = '" & TBLISTA!txt_Parcela & "'"
            Else
                If Opt_saida.Value = True Then
                    TextoFiltro = "tbl_contas_receber where ID_Nota = " & ID_nota & " and Parcela = '" & TBLISTA!txt_Parcela & "'"
                Else
                    TextoFiltro = "tbl_ContasPagar where ID_Nota = " & ID_nota & " and txt_Parcela = '" & TBLISTA!txt_Parcela & "'"
                End If
            End If
            TBFIltro.Close
            
            Set TBContas = CreateObject("adodb.recordset")
            TBContas.Open "Select * from " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
            If TBContas.EOF = False Then .Item(.Count).SubItems(4) = "SIM" Else .Item(.Count).SubItems(4) = "NÃO"
            TBContas.Close
            
            .Item(.Count).SubItems(5) = IIf(IsNull(TBLISTA!Nosso_numero), "", TBLISTA!Nosso_numero)
            
            If IsNull(TBLISTA!Seq_remessa) = False And TBLISTA!Seq_remessa <> "" And cbo_PortBanco <> "" Then .Item(.Count).SubItems(6) = FunFormataNumeroArqRemessa(TBLISTA!Data_emissao, cbo_PortBanco.ItemData(cbo_PortBanco.ListIndex), TBLISTA!Seq_remessa)
            
            .Item(.Count).SubItems(7) = txt_Razao
            
            Init = Init + 1
            .Item(Init).Checked = True
        End With
        
        Valor = Valor + TBLISTA!dbl_Valor
        
        TBLISTA.MoveNext
        Contador = Contador + 1
        PBLista(4).Value = Contador
    Loop
    NovoValor = Replace(Valor, ",", ".")
    Conexao.Execute "Update tbl_Totais_Nota Set Valor_total_receber_pagar = " & NovoValor & " where ID_nota = " & TxtID
    Sit_REG = 1
End If
TBLISTA.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcAnterior()
On Error GoTo tratar_erro

If TxtID = "" Then Exit Sub
Set TBLISTA = CreateObject("adodb.recordset")
If Faturamento_NF_Saida = True Then TextoFiltro = "Aplicacao = 'P'" Else TextoFiltro = "Aplicacao = 'T'"
TBLISTA.Open "Select * from tbl_Dados_Nota_Fiscal where " & TextoFiltro & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " order by dt_DataEmissao, id", Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.BOF = False Then
    TBLISTA.Find ("ID = " & TxtID)
    TBLISTA.MovePrevious
    If TBLISTA.BOF = False Then
        TxtID = TBLISTA!ID
        ProcCarregaDadosNota IIf(TxtID = "", 0, TxtID)
        txtCod_Produto.Text = ""
        ProcLimpaCamposProd
        ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
        ProcCarregaLista
        txtcodServ.Text = ""
        ProcLimpaCamposServicos
        ProcCarregaListaServicos
        ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
        ProcLimpaCamposDuplicata
        ProcCarregaDuplicatas
        ProcLimpaCamposTransp
        ProcCarregaQuantidadePesos
        ProcCarregaDadosTransporte
    Else
        MsgBox ("Fim dos cadastros de notas fiscais."), vbInformation
    End If
End If
Novo_Nota = False

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCopiar()
On Error GoTo tratar_erro

If Alterar = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
Permitido = False
If Formulario = "Estoque/Ordem de faturamento" Then MsgTexto = "ordem(ns) de faturamento" Else MsgTexto = "nota(s) fiscal(ais)"
With ListaNota
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If MsgBox("Deseja realmente copiar esta(s) " & MsgTexto & "?", vbQuestion + vbYesNo) = vbNo Then Exit Sub
            End If
            Permitido = True
        End If
    Next InitFor
End With
If Permitido = False Then
    MsgBox ("Informe a(s) " & MsgTexto & " antes de copiar."), vbExclamation
Else
    frmFaturamento_Prod_serv_copiar.Show 1
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCopiarNF(ID_nota As Long, Data_emissao As Date)
On Error GoTo tratar_erro

IDAntigo = ID_nota
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal where Id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    'Carrega número da nova nota fiscal
    If Left(Formulario, 7) <> "Estoque" And Right(Formulario, 9) <> "Terceiros" Then
        TipoNF = TBAbrir!TipoNF
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select CAST(int_NotaFiscal AS int) AS NF, Serie FROM tbl_Dados_Nota_Fiscal where tipoNF = '" & TipoNF & "' and Aplicacao = '" & TBAbrir!Aplicacao & "' and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and int_NotaFiscal IS NOT NULL order by dt_DataEmissao desc, NF desc", Conexao, adOpenKeyset, adLockOptimistic
        If TBFI.EOF = False Then
            QuantsolicitadoN1 = TBFI!NF + 1
            FamiliaAntiga = QuantsolicitadoN1
            Familiatext = FunTamanhoTextoZeroEsq(FamiliaAntiga, 9)
            SerieNF = IIf(IsNull(TBFI!Serie), 1, TBFI!Serie)
        End If
        Familiatext = FunVerifExisteNumNF(TipoNF, Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Familiatext, SerieNF)
    Else
        Familiatext = ""
    End If
        
    Set TBGravar = CreateObject("adodb.recordset")
    TBGravar.Open "Select * from tbl_Dados_Nota_Fiscal", Conexao, adOpenKeyset, adLockOptimistic
    TBGravar.AddNew
    TBGravar!Modelo = TBAbrir!Modelo
    TBGravar!Id_Int_Cliente = TBAbrir!Id_Int_Cliente
    TBGravar!int_NotaFiscal = IIf(Familiatext = "", Null, Familiatext)
    TBGravar!Serie = TBAbrir!Serie
    TBGravar!TipoNF = TBAbrir!TipoNF
    TBGravar!int_TipoNota = TBAbrir!int_TipoNota
    TBGravar!txt_Inscr_Substituto = TBAbrir!txt_Inscr_Substituto
    TBGravar!txt_Razao_Nome = TBAbrir!txt_Razao_Nome
    TBGravar!txt_CNPJ_CPF = TBAbrir!txt_CNPJ_CPF
    TBGravar!dt_DataEmissao = Data_emissao
    If Faturamento_NF_Saida = True Then TBGravar!Hora_emissao = Format(Now, "hh:mm:ss")
    TBGravar!txt_Hora_Saida = Format(Now, "hh:mm:ss")
    
    If Formulario <> "Estoque/Ordem de faturamento" Then
        TBGravar!DtValidacaoOF = Now
        TBGravar!RespValidacaoOF = pubUsuario
    End If
    
    TBGravar!txt_Endereco = TBAbrir!txt_Endereco
    TBGravar!Numero = TBAbrir!Numero
    TBGravar!txt_Bairro = TBAbrir!txt_Bairro
    TBGravar!Txt_CEP = TBAbrir!Txt_CEP
    TBGravar!dt_Saida_Entrada = Date
    TBGravar!txt_Municipio = TBAbrir!txt_Municipio
    TBGravar!txt_Fone_Fax = TBAbrir!txt_Fone_Fax
    TBGravar!txt_UF = TBAbrir!txt_UF
    TBGravar!txt_IE_Cliente = TBAbrir!txt_IE_Cliente
    TBGravar!Int_status = 1
    TBGravar!txt_tipocliente = TBAbrir!txt_tipocliente
    TBGravar!Aplicacao = TBAbrir!Aplicacao
    TBGravar!pedido_interno = TBAbrir!pedido_interno
    TBGravar!ID_empresa = TBAbrir!ID_empresa
    TBGravar!Obs = TBAbrir!Obs
    TBGravar!Regime = FunVerifRegimeEmpresa(TBAbrir!ID_empresa)
    If TBGravar!Regime = 1 Then TBGravar!TabelaSN = TBAbrir!TabelaSN
    
    TBGravar.Update
    TxtID = TBGravar!ID
    '==================================
    Modulo = Formulario
    Evento = "Novo"
    ID_documento = TBGravar!ID
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & Familiatext
    Documento = NomeCampo & " - Tipo: " & TBAbrir!TipoNF & " - Série: " & TBAbrir!Serie
    Documento1 = ""
    ProcGravaEvento
    '==================================
    TBGravar.Close
End If
ProcCopiarNFe
ProcCopiarProdutos Familiatext
ProcCopiarServicos Familiatext
ProcCopiarTotaisNota Familiatext
ProcCopiarTransportadora Familiatext
ProcCopiarDadosAdicionais Familiatext

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Detalhes_Recebimento where Id_nota = " & IDAntigo, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Do While TBAbrir.EOF = False
        Set TBGravar = CreateObject("adodb.recordset")
        TBGravar.Open "Select * from tbl_Detalhes_Recebimento", Conexao, adOpenKeyset, adLockOptimistic
        TBGravar.AddNew
        TBGravar!int_NotaFiscal = Familiatext
        TBGravar!ID_nota = TxtID
        TBGravar!txt_Parcela = TBAbrir!txt_Parcela
        TBGravar!dt_Vencimento = Left(TBAbrir!dt_Vencimento, 2) & Right(Data_emissao, 8)
        TBGravar!txt_Cond_Recebimento = TBAbrir!txt_Cond_Recebimento
        TBGravar!txt_Portador_Banco = TBAbrir!txt_Portador_Banco
        TBGravar!txt_Agencia = TBAbrir!txt_Agencia
        TBGravar!txt_conta = TBAbrir!txt_conta
        TBGravar!dbl_Valor = TBAbrir!dbl_Valor
        TBGravar!Valor_Extenso = TBAbrir!Valor_Extenso
        TBGravar!txt_tipopagto = TBAbrir!txt_tipopagto
        TBGravar!Tipo_doc = TBAbrir!Tipo_doc
        TBGravar!Obs = TBAbrir!Obs
        
        TBGravar.Update
        TBGravar.Close
        TBAbrir.MoveNext
    Loop
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCopiarProdutos(NovoNumNFiscal As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Detalhes_Nota where Id_nota = " & IDAntigo & " and Tipo = 'P' order by Int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Do While TBAbrir.EOF = False
        Set TBGravar = CreateObject("adodb.recordset")
        TBGravar.Open "Select * from tbl_Detalhes_Nota", Conexao, adOpenKeyset, adLockOptimistic
        TBGravar.AddNew
        TBGravar!Tipo = "P"
        TBGravar!Codproduto = TBAbrir!Codproduto
        TBGravar!int_Cod_Produto = TBAbrir!int_Cod_Produto
        TBGravar!Txt_descricao = TBAbrir!Txt_descricao
        TBGravar!N_referencia = TBAbrir!N_referencia
        TBGravar!Familia = TBAbrir!Familia
        TBGravar!txt_CST = TBAbrir!txt_CST
        TBGravar!CST_IPI = TBAbrir!CST_IPI
        TBGravar!CST_PIS = TBAbrir!CST_PIS
        TBGravar!CST_Cofins = TBAbrir!CST_Cofins
        TBGravar!ID_CFOP = TBAbrir!ID_CFOP
        TBGravar!ID_CF = TBAbrir!ID_CF
        TBGravar!Complemento_descricao = TBAbrir!Complemento_descricao
        TBGravar!GTIN = TBAbrir!GTIN
        TBGravar!N_item = TBAbrir!N_item
        'Impostos
        TBGravar!int_ICMS = TBAbrir!int_ICMS
        TBGravar!int_IPI = TBAbrir!int_IPI
        TBGravar!dbl_valoripi = TBAbrir!dbl_valoripi
        TBGravar!PIS_Prod = TBAbrir!PIS_Prod
        TBGravar!Total_PIS_prod = TBAbrir!Total_PIS_prod
        TBGravar!Cofins_Prod = TBAbrir!Cofins_Prod
        TBGravar!Total_Cofins_prod = TBAbrir!Total_Cofins_prod
        TBGravar!CSLL_Prod = TBAbrir!CSLL_Prod
        TBGravar!Total_CSLL_prod = TBAbrir!Total_CSLL_prod
        TBGravar!IRPJ_Prod = TBAbrir!IRPJ_Prod
        TBGravar!Total_IRPJ_prod = TBAbrir!Total_IRPJ_prod
        TBGravar!cpp = TBAbrir!cpp
        TBGravar!Total_CPP = TBAbrir!Total_CPP
        TBGravar!ICMS_SN = TBAbrir!ICMS_SN
        TBGravar!Valor_Retencao_PIS = IIf(IsNull(TBAbrir!Valor_Retencao_PIS), 0, TBAbrir!Valor_Retencao_PIS)
        TBGravar!Valor_Retencao_Cofins = IIf(IsNull(TBAbrir!Valor_Retencao_Cofins), 0, TBAbrir!Valor_Retencao_Cofins)
        TBGravar!Aliq_aprox_tributos = TBAbrir!Aliq_aprox_tributos
        TBGravar!Valor_aprox_tributos = TBAbrir!Valor_aprox_tributos
                
        TBGravar!int_Qtd = TBAbrir!int_Qtd
        TBGravar!Saldo = TBAbrir!int_Qtd
        TBGravar!txt_Unid = TBAbrir!txt_Unid
        TBGravar!Unidade_com = TBAbrir!Unidade_com
        TBGravar!dbl_ValorUnitario = TBAbrir!dbl_ValorUnitario
        TBGravar!int_NotaFiscal = NovoNumNFiscal
        TBGravar!ID_nota = TxtID
        TBGravar!dbl_ValorTotal = TBAbrir!dbl_ValorTotal
        TBGravar!Retorno = TBAbrir!Retorno
        TBGravar!Remessa = TBAbrir!Remessa
        TBGravar!Soma_retorno_totalnf = TBAbrir!Soma_retorno_totalnf
        TBGravar!Valor_frete = TBAbrir!Valor_frete
        TBGravar!Tem_IPI_frete = TBAbrir!Tem_IPI_frete
        TBGravar!Valor_seguro = TBAbrir!Valor_seguro
        TBGravar!Valor_acessorias = TBAbrir!Valor_acessorias
        TBGravar!Valor_desconto = TBAbrir!Valor_desconto
        TBGravar!VlrMPA = TBAbrir!VlrMPA
        TBGravar!Codigo_enquadramento_IPI = TBAbrir!Codigo_enquadramento_IPI
        TBGravar.Update
        ProcCopiarProdutosNFe
        ProcCopiarCST
        TBGravar.Close
        TBAbrir.MoveNext
    Loop
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCopiarServicos(NovoNumNFiscal As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Detalhes_Nota where Id_nota = " & IDAntigo & " and Tipo = 'S' order by Int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Do While TBAbrir.EOF = False
        Set TBGravar = CreateObject("adodb.recordset")
        TBGravar.Open "Select * from tbl_Detalhes_Nota", Conexao, adOpenKeyset, adLockOptimistic
        TBGravar.AddNew
        TBGravar!Tipo = "S"
        TBGravar!Codproduto = TBAbrir!Codproduto
        TBGravar!int_Cod_Produto = TBAbrir!int_Cod_Produto
        TBGravar!ID_CFOP = TBAbrir!ID_CFOP
        TBGravar!CST_PIS = TBAbrir!CST_PIS
        TBGravar!CST_Cofins = TBAbrir!CST_Cofins
        TBGravar!ID_nota = TxtID
        TBGravar!Txt_descricao = TBAbrir!Txt_descricao
        TBGravar!N_referencia = TBAbrir!N_referencia
        TBGravar!Familia = TBAbrir!Familia
        TBGravar!int_Qtd = TBAbrir!int_Qtd
        TBGravar!txt_Unid = TBAbrir!txt_Unid
        TBGravar!Unidade_com = TBAbrir!Unidade_com
        TBGravar!dbl_ValorUnitario = TBAbrir!dbl_ValorUnitario
        TBGravar!Servico_cliente = TBAbrir!Servico_cliente
        'impostos
        TBGravar!PIS_Serv = TBAbrir!PIS_Serv
        TBGravar!Total_PIS_serv = TBAbrir!Total_PIS_serv
        TBGravar!Cofins_Serv = TBAbrir!Cofins_Serv
        TBGravar!Total_Cofins_serv = TBAbrir!Total_Cofins_serv
        TBGravar!CSLL_Serv = TBAbrir!CSLL_Serv
        TBGravar!Total_CSLL_serv = TBAbrir!Total_CSLL_serv
        TBGravar!ISS = TBAbrir!ISS
        TBGravar!VlrISS = TBAbrir!VlrISS
        TBGravar!INSS_Serv = TBAbrir!INSS_Serv
        TBGravar!Total_INSS_serv = TBAbrir!Total_INSS_serv
        TBGravar!IRPJ_Serv = TBAbrir!IRPJ_Serv
        TBGravar!Total_IRPJ_serv = TBAbrir!Total_IRPJ_serv
        TBGravar!IRRF_Serv = TBAbrir!IRRF_Serv
        TBGravar!Total_IRRF_serv = TBAbrir!Total_IRRF_serv
        TBGravar!cpp = TBAbrir!cpp
        TBGravar!Total_CPP = TBAbrir!Total_CPP
        
        TBGravar!Retencao_PIS = TBAbrir!Retencao_PIS
        TBGravar!Retencao_Cofins = TBAbrir!Retencao_Cofins
        TBGravar!Retencao_CSLL = TBAbrir!Retencao_CSLL
        TBGravar!Retencao_INSS = TBAbrir!Retencao_INSS
        TBGravar!Retencao_IRRF = TBAbrir!Retencao_IRRF
        TBGravar!Retencao_ISSQN = TBAbrir!Retencao_ISSQN
        TBGravar!Imposto_manual_serv = TBAbrir!Imposto_manual_serv
        
        TBGravar!Aliq_aprox_tributos = TBAbrir!Aliq_aprox_tributos
        TBGravar!Valor_aprox_tributos = TBAbrir!Valor_aprox_tributos
        
        TBGravar!int_NotaFiscal = NovoNumNFiscal
        TBGravar!dbl_ValorTotal = TBAbrir!dbl_ValorTotal
        TBGravar.Update
        TBGravar.Close
        TBAbrir.MoveNext
    Loop
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCopiarTotaisNota(NovoNumNFiscal As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Totais_Nota where Id_nota = " & IDAntigo, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBGravar = CreateObject("adodb.recordset")
    TBGravar.Open "Select * from tbl_Totais_Nota", Conexao, adOpenKeyset, adLockOptimistic
    TBGravar.AddNew
    TBGravar!int_NotaFiscal = NovoNumNFiscal
    TBGravar!ID_nota = TxtID
    TBGravar!dbl_Valor_Total_Produtos = TBAbrir!dbl_Valor_Total_Produtos
    TBGravar!dbl_Valor_Total_Nota_Serv = TBAbrir!dbl_Valor_Total_Nota_Serv
    TBGravar!dbl_Valor_Frete = TBAbrir!dbl_Valor_Frete
    TBGravar!dbl_Valor_Seguro = TBAbrir!dbl_Valor_Seguro
    TBGravar!dbl_Desp_Adicionais = TBAbrir!dbl_Desp_Adicionais
    TBGravar!VlrMPA = TBAbrir!VlrMPA
    TBGravar!VLRMOA = TBAbrir!VLRMOA
    
    'Impostos produtos
    TBGravar!dbl_Base_ICMS = TBAbrir!dbl_Base_ICMS
    TBGravar!dbl_Valor_ICMS = TBAbrir!dbl_Valor_ICMS
    TBGravar!dbl_Base_ICMS_Subst = TBAbrir!dbl_Base_ICMS_Subst
    TBGravar!dbl_Valor_ICMS_Subst = TBAbrir!dbl_Valor_ICMS_Subst
    TBGravar!dbl_Valor_Total_IPI = TBAbrir!dbl_Valor_Total_IPI
    TBGravar!Total_PIS_prod = TBAbrir!Total_PIS_prod
    TBGravar!Total_Cofins_prod = TBAbrir!Total_Cofins_prod
    TBGravar!Total_CSLL_prod = TBAbrir!Total_CSLL_prod
    TBGravar!Total_IRPJ_prod = TBAbrir!Total_IRPJ_prod
    TBGravar!Valor_total_ICMS_SN = TBAbrir!Valor_total_ICMS_SN
    
    'Impostos serviços
    TBGravar!Total_PIS_serv = TBAbrir!Total_PIS_serv
    TBGravar!Total_Cofins_serv = TBAbrir!Total_Cofins_serv
    TBGravar!Total_CSLL_serv = TBAbrir!Total_CSLL_serv
    TBGravar!dbl_valor_total_iss = TBAbrir!dbl_valor_total_iss
    TBGravar!Total_INSS_serv = TBAbrir!Total_INSS_serv
    TBGravar!Total_IRPJ_serv = TBAbrir!Total_IRPJ_serv
    TBGravar!Total_IRRF_serv = TBAbrir!Total_IRRF_serv
    
    'Impostos faturamento
    TBGravar!DAS = TBAbrir!DAS
    TBGravar!Total_DAS = TBAbrir!Total_DAS
    
    TBGravar!Valor_total_aprox_tributos = TBAbrir!Valor_total_aprox_tributos
    'TBGravar!Valor_total_ICMS_desonerado = TBAbrir!Valor_total_ICMS_desonerado
    
    'Retenção de PIS/Cofins
    TBGravar!Total_retencao_PIS = TBAbrir!Total_retencao_PIS
    TBGravar!Total_retencao_Cofins = TBAbrir!Total_retencao_Cofins
    
    TBGravar!dbl_Valor_Total_Nota = TBAbrir!dbl_Valor_Total_Nota
    TBGravar!Total_Credito_ICMS = IIf(IsNull(TBAbrir!Total_Credito_ICMS), 0, TBAbrir!Total_Credito_ICMS)
    TBGravar!Total_retorno = IIf(IsNull(TBAbrir!Total_retorno), 0, TBAbrir!Total_retorno)
    TBGravar!Valor_total_desconto = IIf(IsNull(TBAbrir!Valor_total_desconto), 0, TBAbrir!Valor_total_desconto)
    TBGravar!Valor_total_desconto_SUFRAMA = IIf(IsNull(TBAbrir!Valor_total_desconto_SUFRAMA), 0, TBAbrir!Valor_total_desconto_SUFRAMA)
    TBGravar!Valor_total_II = IIf(IsNull(TBAbrir!Valor_total_II), 0, TBAbrir!Valor_total_II)
    TBGravar!Valor_total_receber_pagar = IIf(IsNull(TBAbrir!Valor_total_receber_pagar), 0, TBAbrir!Valor_total_receber_pagar)
    TBGravar.Update
    TBGravar.Close
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCopiarTransportadora(NovoNumNFiscal As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Dados_Transp where Id_nota = " & IDAntigo, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBGravar = CreateObject("adodb.recordset")
    TBGravar.Open "Select * from tbl_Dados_Transp", Conexao, adOpenKeyset, adLockOptimistic
    TBGravar.AddNew
    TBGravar!ID_nota = TxtID
    TBGravar!Tipo_transp = TBAbrir!Tipo_transp
    TBGravar!IdIntTransp = TBAbrir!IdIntTransp
    TBGravar!int_NotaFiscal = NovoNumNFiscal
    TBGravar!txt_Frete_Conta = TBAbrir!txt_Frete_Conta
    TBGravar!txt_Placa = TBAbrir!txt_Placa
    TBGravar!txt_UF_Placa = TBAbrir!txt_UF_Placa
    TBGravar!txt_CNPJ = TBAbrir!txt_CNPJ
    TBGravar!txt_IE = TBAbrir!txt_IE
    TBGravar!int_numero = TBAbrir!int_numero
    TBGravar!int_Qtd_Transp = TBAbrir!int_Qtd_Transp
    TBGravar!txt_Especie = TBAbrir!txt_Especie
    TBGravar!txt_Marca = TBAbrir!txt_Marca
    TBGravar!dbl_Peso_Bruto = TBAbrir!dbl_Peso_Bruto
    TBGravar!dbl_Peso_Liquido = TBAbrir!dbl_Peso_Liquido
    TBGravar!txt_Razao = TBAbrir!txt_Razao
    TBGravar!txt_Endereco = TBAbrir!txt_Endereco
    TBGravar!txt_Municipio = TBAbrir!txt_Municipio
    TBGravar!txt_UF = TBAbrir!txt_UF
    TBGravar!UF_embarque = TBAbrir!UF_embarque
    TBGravar!Local_embarque = TBAbrir!Local_embarque
    TBGravar!Codigo_ANTT = TBAbrir!Codigo_ANTT
    TBGravar!Via_transp = TBAbrir!Via_transp
    TBGravar!Frete_contratado = TBAbrir!Frete_contratado
    TBGravar.Update
    TBGravar.Close
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCopiarDadosAdicionais(NovoNumNFiscal As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_DadosAdicionais where Id_nota = " & IDAntigo, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBGravar = CreateObject("adodb.recordset")
    TBGravar.Open "Select * from tbl_DadosAdicionais", Conexao, adOpenKeyset, adLockOptimistic
    TBGravar.AddNew
    TBGravar!IDNotaFiscal = NovoNumNFiscal
    TBGravar!ID_nota = TxtID
    TBGravar!mem_corpo = TBAbrir!mem_corpo
    TBGravar!mem_DadosAdicionais = TBAbrir!mem_DadosAdicionais
    TBGravar!RE = TBAbrir!RE
    TBGravar.Update
    TBGravar.Close
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdDados_adicionais_Click()
On Error GoTo tratar_erro

Aplic = 2
frmFaturamento_Prod_Serv_DadosAdicionais.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdDados_corpo_Click()
On Error GoTo tratar_erro

Aplic = 1
frmFaturamento_Prod_Serv_DadosAdicionais.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExcluirDadosAd()
On Error GoTo tratar_erro

If Excluir = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & TxtID, IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal"), "dados adicionais", "excluir estes", False, True) = False Then Exit Sub

FunVerifAlteracaoNF TxtID, False, optServico
If Permitido1 = False Or Permitido = False Then
    MsgBox ("Não é permitido excluir, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
If MsgBox("Deseja realmente excluir os dados adicionais desta nota?", vbQuestion + vbYesNo) = vbYes Then
    Conexao.Execute "DELETE FROM tbl_DadosAdicionais WHERE id_nota = " & TxtID.Text
    '==================================
    Modulo = Formulario
    Evento = "Excluir dados adicionais"
    ID_documento = TxtID
    ProcVerificaTipoNF False
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
    Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
    Documento1 = ""
    ProcGravaEvento
    '==================================
    ProcCarregaDadosAdicionais
    MsgBox ("Dados adicionais excluído com sucesso."), vbInformation
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcRelacionar()
On Error GoTo tratar_erro

'If Left(cmbFinalidade_emissao, 1) = 1 Or Left(cmbFinalidade_emissao, 1) = 3 Then
'    MsgBox ("Só é permitido fazer relacionamento para nota fiscal Complementar ou de Devolução/Retorno."), vbExclamation
'    Exit Sub
'End If
If Faturamento_NF_Saida = False Or Faturamento_NF_Saida = True And Left(cmbFinalidade_emissao, 1) = 2 Then
    If Novo_Nota1 = True Then
        MsgBox ("Salve o produto antes de relacionar a nota fiscal."), vbExclamation
        Exit Sub
    End If
    Acao = "relacionar a nota fiscal"
    If txtCod_Produto = "" Then
        NomeCampo = "o código interno"
        ProcVerificaAcao
        If Frame1(9).Enabled = True Then txtCod_Produto.SetFocus
        Exit Sub
    End If
    If txtQtd = "" Then
        NomeCampo = "a quantidade"
        ProcVerificaAcao
        txtQtd.SetFocus
        Exit Sub
    End If
    If txtDescricao_Produto = "" Then
        NomeCampo = "a descrição"
        ProcVerificaAcao
        txtDescricao_Produto.SetFocus
        Exit Sub
    End If
End If
frmFaturamento_Relacionamento.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcProximo()
On Error GoTo tratar_erro

If TxtID = "" Then Exit Sub
Set TBLISTA = CreateObject("adodb.recordset")
If Faturamento_NF_Saida = True Then TextoFiltro = "Aplicacao = 'P'" Else TextoFiltro = "Aplicacao = 'T'"
TBLISTA.Open "Select * from tbl_Dados_Nota_Fiscal where " & TextoFiltro & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " order by dt_DataEmissao, id", Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.BOF = False Then
    TBLISTA.Find ("ID = " & TxtID)
    TBLISTA.MoveNext
    If TBLISTA.EOF = False Then
        TxtID = TBLISTA!ID
        ProcCarregaDadosNota IIf(TxtID = "", 0, TxtID)
        txtCod_Produto.Text = ""
        ProcLimpaCamposProd
        ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
        ProcCarregaLista
        txtcodServ.Text = ""
        ProcLimpaCamposServicos
        ProcCarregaListaServicos
        ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
        ProcLimpaCamposDuplicata
        ProcCarregaDuplicatas
        ProcLimpaCamposTransp
        ProcCarregaQuantidadePesos
        ProcCarregaDadosTransporte
    Else
        MsgBox ("Fim dos cadastros de notas fiscais."), vbInformation
    End If
End If
Novo_Nota = False

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaDadosTransporte()
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_dados_transp where id_nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Select Case TBAbrir!Tipo_transp
        Case "C": Cmb_tipo_transp = "Cliente"
        Case "F": Cmb_tipo_transp = "Fornecedor"
        Case "E": Cmb_tipo_transp = "Empresa"
    End Select
    TxtTransp_nome = IIf(IsNull(TBAbrir!txt_Razao) = False, TBAbrir!txt_Razao, "")
    txtidinttransp.Text = IIf(IsNull(TBAbrir!IdIntTransp) = False, TBAbrir!IdIntTransp, "")
    txtTransp_cnpj = IIf(IsNull(TBAbrir!txt_CNPJ) = False, TBAbrir!txt_CNPJ, "")
    txtTransp_Placa = IIf(IsNull(TBAbrir!txt_Placa) = False, TBAbrir!txt_Placa, "")
    If IsNull(TBAbrir!txt_UF_Placa) = False And TBAbrir!txt_UF_Placa <> "" Then txtTransp_uf = TBAbrir!txt_UF_Placa
    txtTransp_endereco = IIf(IsNull(TBAbrir!txt_Endereco) = False, TBAbrir!txt_Endereco, "")
    txtTransp_numero = IIf(IsNull(TBAbrir!int_numero), "", TBAbrir!int_numero)
    txtTransp_municipio = IIf(IsNull(TBAbrir!txt_Municipio) = False, TBAbrir!txt_Municipio, "")
    If IsNull(TBAbrir!txt_UF) = False And TBAbrir!txt_UF <> "" Then txtTransp_uf_Transportadora = TBAbrir!txt_UF
    txtTransp_IE = IIf(IsNull(TBAbrir!txt_IE) = False, TBAbrir!txt_IE, "")
    txtTransp_qtd = IIf(IsNull(TBAbrir!int_Qtd_Transp), "", Format(TBAbrir!int_Qtd_Transp, "###,##0.0000"))
    
    ProcCarregaComboTranspMarcaEspecie Cmb_transp_especie, "E"
    If IsNull(TBAbrir!txt_Especie) = False And TBAbrir!txt_Especie <> "" Then Cmb_transp_especie = TBAbrir!txt_Especie
    ProcCarregaComboTranspMarcaEspecie Cmb_transp_marca, "M"
    If IsNull(TBAbrir!txt_Marca) = False And TBAbrir!txt_Marca <> "" Then Cmb_transp_marca = TBAbrir!txt_Marca
    
    Txt_numeracao = IIf(IsNull(TBAbrir!Numeracao), "", TBAbrir!Numeracao)
    txtTransp_pesoBruto = IIf(IsNull(TBAbrir!dbl_Peso_Bruto), "", Format(TBAbrir!dbl_Peso_Bruto, "###,##0.000000"))
    txtTransp_pesoliquido = IIf(IsNull(TBAbrir!dbl_Peso_Liquido), "", Format(TBAbrir!dbl_Peso_Liquido, "###,##0.000000"))
    If TBAbrir!Sedex = True Then chkSedex.Value = 1 Else chkSedex.Value = 0
    If TBAbrir!EnviarXML = True Then Chk_enviar_XML_transp.Value = 1 Else Chk_enviar_XML_transp.Value = 0
    With Cmb_via_transp
        Select Case TBAbrir!Via_transp
            Case 0: .Text = "0 - Nenhum"
            Case 1: .Text = "1 - Rodoviário"
            Case 2: .Text = "2 - Ferroviário"
            Case 3: .Text = "3 - Rodo-Ferroviário"
            Case 4: .Text = "4 - Aquaviário"
            Case 5: .Text = "5 - Dutoviário"
            Case 6: .Text = "6 - Aéreo"
            Case 7: .Text = "7 - Outros"
        End Select
    End With
    Txt_codigo_ANTT = IIf(IsNull(TBAbrir!Codigo_ANTT), "", TBAbrir!Codigo_ANTT)
    With cmbFrete
        Select Case TBAbrir!txt_Frete_Conta
            Case 0: .Text = "0 - Contratação do Frete por conta do Remetente (CIF)"
            Case 1: .Text = "1 - Contratação do Frete por conta do Destinatário (FOB)"
            Case 2: .Text = "2 - Contratação do Frete por conta de Terceiros"
            Case 3: .Text = "3 - Transporte Próprio por conta do Remetente"
            Case 4: .Text = "4 - Transporte Próprio por conta do Destinatário"
            Case 9: .Text = "9 - Sem Ocorrência de Transporte"
        End Select
    End With
    With Cmb_frete_contratado
        Select Case TBAbrir!Frete_contratado
            Case 0: .Text = "0 - Operações de vendas, com ônus suportado pelo estabelecimento vendedor"
            Case 1: .Text = "1 - Operações de vendas, com ônus suportado pelo adquirente"
            Case 2: .Text = "2 - Operações de compras (bens para revenda, matérias-prima e outros produtos, geradores de crédito)"
            Case 3: .Text = "3 - Operações de compras (bens para revenda, matérias-prima e outros produtos, não geradores de crédito)"
            Case 4: .Text = "4 - Transferência de produtos acabados entre estabelecimentos da pessoa jurídica"
            Case 5: .Text = "5 - Transferência de produtos em elaboração entre estabelecimentos da pessoa jurídica"
            Case 9: .Text = "9 - Outras"
        End Select
    End With
End If
TBAbrir.Close
        
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub CmdCF_Click()
On Error GoTo tratar_erro

If txtCod_Produto = "" Then Exit Sub
If NFe_liberada = False Then
    Faturamento = True
    Vendas_Proposta = False
    Vendas_PI = False
    Clientes = False
    Compras_Pedido = False
    Familia_NCM = False
    ClassFiscal = False
    frmProj_Classificacao_Fiscal.Show 1
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExcluirDuplicatas()
On Error GoTo tratar_erro

If Excluir = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & TxtID, IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal"), "duplicata(s)", "excluir esta(s)", False, True) = False Then Exit Sub

FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = False Then
    If Permitido = True Then
        MsgBox ("Não é permitido excluir, " & MsgTexto & "."), vbExclamation
        Exit Sub
    Else
        Set TBUsuarios = CreateObject("adodb.recordset")
        TBUsuarios.Open "Select usuarios.* from usuarios INNER JOIN acessos ON usuarios.IDUsuario = Acessos.IDUsuario where usuarios.usuario = '" & pubUsuario & "' and Acessos.Acesso = 'Faturamento/Nota fiscal/Excluir duplicatas'", Conexao, adOpenKeyset, adLockOptimistic
        If TBUsuarios.EOF = True Then
            Sit_REG = 2
            frmFaturamento_Prod_serv_excluir_dup_aut.Show 1
        Else
            ProcExcluirDuplicatas1
        End If
    End If
Else
    ProcExcluirDuplicatas1
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcExcluirDuplicatas1()
On Error GoTo tratar_erro

If lst_Duplicata.ListItems.Count = 0 Then
    If txtNFiscal = "" Then NomeCampo = "ordem de faturamento" Else NomeCampo = "nota fiscal"
    MsgBox ("Não existe nenhuma duplicata nesta " & NomeCampo & "."), vbExclamation
    Exit Sub
End If
If lst_Duplicata.ListItems.Count <> 0 Then If VerificaContaBaixada(TxtID, "excluir", True) = True Then Exit Sub
If MsgBox("Deseja realmente excluir a(s) duplicata(s) desta nota?", vbQuestion + vbYesNo) = vbYes Then
    ProcExcluirArquivosRemessa TxtID
    Conexao.Execute "DELETE FROM tbl_Detalhes_Recebimento WHERE id_nota = " & TxtID.Text
    Conexao.Execute "DELETE FROM tbl_Detalhes_Recebimento_Nboletos WHERE id_nota = " & TxtID.Text
    ProcExcluirContas TxtID, Opt_saida, Opt_entrada, txttipocliente
    Conexao.Execute "Update tbl_Totais_Nota Set Valor_total_receber_pagar = 0 where ID_nota = " & TxtID
    Conexao.Execute "DELETE FROM CC_realizado where id_duplicata = " & TxtID.Text
    If Opt_saida.Value = True Then ProcExcluirImpostoPagar
    MsgBox ("Duplicata(s) excluída(s) com sucesso."), vbInformation
    '==================================
    Modulo = Formulario
    Evento = "Excluir duplicata(s)"
    ID_documento = TxtID
    ProcVerificaTipoNF False
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
    Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
    Documento1 = ""
    ProcGravaEvento
    '==================================
    ProcLimpaCamposDuplicata
    ProcCarregaListaDuplicatas IIf(TxtID = "", 0, TxtID)
    Sit_REG = 0
    Novo_Nota3 = False
    
    If Faturamento_NF_Saida = True Then
        Opt_saida.Enabled = True
        Opt_entrada.Enabled = True
    Else
        Opt_saida.Enabled = False
        Opt_entrada.Enabled = True
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Public Sub ProcExcluirArquivosRemessa(ID_nota As Long)
On Error GoTo tratar_erro

'Excluir arquivo remessa
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Detalhes_Recebimento WHERE id_nota = " & ID_nota & " and txt_Portador_Banco <> 'Null' and Seq_remessa is not null", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Do While TBAbrir.EOF = False
        If TBAbrir!txt_Portador_Banco <> "" And TBAbrir!Seq_remessa <> "" Then ProcExcluirArquivosRemessa1
        TBAbrir.MoveNext
    Loop
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Public Sub ProcExcluirArquivosRemessa1()
On Error GoTo tratar_erro

Dia = Format(TBAbrir!Data_emissao, "dd")
Mes = Format(TBAbrir!Data_emissao, "mm")
Ano = Format(TBAbrir!Data_emissao, "yyyy")
Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select * from tbl_Instituicoes where txt_Descricao = '" & TBAbrir!txt_Portador_Banco & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then
    If IsNull(TBFI!int_NBanco) = False And TBFI!int_NBanco <> "" Then
        Seq1 = TBAbrir!ID
        Select Case TBFI!int_NBanco
            Case "001": 'Banco do brasil
                Arquivo = "CBR" & Dia & Mes & "." & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Banco do brasil"
            Case "033": 'Santander
                Arquivo = "DB" & Dia & Mes & Right(Ano, 2) & "." & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Santander"
            Case "104":
                Arquivo = "CB" & Dia & Mes & "." & Seq1 'Caixa
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Caixa"
            Case "237": 'Bradesco
                Arquivo = "CB" & Dia & Mes & "." & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Bradesco"
            Case "341": 'Itaú
                If TBAbrir!Seq_remessa < 10 Then Seq1 = "0" & TBAbrir!Seq_remessa Else Seq1 = TBAbrir!Seq_remessa
                Arquivo = Dia & Mes & Right(Ano, 2) & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Itaú"
            Case "399": 'HSBC
                Arquivo = "D" & Dia & Mes & Ano & "." & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\HSBC"
            Case "409": 'Unibanco
                Arquivo = "CBR" & Dia & Mes & "." & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Unibanco"
        End Select
        TBAbrir!Seq_remessa = Null
        TBAbrir.Update
        Set GerArqPastas = CreateObject("Scripting.FileSystemObject")
        If GerArqPastas.FileExists(Diretorio & "\" & Arquivo & ".txt") = True Then GerArqPastas.DeleteFile (Diretorio & "\" & Arquivo & ".txt")
    End If
End If

tratar_erro:
    If Err.Number = 53 Then Exit Sub
    'MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExcluirServico()
On Error GoTo tratar_erro

If Excluir = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " voce não tem acesso a este recurso.")
    Exit Sub
End If
FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = False Or Permitido = False Then
    MsgBox ("Não é permitido excluir, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
Permitido = False
With Listaservicos
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If MsgBox("Deseja realmente excluir este(s) serviço(s)?", vbQuestion + vbYesNo) = vbNo Then Exit Sub
            End If
            Permitido = True
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from tbl_Detalhes_Nota WHERE Int_codigo = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
            If TBFI.EOF = False Then
                '==================================
                Modulo = Formulario
                Evento = "Excluir serviço"
                ID_documento = .ListItems(InitFor)
                ProcVerificaTipoNF False
                If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
                Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
                Documento1 = "Cód. interno: " & TBFI!int_Cod_Produto
                ProcGravaEvento
                '==================================
                                
                Conexao.Execute "DELETE FROM tbl_Detalhes_Nota WHERE Int_codigo = " & .ListItems(InitFor)
                
                Set TBTempo = CreateObject("adodb.recordset")
                TBTempo.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                If TBTempo.EOF = False Then
                    Do While TBTempo.EOF = False
                        IDlista = TBTempo!ID_carteira
                        Desenho = TBTempo!Codinterno
                        Conexao.Execute "DELETE from tbl_Detalhes_Nota_pedidos where ID = " & TBTempo!ID
                        
                        ProcGravarQtdeFaturadaProdServ IDlista, Desenho
                        ProcAtualizaCTMATCTTEROrdemProd IDlista, Desenho
                        ProcExcluirPedidosNF IDlista, Desenho
                        TBTempo.MoveNext
                    Loop
                End If
                TBTempo.Close
            End If
            TBFI.Close
        End If
    Next InitFor
End With
If Permitido = False Then
    MsgBox ("Informe o(s) serviço(s) antes de excluir."), vbExclamation
Else
    MsgBox ("Serviço(s) excluído(s) com sucesso."), vbInformation
    txtcodServ.Text = ""
    ProcLimpaCamposServicos
    ProcCarregaListaServicos
    If NF_alterada = True Then ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
    ProcGravarTotaisNota
    ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
    ProcCarregaListaNota (IIf(FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))
    Novo_Nota2 = False
    Frame1(12).Enabled = False
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExcluirTransp()
On Error GoTo tratar_erro

If Excluir = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If txtNFiscal = "" Then Familiatext = "a ordem de faturamento" Else Familiatext = "a nota fiscal"
If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & TxtID, "ordem de faturamento", "transportadora", "excluir esta", False, True) = False Then Exit Sub

Permitido1 = True
If NF_cancelada = True Then
    Permitido1 = False
    NomeCampo = "cancelada"
    GoTo Prosseguir
End If
If NF_enviada = True Then
    Permitido1 = False
    NomeCampo = "enviada"
    GoTo Prosseguir
End If
If NFe_liberada = True Then
    Permitido1 = False
    NomeCampo = "enviada para SEFAZ"
End If
Prosseguir:
    If Permitido1 = False Then
        MsgBox ("Não é permitido excluir, pois a nota já foi " & NomeCampo & "."), vbExclamation
        Exit Sub
    End If
    If MsgBox("Deseja realmente excluir os dados de transporte desta nota?", vbQuestion + vbYesNo) = vbYes Then
        Acao = "excluir"
        If txtidinttransp = "" Then
            NomeCampo = "a transportadora"
            ProcVerificaAcao
            Exit Sub
        End If
        Conexao.Execute "DELETE FROM tbl_Dados_Transp WHERE id_nota =" & TxtID.Text
        MsgBox ("Transportadora excluída com sucesso."), vbInformation
        '==================================
        Modulo = Formulario
        Evento = "Excluir transportadora"
        ID_documento = txtidinttransp
        ProcVerificaTipoNF False
        If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
        Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
        Documento1 = ""
        ProcGravaEvento
        '==================================
        ProcLimpaCamposTransp
    End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmdfiltrarordem_Click()
On Error GoTo tratar_erro

If txtCod_Produto.Text = "" Then
    NomeCampo = "código interno"
    Acao = "pesquisar"
    ProcVerificaAcao
    txtCod_Produto.SetFocus
    Exit Sub
End If
Faturamento_ListaProdudos = True
frmFaturamento_dadosordem.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdfiltrarordem_servico_Click()
On Error GoTo tratar_erro

If txtcodServ.Text = "" Then
    NomeCampo = "código interno"
    Acao = "pesquisar"
    ProcVerificaAcao
    txtcodServ.SetFocus
    Exit Sub
End If
Faturamento_ListaProdudos = False
frmFaturamento_dadosordem.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcGerarDuplicatas()
On Error GoTo tratar_erro

qt = 0
GerarDuplicatas = True
FunVerifAlteracaoNF TxtID, True, optServico
GerarDuplicatas = False

If Permitido1 = False Then
    MsgBox ("Não é permitido gerar duplicatas, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
If Opt_saida.Value = True Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select CFOP.IDCountCfop from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & TxtID & " and (CFOP.Vendas = 'True' or CFOP.MaoObra = 'True' or CFOP.Devolucao = 'True' or CFOP.Remessa = 'True')", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = True Then
        MsgBox ("Não é permitido gerar duplicatas, pois a CFOP vinculada ao(s) produto(s)/serviço(s) não permite."), vbExclamation
        TBAbrir.Close
        Exit Sub
    End If
    TBAbrir.Close
End If
If lst_Duplicata.ListItems.Count <> 0 Then
    Permitido = True
    Set TBContas = CreateObject("adodb.recordset")
    If Opt_saida.Value = True Then
        TBContas.Open "Select * from tbl_contas_receber where ID_nota = " & TxtID & " and Status <> 'TÍTULO EM ABERTO'", Conexao, adOpenKeyset, adLockOptimistic
        If TBContas.EOF = False Then Permitido = False
    Else
        TBContas.Open "Select * from tbl_ContasPagar where ID_nota = " & TxtID & " and Status <> 'TÍTULO EM ABERTO'", Conexao, adOpenKeyset, adLockOptimistic
        If TBContas.EOF = False Then Permitido = False
    End If
    TBContas.Close
    If Permitido = False Then
        MsgBox ("Não é permitido gerar duplicatas, pois existem duplicatas na nota que já foram alteradas no financeiro."), vbExclamation
        Exit Sub
    End If
End If

Acao = "gerar o(s) pagamento(s)"
If txt_ValorNota.Text = "" Then
    MsgBox ("Informe o valor da nota antes de gerar o(s) pagamento(s)."), vbExclamation
    txt_ValorNota.SetFocus
    Exit Sub
End If

ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
Valor = txt_ValorNota
ProcVerificaTipoNF False

If Valor = 0 Then
    MsgBox ("Informe o valor da nota antes de gerar o(s) pagamento(s)."), vbExclamation
    txt_ValorNota.SetFocus
    Exit Sub
End If
If txt_Cond_Recebimento.Text = "" Or txt_Cond_Recebimento.Text = " " Then
    MsgBox ("Informe as condições de pagamento/recebimento antes de gerar o(s) pagamento(s)."), vbExclamation
    txt_Cond_Recebimento.SetFocus
    Exit Sub
End If
If IsNumeric(Left(txt_Cond_Recebimento, 1)) = False Then
    MsgBox ("Informe as condições de pagamento/recebimento corretamente antes de gerar o(s) pagamento(s)."), vbExclamation
    txt_Cond_Recebimento.SetFocus
    Exit Sub
End If
Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select Total_retencao_PIS, Total_retencao_Cofins from tbl_Totais_Nota where id_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
If TBTotaisnota.EOF = False Then
    Valor_Retencao_PIS = IIf(IsNull(TBTotaisnota!Total_retencao_PIS), 0, TBTotaisnota!Total_retencao_PIS)
    Valor_Retencao_Cofins = IIf(IsNull(TBTotaisnota!Total_retencao_Cofins), 0, TBTotaisnota!Total_retencao_Cofins)
End If

ProcSomaRetencaoServicos

'Verifica produtos de remessa
qt = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select Sum(dbl_ValorTotal) as qt from tbl_Detalhes_Nota where id_nota = " & TxtID.Text & " and Tipo = 'P' and Remessa = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    qt = IIf(IsNull(TBProduto!qt), 0, TBProduto!qt)
End If

'Verifica produtos de retorno que somam o valor no total da nota
VlrTotalRetorno = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select Sum(dbl_ValorTotal) as VlrTotalRetorno from tbl_Detalhes_Nota where id_nota = " & TxtID.Text & " and Tipo = 'P' and Retorno = 'True' and Soma_retorno_totalnf = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    VlrTotalRetorno = IIf(IsNull(TBProduto!VlrTotalRetorno), 0, TBProduto!VlrTotalRetorno)
End If
TBProduto.Close

QtdeSaida = 0
Contador = 1
Contador2 = 0
nPagto = 0
Valor_Duplicatas = 0
Valor1 = 0
ValorTotal = 0
With lst_Duplicata
    Select Case Sit_REG
        Case 0
            Novo_Nota3 = True
            .ListItems.Clear
            
            QtdeSaida = Len(txt_Cond_Recebimento)
            
            TextoCond = ""
            Do While Contador <= QtdeSaida
                If Mid(txt_Cond_Recebimento, Contador, 1) = "/" Or Mid(txt_Cond_Recebimento, Contador, 1) = "," Or IsNumeric(Mid(txt_Cond_Recebimento, Contador, 1)) = True Then
                    If TextoCond = "" Then TextoCond = Mid(txt_Cond_Recebimento, Contador, 1) Else TextoCond = TextoCond & Mid(txt_Cond_Recebimento, Contador, 1)
                End If
                Contador = Contador + 1
            Loop
            
            'Verifica qtde. de parcelas
            Contador = 1
            QtdeSaida = Len(TextoCond)
            Do While Contador <= QtdeSaida
               Do While Mid(TextoCond, Contador, 1) <> "/" And Contador <= QtdeSaida
                    Contador2 = Contador2 + 1
                    Contador = Contador + 1
                Loop
                nPagto = nPagto + 1
                Contador = Contador + 1
            Loop
            
            'Verifica valor a pagar/receber
            Valor = IIf(txtTotalservicos = "", 0, txtTotalservicos)

            'Valor total dos produtos com retenção
            Valor1 = IIf(txt_ValorNota = "", 0, txt_ValorNota) - Valor_Retencao_PIS - Valor_Retencao_Cofins - Valor
            ValorTotal = (Valor1 + Valor) - Valor_Retencao_Servico
            If Valor_Retencao_Servico = 0 Then
                If Opt_saida.Value = True And (TipoNF = "SA" Or TipoNF = "M1SA") Then
                    'Valor total dos serviços com retenção
                    ProcVerificaEmpresaCliente
                    If Permitido = True Then ProcVerificaImposto
                End If
            End If

            mxValorPag = Format((ValorTotal - VlrTotalRetorno - qt) / nPagto, "###,##0.00")
            
            Contador = 1
            Contador3 = 1
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select dt_DataEmissao from tbl_Dados_Nota_Fiscal where ID = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                Dataini = TBAbrir!dt_DataEmissao
            End If
            TBAbrir.Close
            
            Controle = 0
            Do While Contador <= QtdeSaida
                
                Contador2 = 0
                Do While Mid(txt_Cond_Recebimento, Contador, 1) <> "/" And Contador <= QtdeSaida
                    Contador2 = Contador2 + 1
                    Contador = Contador + 1
                Loop
                
                mxCondpag = FunSóNumeros(Mid(txt_Cond_Recebimento, Contador3, Contador2))
                Contador3 = Contador3 + Contador2 + 1
                
                With lst_Duplicata
                    Controle = Controle + 1
                    .ListItems.Add(Controle) = Format(Dataini + mxCondpag, "DD/MM/YYYY")
                    
                    If Controle = nPagto Then
                        .ListItems(Controle).ListSubItems.Add , , Format((ValorTotal - VlrTotalRetorno - qt) - Valor_Duplicatas, "###,##0.00")
                    Else
                        .ListItems(Controle).ListSubItems.Add , , mxValorPag
                    End If
                    Valor_Duplicatas = Valor_Duplicatas + mxValorPag
                    
                    Par1 = Controle
                    Par2 = nPagto
                    If Len(Par1) = 1 Then
                        Par1 = "00" & Par1
                    ElseIf Len(Par1) = 2 Then
                            Par1 = "0" & Par1
                    End If
                    If Len(Par2) = 1 Then
                        Par2 = "00" & Par2
                    ElseIf Len(Par2) = 2 Then
                        Par2 = "0" & Par2
                    End If
                    .ListItems(Controle).ListSubItems.Add , , Par1 & "/" & Par2
                    
                    .ListItems.Item(Controle).Checked = True
                End With
                Contador = Contador + 1
            Loop
            
            ProcGravarDuplicatas
            If txtNFiscal <> "" And txtDtValidacao <> "" Then
                If MsgBox("Deseja enviar a(s) duplicata(s) para o financeiro agora?", vbQuestion + vbYesNo) = vbYes Then ProcEnviarDupFinanceiro IIf(TxtID = "", 0, TxtID), True
            End If

            Opt_entrada.Enabled = False
            Opt_saida.Enabled = False
        Case 1
            MsgBox ("Exclua a(s) duplicata(s) da lista, antes de gerar."), vbExclamation
    End Select
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcSomaRetencaoServicos()
On Error GoTo tratar_erro

Valor_Retencao_Servico = 0
Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_Detalhes_Nota where id_nota = " & TxtID & " and Tipo = 'S' and (Retencao_PIS = 'True' or Retencao_Cofins = 'True' or Retencao_CSLL = 'True' or Retencao_INSS = 'True' or Retencao_IRRF = 'True' or Retencao_ISSQN = 'True')", Conexao, adOpenKeyset, adLockOptimistic
If TBTotaisnota.EOF = False Then
    Do While TBTotaisnota.EOF = False
        If TBTotaisnota!Retencao_PIS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!Total_PIS_serv), 0, TBTotaisnota!Total_PIS_serv)
        If TBTotaisnota!Retencao_Cofins = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!Total_Cofins_serv), 0, TBTotaisnota!Total_Cofins_serv)
        If TBTotaisnota!Retencao_CSLL = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!Total_CSLL_serv), 0, TBTotaisnota!Total_CSLL_serv)
        If TBTotaisnota!Retencao_INSS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!Total_INSS_serv), 0, TBTotaisnota!Total_INSS_serv)
        If TBTotaisnota!Retencao_ISSQN = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!VlrISS), 0, TBTotaisnota!VlrISS)
        If TBTotaisnota!Retencao_IRRF = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!Total_IRRF_serv), 0, TBTotaisnota!Total_IRRF_serv)
        TBTotaisnota.MoveNext
    Loop
End If
TBTotaisnota.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcGravarDuplicatas()
On Error GoTo tratar_erro

Conexao.Execute "DELETE from tbl_detalhes_recebimento WHERE id_nota = " & TxtID.Text
With lst_Duplicata
    For InitFor = 1 To .ListItems.Count
        Set TBVendas = CreateObject("adodb.recordset")
        TBVendas.Open "Select * from tbl_detalhes_recebimento WHERE id_nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
        TBVendas.AddNew
        TBVendas!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
        TBVendas!ID_nota = TxtID.Text
        TBVendas!txt_Parcela = .ListItems(InitFor).ListSubItems(2)
        TBVendas!dt_Vencimento = .ListItems(InitFor)
        TBVendas!Tipo_doc = cmbtipo_conta
        TBVendas!txt_Cond_Recebimento = txt_Cond_Recebimento
        TBVendas!txt_Portador_Banco = IIf(cbo_PortBanco = "", Null, cbo_PortBanco)
        TBVendas!txt_Agencia = txt_Agencia
        TBVendas!txt_conta = txt_conta
        TBVendas!dbl_Valor = .ListItems(InitFor).ListSubItems(1)
        TBVendas!Valor_Extenso = FunValorExtenso(TBVendas!dbl_Valor)
        TBVendas!txt_tipopagto = cmb_tipopagto
        TBVendas!Obs = txtObs_Duplicata
        TBVendas.Update
        TBVendas.Close
    Next InitFor
End With
ProcCarregaListaDuplicatas IIf(TxtID = "", 0, TxtID)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcVerificaEmpresaCliente()
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select Codigo from Empresa where Simples = 'False'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then Permitido = True Else Permitido = False

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select Simples from Clientes where IDCliente = " & txtIDCliente & " and NomeRazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    If TBAbrir!Simples = False Then Permitido = True Else Permitido = False
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcVerificaImposto()
On Error GoTo tratar_erro

DestacaImpostos = "NÃO"
Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select CFOP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & TxtID & " and CFOP.Retem = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then
    DestacaImpostos = "SIM"
End If

Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select * from Empresa where Codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then
    If TBFI!Simples = True Then Regime = 1
    If TBFI!Presumido = True Then Regime = 2
    If TBFI!Real = True Then Regime = 3
    If TBFI!Simples1 = True Then Regime = 4
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from Impostos where Regime = " & Regime & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        If Valor > TBAbrir!Acima And TBAbrir!Acima > 0 And DestacaImpostos = "SIM" Then
            Set TBTotaisnota = CreateObject("adodb.recordset")
            TBTotaisnota.Open "Select * from tbl_totais_nota where id_Nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
            If TBTotaisnota.EOF = False Then
                ValorTotal = Format(Valor - (IIf(IsNull(TBTotaisnota!Total_PIS_serv) = False, TBTotaisnota!Total_PIS_serv, 0) + IIf(IsNull(TBTotaisnota!Total_Cofins_serv) = False, TBTotaisnota!Total_Cofins_serv, 0) + IIf(IsNull(TBTotaisnota!Total_CSLL_serv) = False, TBTotaisnota!Total_CSLL_serv, 0) + IIf(IsNull(TBTotaisnota!Total_INSS_serv) = False, TBTotaisnota!Total_INSS_serv, 0) + IIf(IsNull(TBTotaisnota!Total_IRRF_serv) = False, TBTotaisnota!Total_IRRF_serv, 0)), "###,##0.00")
            End If
            TBTotaisnota.Close
        ElseIf Valor >= 667 And Valor <= 5000 And DestacaImpostos = "SIM" Then
                Set TBTotaisnota = CreateObject("adodb.recordset")
                TBTotaisnota.Open "Select * from tbl_totais_nota where id_Nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
                If TBTotaisnota.EOF = False Then
                    ValorTotal = Valor - IIf(IsNull(TBTotaisnota!Total_IRRF_serv), 0, TBTotaisnota!Total_IRRF_serv)
                End If
                TBTotaisnota.Close
        End If
    End If
    TBAbrir.Close
End If
TBFI.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcImprimirDuplicatas()
On Error GoTo tratar_erro

frmFaturamento_Prod_Serv_Menu_Impressao.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Cmdporcento_Click()
On Error GoTo tratar_erro

If txt_ValorNota.Text = "0,00" And txt_ValorNota2.Text = "0,00" Then
    MsgBox ("Verifique o valor total da nota antes de gerar a(s) duplicata(s)."), vbExclamation
    Exit Sub
End If
frm_Duplicata_porcento.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcSalvarDadosAd()
On Error GoTo tratar_erro

If Alterar = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
FunVerifAlteracaoNF TxtID, False, optServico
If Permitido1 = False Or Permitido = False Then
    MsgBox ("Não é permitido salvar, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_dadosadicionais where id_nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = True Then
    TBAbrir.AddNew
    MsgBox ("Novos dados adicionais cadastrados com sucesso."), vbInformation
    '==================================
    Modulo = Formulario
    Evento = "Novo dados adicionais"
    ID_documento = TxtID
    ProcVerificaTipoNF False
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
    Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
    Documento1 = ""
    ProcGravaEvento
    '==================================
Else
    If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
    If FunVerifValidacaoRegistro("alterar", txtDtValidacao, Familiatext, "os dados adicionais", False) = False Then Exit Sub
    
    MsgBox ("Alteração efetuada com sucesso."), vbInformation
    '==================================
    Modulo = Formulario
    Evento = "Alterar dados adicionais"
    ID_documento = TxtID
    ProcVerificaTipoNF False
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
    Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
    Documento1 = ""
    ProcGravaEvento
    '==================================
End If
TBAbrir!IDNotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
TBAbrir!ID_nota = TxtID.Text
TBAbrir!mem_corpo = IIf(Trim(txtDados_Corpo) = "", Null, Trim(txtDados_Corpo))
TBAbrir!mem_DadosAdicionais = IIf(Trim(txtDados_DadosAdicionais) = "", Null, Trim(txtDados_DadosAdicionais))
TBAbrir.Update
TBAbrir.Close
ProcCarregaLista

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcEnviarDupFinanceiro(ID_nota As Long, MostrarMsg As Boolean)
On Error GoTo tratar_erro

If Alterar = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If opt_Cancelada.Value = True Then
    MsgBox ("Não é permitido enviar para o financeiro, pois a notas fiscal está cancelada."), vbExclamation
    Exit Sub
End If
If txtDtValidacao = "" Then
    MsgBox ("Não é permitido enviar para o financeiro, pois a notas fiscal não foi validada."), vbExclamation
    Exit Sub
End If
If lst_Duplicata.ListItems.Count <> 0 Then
    Permitido = True
    Set TBContas = CreateObject("adodb.recordset")
    If Opt_saida.Value = True Then
        TBContas.Open "Select IDIntconta from tbl_contas_receber where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and (Proposta IS NULL or Proposta = N'')", Conexao, adOpenKeyset, adLockOptimistic
        If TBContas.EOF = False Then Permitido = False
    Else
        TBContas.Open "Select IDIntconta from tbl_ContasPagar where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and Despesas_NF = 'False' and (Txt_pedido IS NULL or Txt_pedido = N'')", Conexao, adOpenKeyset, adLockOptimistic
        If TBContas.EOF = False Then Permitido = False
    End If
    TBContas.Close
    If Permitido = False Then
        MsgBox ("Não é permitido enviar para o financeiro, pois existem duplicatas na nota que já foram alteradas no financeiro."), vbExclamation
        Exit Sub
    End If
End If

Permitido2 = False
With lst_Duplicata
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True And lst_Duplicata.ListItems(InitFor).ListSubItems(4) = "NÃO" Then Permitido2 = True
    Next InitFor
End With
If Permitido2 = False Then
    MsgBox ("Não é permitido enviar para o financeiro, pois as duplicatas já foram enviadas, exclua as duplicatas antes de enviar."), vbExclamation
    Exit Sub
End If

If lst_Duplicata.ListItems.Count = 0 Then
    MsgBox "Antes de enviar para o financeiro é preciso gerar os pagamentos," & vbCrLf & "Clique no botão Gerar pagamentos.", vbExclamation
    Exit Sub
Else
    'Corrige numero da nota fiscal e id nas contas geradas pelo pedido interno ou pedido de compra
    Permitido1 = False
    Set TBProposta = CreateObject("adodb.recordset")
    TBProposta.Open "Select * from tbl_proposta_nota where id_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
    If TBProposta.EOF = False Then
        Do While TBProposta.EOF = False
            Set TBContas = CreateObject("adodb.recordset")
            
            If Opt_saida.Value = True Then
                TBContas.Open "Select * from tbl_contas_receber where proposta = '" & TBProposta!Proposta & "' and Antecipacao = 'False' and (Bloqueado = 'False' or Bloqueado is null) and (id_nota = 0 or id_nota is null)", Conexao, adOpenKeyset, adLockOptimistic
                If TBContas.EOF = False Then
                    Permitido1 = True
                    Do While TBContas.EOF = False
                        TBContas!NFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
                        TBContas!ID_nota = ID_nota
                        TBContas.Update
                        
                        Conexao.Execute "Update tbl_Detalhes_Recebimento Set IDContaReceber = " & TBContas!IDintconta & " where ID_nota = " & ID_nota & " and txt_parcela = '" & TBContas!Parcela & "'"
                        
                        'Fluxo de Caixa
                        Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                        
                        TBContas.MoveNext
                    Loop
                End If
                TBContas.Close
            Else
                TBContas.Open "Select * from tbl_ContasPagar where txt_pedido = '" & TBProposta!Proposta & "' and Antecipacao = 'False' and Despesas_NF = 'False' and (Bloqueado = 'False' or Bloqueado is null) and (id_nota = 0 or id_nota is null)", Conexao, adOpenKeyset, adLockOptimistic
                If TBContas.EOF = False Then
                    Permitido1 = True
                    Do While TBContas.EOF = False
                        TBContas!txt_ndocumento = IIf(txtNFiscal = "", Null, txtNFiscal)
                        TBContas!ID_nota = ID_nota
                        TBContas.Update
                        
                        'Fluxo de Caixa
                        Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                        
                        TBContas.MoveNext
                    Loop
                End If
                TBContas.Close
            End If
            TBProposta.MoveNext
        Loop
    End If
    TBProposta.Close
    
    If Permitido1 = True Then
        '==================================
        Modulo = Formulario
        Evento = "Vincular duplicata(s)"
        ID_documento = ID_nota
        ProcVerificaTipoNF False
        If txtNFiscal = "" Then NomeCampo = "N° ordem: " & ID_nota Else NomeCampo = "N° nota: " & txtNFiscal
        Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
        Documento1 = ""
        ProcGravaEvento
        '==================================
        ProcCarregaListaDuplicatas IIf(TxtID = "", 0, TxtID)
        
        'If MsgBox("Essa(s) conta(s) já foi(ram) vinculada(s) com as contas criadas através do(s) pedido(s). Deseja criar novas contas?", vbQuestion + vbYesNo) = vbNo Then
            'Novo_Nota3 = False
            'Permitido2 = False
            'Exit Sub
        'End If
    End If
    
    Permitido1 = True
    With lst_Duplicata
        For InitFor = 1 To .ListItems.Count
            If .ListItems.Item(InitFor).Checked = True And lst_Duplicata.ListItems(InitFor).ListSubItems(4) = "NÃO" Then
                Valor3 = .ListItems(InitFor).ListSubItems(1)
                NovoValor = Replace(Valor3, ",", ".")
                
                'Verifica se é nota de devolução
                NFDevolucao = "Não"
                Set TBAbrir = CreateObject("adodb.recordset")
                TBAbrir.Open "Select CFOP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & ID_nota & " and CFOP.Devolucao = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                If TBAbrir.EOF = False And (Opt_saida.Value = True And Len(txttipocliente) = 1 Or Opt_entrada.Value = True And Len(txttipocliente) = 2) Then
                    NFDevolucao = "Sim"
                    'Fornecedor
                    If Opt_saida.Value = True And Len(txttipocliente) = 1 Then GoTo CriarCP
                    'Cliente
                    If Opt_entrada.Value = True And Len(txttipocliente) = 2 Then GoTo CriarCR
                End If
                TBAbrir.Close
                
                If Opt_saida.Value = True Then
                    'Verifica se já existe conta cadastrada (cliente, mês vencimento, valor, sem id da nota) e vincula a nota
                    Set TBReceber = CreateObject("adodb.recordset")
                    TBReceber.Open "Select * from tbl_contas_receber where IDcliente = " & txtIDCliente & " and Nome_Razao = '" & txt_Razao & "' and month(Vencimento) = '" & Month(lst_Duplicata.ListItems(InitFor)) & "' and year(Vencimento) = '" & Year(lst_Duplicata.ListItems(InitFor)) & "' and Valor = " & NovoValor & " and Id_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and LogSit = 'N' and (Bloqueado = 'False' or Bloqueado is null) and (id_nota = 0 or id_nota is null)", Conexao, adOpenKeyset, adLockOptimistic
                    If TBReceber.EOF = False Then
                        If MsgBox("Já existe uma conta a receber com estes dados, deseja vincular a esta nota?", vbQuestion + vbYesNo) = vbYes Then
                            TBReceber!NFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
                            TBReceber!ID_nota = ID_nota
                            
                            'Altera o vencimento e a parcela conforme conta a receber
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select * from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                TBAbrir!txt_Parcela = TBReceber!Parcela
                                TBAbrir!dt_Vencimento = TBReceber!Vencimento
                                
                                'Verifica se a conta a receber já tem boleto gerado
                                Set TBFI = CreateObject("adodb.recordset")
                                TBFI.Open "Select * from tbl_Detalhes_Recebimento where ID <> " & lst_Duplicata.ListItems(InitFor).ListSubItems(3) & " and IdContaReceber = " & TBReceber!IDintconta, Conexao, adOpenKeyset, adLockOptimistic
                                If TBFI.EOF = False Then
                                    TBAbrir!Numero_documento = Right(txtNFiscal, 6) & "/" & Right(TBReceber!Parcela, 2)
                                    TBReceber!txt_ndocumento = TBAbrir!Numero_documento
                                    TBAbrir!Carteira = TBFI!Carteira
                                    TBAbrir!Nosso_numero = TBFI!Nosso_numero
                                    TBAbrir!Juros = TBFI!Juros
                                    TBAbrir!Multa = TBFI!Multa
                                    TBAbrir!Desconto = TBFI!Desconto
                                    TBAbrir!Instrucoes = TBFI!Instrucoes
                                    TBAbrir!Data_emissao = TBFI!Data_emissao
                                    TBAbrir!Seq_remessa = TBFI!Seq_remessa
                                    TBFI.Delete
                                Else
                                    TBReceber!Banco = IIf(IsNull(TBAbrir!txt_Portador_Banco), Null, TBAbrir!txt_Portador_Banco)
                                    TBReceber!FormaBaixa = IIf(IsNull(TBAbrir!txt_tipopagto), "", TBAbrir!txt_tipopagto)
                                    TBReceber!Tipo_doc = IIf(IsNull(TBAbrir!Tipo_doc), "", TBAbrir!Tipo_doc)
                                End If
                                TBFI.Close
                                
                                'Grava ID da conta a receber
                                TBAbrir!IdContaReceber = TBReceber!IDintconta
                                Conexao.Execute "Update tbl_Detalhes_Recebimento_Nboletos Set IdContaReceber = " & TBReceber!IDintconta & " where Nosso_numero = '" & TBAbrir!Nosso_numero & "'"
                                
                                TBAbrir.Update
                            End If
                            TBAbrir.Close
                            TBReceber.Update
                            
                            'Fluxo de Caixa
                            Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBReceber!IDFluxo), 0, TBReceber!IDFluxo)
                            
                            Conexao.Execute "DELETE from familia_financeiro where idconta = " & TBReceber!IDintconta & " and TipoConta = 'R' and Deposito_transf = 'False'"
                            ProcCriaFamiliaFinanceiro
                            
                            ProcCarregaListaDuplicatas IIf(TxtID = "", 0, TxtID)
                        Else
                            GoTo CriarCR
                        End If
                    Else
CriarCR:
                        If Permitido1 = True Then Conexao.Execute "DELETE from familia_financeiro where idnota = " & ID_nota & " and Deposito_transf = 'False'"
                        
                        'Insere dados na tabela contas a receber
                        Set TBReceber = CreateObject("adodb.recordset")
                        TBReceber.Open "Select * from tbl_contas_receber where id_nota = " & ID_nota & " and parcela = '" & lst_Duplicata.ListItems(InitFor).ListSubItems(2) & "' and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and status = 'TÍTULO EM ABERTO' order by vencimento", Conexao, adOpenKeyset, adLockOptimistic
                        If TBReceber.EOF = True Then
                            TBReceber.AddNew
                            TBReceber!Parcial = False
                            TBReceber!titulodesc = False
                            TBReceber!Bloqueado = False
                            TBReceber!Logsit = "N"
                            TBReceber!IDtrocatitulo = 0
                            TBReceber!Antecipacao = False
                            TBReceber!Status = "TÍTULO EM ABERTO"
                            TBReceber!Responsavel = pubUsuario
                            
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select txt_Portador_Banco, txt_tipopagto, Tipo_doc from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                TBReceber!Banco = IIf(IsNull(TBAbrir!txt_Portador_Banco), Null, TBAbrir!txt_Portador_Banco)
                                TBReceber!FormaBaixa = IIf(IsNull(TBAbrir!txt_tipopagto), "", TBAbrir!txt_tipopagto)
                                TBReceber!Tipo_doc = IIf(IsNull(TBAbrir!Tipo_doc), "", TBAbrir!Tipo_doc)
                            End If
                            TBAbrir.Close
                        End If
                        
                        TBReceber!NFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
                        TBReceber!ID_nota = ID_nota
                        TBReceber!Data_transacao = Date
                        TBReceber!emissao = txt_DtEmissao.Value
                        TBReceber!Nome_Razao = txt_Razao.Text
                        TBReceber!IDCliente = txtIDCliente
                        TBReceber!Cidade = txt_Municipio.Text
                        TBReceber!Estado = cbo_UF.Text
                        
                        If NFDevolucao = "Sim" Then
                            TBReceber!Devolucao = True
                            TBReceber!Valor = "-" & .ListItems(InitFor).ListSubItems(1)
                        Else
                            TBReceber!Devolucao = False
                            TBReceber!Valor = .ListItems(InitFor).ListSubItems(1)
                        End If
                        TBReceber!ValorExtenso = FunValorExtenso(TBReceber!Valor)
                        TBReceber!Vencimento = lst_Duplicata.ListItems(InitFor)
                        TBReceber!Parcela = lst_Duplicata.ListItems(InitFor).ListSubItems(2)
                        TBReceber!ID_empresa = Cmb_empresa.ItemData(Cmb_empresa.ListIndex)
                        TBReceber!Tipo = "CL"
                        
                        'Grava número do documento conf. boleto e salva campo obs
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select Numero_documento, Obs from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then
                            TBReceber!txt_ndocumento = IIf(IsNull(TBAbrir!Numero_documento), "", TBAbrir!Numero_documento)
                            TBReceber!observacoes = TBAbrir!Obs
                        End If
                        TBAbrir.Close
                        TBReceber.Update
                        intidconta = TBReceber!IDintconta
                        
                        'Grava ID da conta a receber
                        Conexao.Execute "Update tbl_Detalhes_Recebimento Set IdContaReceber = " & intidconta & " where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3)
                        
                        'Fluxo de Caixa
                        Set TBFluxo = CreateObject("adodb.recordset")
                        TBFluxo.Open "Select * from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBReceber!IDFluxo), 0, TBReceber!IDFluxo), Conexao, adOpenKeyset, adLockOptimistic
                        If TBFluxo.EOF = True Then TBFluxo.AddNew
                        TBFluxo!IDintconta = TBReceber!IDintconta
                        TBFluxo!Operacao = "À Creditar"
                        TBFluxo!Data = TBReceber!Vencimento
                        TBFluxo!Valor = TBReceber!Valor
                        TBFluxo!Descricao = TBReceber!Nome_Razao
                        TBFluxo!Status = "N"
                        TBFluxo!int_NotaFiscal = TBReceber!NFiscal
                        TBFluxo!Instituicao = TBReceber!Banco
                        TBFluxo!ID_empresa = Cmb_empresa.ItemData(Cmb_empresa.ListIndex)
                        TBFluxo!Bloqueado = False
                        TBFluxo.Update
                        Conexao.Execute "Update tbl_contas_receber Set IDFluxo = " & TBFluxo!IDFluxo & " where IdIntConta = " & TBReceber!IDintconta
                        TBFluxo.Close
                        
                        ProcCriaFamiliaFinanceiro
                        
                        Valor = txt_VlrTotalProd
                        Set TBLISTA = CreateObject("adodb.recordset")
                        TBLISTA.Open "SELECT P.ID_CC, SUM(ISNULL(NFP.dbl_ValorTotal, 0)) as ValorTotal from (tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao NP ON NP.IDCountCfop = NFP.ID_CFOP) INNER JOIN Projproduto P ON P.Desenho = NFP.int_Cod_Produto where NFP.ID_nota = " & TxtID & " and NP.CreditaCentroCusto = 'True' and P.ID_CC IS NOT NULL and P.ID_CC <> 0 group by P.ID_CC HAVING SUM(ISNULL(NFP.dbl_ValorTotal, 0)) > 0", Conexao, adOpenKeyset, adLockOptimistic
                        If TBLISTA.EOF = False Then
                            Do While TBLISTA.EOF = False
                                qt = (TBLISTA!ValorTotal / Valor) * 100
                                Qtd = Format(TBReceber!Valor * qt) / 100
                                
                                Set TBFI = CreateObject("adodb.recordset")
                                TBFI.Open "Select * from CC_realizado", Conexao, adOpenKeyset, adLockOptimistic
                                TBFI.AddNew
                                ProcEnviaDadosCredCC TBLISTA!ID_CC, 0
                                TBFI.Update
                                IDlista = TBFI!ID
                                
                                'Grava movimentação no centro consolidado
                                Set TBAfericao = CreateObject("adodb.recordset")
                                TBAfericao.Open "Select * from Usuarios_Setor_Consolidacao where ID_CC_consolidado = " & TBLISTA!ID_CC, Conexao, adOpenKeyset, adLockOptimistic
                                If TBAfericao.EOF = False Then
                                    Do While TBAfericao.EOF = False
                                        Set TBFI = CreateObject("adodb.recordset")
                                        TBFI.Open "Select * from CC_realizado where ID_CC = " & TBAfericao!ID_CC & " and ID_origem = " & IDlista, Conexao, adOpenKeyset, adLockOptimistic
                                        If TBFI.EOF = True Then TBFI.AddNew
                                        ProcEnviaDadosCredCC TBAfericao!ID_CC, IDlista
                                        TBFI.Update
                                        TBFI.Close
                                        
                                        Set TBCiclo = CreateObject("adodb.recordset")
                                        TBCiclo.Open "Select * from Usuarios_Setor_Consolidacao where ID_CC_consolidado = " & TBAfericao!ID_CC, Conexao, adOpenKeyset, adLockOptimistic
                                        If TBCiclo.EOF = False Then
                                            Do While TBCiclo.EOF = False
                                                Set TBFI = CreateObject("adodb.recordset")
                                                TBFI.Open "Select * from CC_realizado where ID_CC = " & TBCiclo!ID_CC & " and ID_origem = " & IDlista, Conexao, adOpenKeyset, adLockOptimistic
                                                If TBFI.EOF = True Then TBFI.AddNew
                                                ProcEnviaDadosCredCC TBCiclo!ID_CC, IDlista
                                                TBFI.Update
                                                TBFI.Close
                                                
                                                TBCiclo.MoveNext
                                            Loop
                                        End If
                                        TBCiclo.Close
                                        
                                        TBAfericao.MoveNext
                                    Loop
                                End If
                                TBAfericao.Close
                                
                                TBLISTA.MoveNext
                            Loop
                        End If
                        TBLISTA.Close
                    End If
                    TBReceber.Close
                Else
                    'Verifica se já existe conta cadastrada (fornecedor, mês pagamento, valor, sem id da nota) e vincula a nota
                    Set TBReceber = CreateObject("adodb.recordset")
                    TBReceber.Open "Select * from tbl_contaspagar where int_codforn = " & txtIDCliente & " and txt_fornecedor = '" & txt_Razao & "' and month(dt_Pagamento) = '" & Month(lst_Duplicata.ListItems(InitFor)) & "' and year(dt_Pagamento) = '" & Year(lst_Duplicata.ListItems(InitFor)) & "' and dbl_valorpagto = " & NovoValor & " and Id_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and LogSit = 'N' and (Bloqueado = 'False' or Bloqueado is null) and (id_nota = 0 or id_nota is null)", Conexao, adOpenKeyset, adLockOptimistic
                    If TBReceber.EOF = False Then
                        If MsgBox("Já existe uma conta a pagar com estes dados, deseja vincular a esta nota?", vbQuestion + vbYesNo) = vbYes Then
                            TBReceber!txt_ndocumento = IIf(txtNFiscal = "", Null, txtNFiscal)
                            TBReceber!ID_nota = ID_nota
                            
                            'Altera o vencimento e a parcela conforme conta a pagar
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select dt_Vencimento, txt_Parcela from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                TBAbrir!dt_Vencimento = TBReceber!dt_Pagamento
                                TBAbrir!txt_Parcela = TBReceber!txt_Parcela
                                TBAbrir.Update
                            End If
                            TBAbrir.Close
                            
                            TBReceber.Update
                            
                            'Fluxo de Caixa
                            Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBReceber!IDFluxo), 0, TBReceber!IDFluxo)
                            
                            Conexao.Execute "DELETE from familia_financeiro where idconta = " & TBReceber!IDintconta & " and TipoConta = 'P' and Deposito_transf = 'False'"
                            ProcCriaFamiliaFinanceiro
                            
                            ProcCarregaListaDuplicatas IIf(TxtID = "", 0, TxtID)
                        Else
                            GoTo CriarCP
                        End If
                    Else
CriarCP:
                        If Permitido1 = True Then Conexao.Execute "DELETE from familia_financeiro where idnota = " & ID_nota & " and Deposito_transf = 'False'"
                        
                        'Insere dados na tabela contas a pagar
                        Set TBReceber = CreateObject("adodb.recordset")
                        TBReceber.Open "Select * from tbl_contaspagar where id_nota = " & ID_nota & " and txt_parcela = '" & lst_Duplicata.ListItems(InitFor).ListSubItems(2) & "' and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and status = 'TÍTULO EM ABERTO' and Despesas_NF = 'False' order by dt_pagamento", Conexao, adOpenKeyset, adLockOptimistic
                        If TBReceber.EOF = True Then
                            TBReceber.AddNew
                            TBReceber!Parcial = False
                            TBReceber!impresso = False
                            TBReceber!Bloqueado = False
                            TBReceber!Logsit = "N"
                            TBReceber!Despesas_NF = False
                            TBReceber!Antecipacao = False
                            TBReceber!Status = "TÍTULO EM ABERTO"
                            TBReceber!Responsavel = pubUsuario
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select txt_Portador_Banco, txt_tipopagto, Tipo_doc from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                TBReceber!Banco = IIf(IsNull(TBAbrir!txt_Portador_Banco), Null, TBAbrir!txt_Portador_Banco)
                                TBReceber!FormaBaixa = IIf(IsNull(TBAbrir!txt_tipopagto), "", TBAbrir!txt_tipopagto)
                                TBReceber!Class_conta = IIf(IsNull(TBAbrir!Tipo_doc), "", TBAbrir!Tipo_doc)
                            End If
                            TBAbrir.Close
                        End If
                        TBReceber!txt_ndocumento = IIf(txtNFiscal = "", Null, txtNFiscal)
                        TBReceber!ID_nota = ID_nota
                        TBReceber!Data_transacao = Date
                        TBReceber!Dt_emissao = txt_DtEmissao.Value
                        TBReceber!dt_Pagamento = lst_Duplicata.ListItems(InitFor)
                        TBReceber!Competencia = IIf(Month(txt_DtEmissao.Value) < 10, "0" & Month(txt_DtEmissao.Value), Month(txt_DtEmissao.Value)) & "/" & Year(txt_DtEmissao.Value)
                        TBReceber!int_codforn = txtIDCliente
                        TBReceber!txt_condpag = ""
                        
                        If NFDevolucao = "Sim" Then
                            TBReceber!Devolucao = True
                            TBReceber!dbl_valorpagto = "-" & .ListItems(InitFor).ListSubItems(1)
                        Else
                            TBReceber!Devolucao = False
                            TBReceber!dbl_valorpagto = .ListItems(InitFor).ListSubItems(1)
                        End If
                        
                        TBReceber!txt_Parcela = lst_Duplicata.ListItems(InitFor).ListSubItems(2)
                        TBReceber!Txt_fornecedor = txt_Razao
                        TBReceber!ID_empresa = Cmb_empresa.ItemData(Cmb_empresa.ListIndex)
                        TBReceber!Tipo = "FO"
                        
                        'Salva Obs
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select Obs from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then TBReceber!txt_observacoes = TBAbrir!Obs
                        TBAbrir.Close
                        
                        TBReceber.Update
                        
                        'Cria centro de custo
                        Conexao.Execute "Update CC_realizado Set ID_Financeiro = " & TBReceber!IDintconta & " where ID_duplicata = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3)
                        
                        'Fluxo de Caixa
                        Set TBFluxo = CreateObject("adodb.recordset")
                        TBFluxo.Open "Select * from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBReceber!IDFluxo), 0, TBReceber!IDFluxo) & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
                        If TBFluxo.EOF = True Then TBFluxo.AddNew
                        TBFluxo!IDintconta = TBReceber!IDintconta
                        TBFluxo!Operacao = "À Debitar"
                        TBFluxo!Data = TBReceber!dt_Pagamento
                        TBFluxo!Valor = TBReceber!dbl_valorpagto
                        TBFluxo!Descricao = TBReceber!Txt_fornecedor
                        TBFluxo!Status = "N"
                        TBFluxo!int_NotaFiscal = TBReceber!txt_ndocumento
                        TBFluxo!Instituicao = TBReceber!Banco
                        TBFluxo!ID_empresa = Cmb_empresa.ItemData(Cmb_empresa.ListIndex)
                        TBFluxo!Bloqueado = False
                        TBFluxo.Update
                        Conexao.Execute "Update tbl_contaspagar Set IDFluxo = " & TBFluxo!IDFluxo & " where IdIntConta = " & TBReceber!IDintconta
                        TBFluxo.Close
                        ProcCriaFamiliaFinanceiro
                    End If
                    TBReceber.Close
                End If
            End If
            Permitido1 = False
        Next InitFor
    End With
    If Opt_entrada = True Then procEnviarImpostoFinanceiro
End If

If MostrarMsg = True Then MsgBox ("Nova(s) duplicata(s) enviada(s) para o financeiro com sucesso."), vbInformation
'==================================
Modulo = Formulario
Evento = "Nova(s) duplicata(s)"
ID_documento = ID_nota
ProcVerificaTipoNF False
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & ID_nota Else NomeCampo = "N° nota: " & txtNFiscal
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
Documento1 = ""
ProcGravaEvento
'==================================
Novo_Nota3 = False
If NFDevolucao = "Sim" Then MsgBox ("Essa é uma nota de devolução, não se esqueça de revisar a(s) conta(s) contábil(eis)."), vbInformation
ProcCarregaListaDuplicatas IIf(TxtID = "", 0, TxtID)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcEnviaDadosCredCC(ID_CC As Long, ID_origem As Long)
On Error GoTo tratar_erro

TBFI!ID_financeiro = TBReceber!IDintconta
TBFI!Data = TBReceber!Vencimento
TBFI!Responsavel = pubUsuario
TBFI!ID_empresa = TBReceber!ID_empresa
TBFI!Operacao = "Crédito"
TBFI!ID_CC = ID_CC
TBFI!Valor = Qtd
TBFI!Percentual = qt
TBFI!Bloqueado = False
TBFI!ID_origem = ID_origem

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCriaFamiliaFinanceiro()
On Error GoTo tratar_erro

Frete = 0
Seguro = 0
Acessorias = 0
QuantsolicitadoN2 = 0
ValorICMS = 0

Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_Totais_Nota where id_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
If TBTotaisnota.EOF = False Then
    Valor_Retencao_PIS = IIf(IsNull(TBTotaisnota!Total_retencao_PIS), 0, TBTotaisnota!Total_retencao_PIS)
    Valor_Retencao_Cofins = IIf(IsNull(TBTotaisnota!Total_retencao_Cofins), 0, TBTotaisnota!Total_retencao_Cofins)
End If

ProcSomaRetencaoServicos

'Verifica produtos de remessa
qt = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select Sum(dbl_ValorTotal) as qt from tbl_Detalhes_Nota where id_nota = " & TxtID.Text & " and Tipo = 'P' and Remessa = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    qt = IIf(IsNull(TBProduto!qt), 0, TBProduto!qt)
End If

'Verifica produtos de retorno que somam o valor no total da nota
VlrTotalRetorno = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select Sum(dbl_ValorTotal) as VlrTotalRetorno from tbl_Detalhes_Nota where id_nota = " & TxtID.Text & " and Tipo = 'P' and Retorno = 'True' and Soma_retorno_totalnf = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    VlrTotalRetorno = IIf(IsNull(TBProduto!VlrTotalRetorno), 0, TBProduto!VlrTotalRetorno)
End If
TBProduto.Close

Valor_Duplicatas = 0
Valor1 = 0
ValorTotal = 0
Valor = IIf(txtTotalservicos = "", 0, txtTotalservicos)

'Valor total dos produtos com retenção
Valor1 = IIf(txt_ValorNota = "", 0, txt_ValorNota) - Valor_Retencao_PIS - Valor_Retencao_Cofins - Valor
ValorTotal = (Valor1 + Valor) - Valor_Retencao_Servico
If Valor_Retencao_Servico = 0 Then
    If Opt_saida.Value = True And (TipoNF = "SA" Or TipoNF = "M1SA") Then
        'Valor total dos serviços com retenção
        ProcVerificaEmpresaCliente
        If Permitido = True Then ProcVerificaImposto
    End If
End If
ValorTotal = Format(ValorTotal - VlrTotalRetorno - qt, "###,##0.00")

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "select NFP.*, P.Compras, P.Vendas from tbl_Detalhes_Nota NFP INNER JOIN projproduto P ON NFP.int_Cod_Produto = P.Desenho where NFP.ID_Nota = " & TxtID & " and NFP.Retorno = 'False' and NFP.Remessa = 'False'", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Do While TBProduto.EOF = False
        If TBProduto!Tipo = "P" Then
            'Verifica valores para somar com o valor dos produtos
            'Frete
            Frete = IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
            
            'Seguro
            Seguro = IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro)
            
            'Outras despesas
            Acessorias = IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)
            
            'Desconto
            QuantsolicitadoN2 = IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto) + IIf(IsNull(TBProduto!Valor_desconto_SUFRAMA), 0, TBProduto!Valor_desconto_SUFRAMA)
                                        
            'ICMS subst.
            If IsNull(TBProduto!txt_CST) = False And TBProduto!txt_CST <> "" Then
                InicioCST = Left(TBProduto!txt_CST, 1)
                If Len(TBProduto!txt_CST) = 4 Then FimCST = Right(TBProduto!txt_CST, 3) Else FimCST = Right(TBProduto!txt_CST, 2)
                If FimCST = "10" Or FimCST = "60" Or FimCST = "70" Or FimCST = "90" Then
                    Set TBAbrir = CreateObject("adodb.recordset")
                    TBAbrir.Open "select * from tbl_Detalhes_Nota_CST_ICMS where ID_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
                    If TBAbrir.EOF = False Then
                        ValorICMS = IIf(IsNull(TBAbrir!Valor_ICMS_ST), 0, TBAbrir!Valor_ICMS_ST)
                    End If
                    TBAbrir.Close
                End If
            End If
        Else
            Valor_Retencao_Servico = 0
            If TBProduto!Retencao_PIS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_PIS_serv), 0, TBProduto!Total_PIS_serv)
            If TBProduto!Retencao_Cofins = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_Cofins_serv), 0, TBProduto!Total_Cofins_serv)
            If TBProduto!Retencao_CSLL = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_CSLL_serv), 0, TBProduto!Total_CSLL_serv)
            If TBProduto!Retencao_INSS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_INSS_serv), 0, TBProduto!Total_INSS_serv)
            If TBProduto!Retencao_ISSQN = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!VlrISS), 0, TBProduto!VlrISS)
            If TBProduto!Retencao_IRRF = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_IRRF_serv), 0, TBProduto!Total_IRRF_serv)
        End If
        
        If TBProduto!Compras = True And TBProduto!Vendas = True Then
            If Opt_saida.Value = True Then
                NomeCampo = "ID_PC1"
                TextoFiltro = "ID_PC1 is not null and ID_PC1 <> 0"
            Else
                NomeCampo = "ID_PC"
                TextoFiltro = "ID_PC is not null and ID_PC <> 0"
            End If
        Else
            If TBProduto!Compras = True Then
                NomeCampo = "ID_PC"
                TextoFiltro = "ID_PC is not null and ID_PC <> 0"
            Else
                NomeCampo = "ID_PC1"
                TextoFiltro = "ID_PC1 is not null and ID_PC1 <> 0"
            End If
        End If
            
        Set TBFamilia = CreateObject("adodb.recordset")
        TBFamilia.Open "select " & NomeCampo & " as ID_PC from projproduto where desenho = '" & TBProduto!int_Cod_Produto & "' and " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
        If TBFamilia.EOF = False Then
            If TBFamilia!ID_PC <> "" Then
                'Verifica a porcentagem representada pelo valor da duplicata
                Permitido = False
                Set TBAbrir = CreateObject("adodb.recordset")
                TBAbrir.Open "Select CFOP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & TxtID & " and CFOP.Devolucao = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                If TBAbrir.EOF = False Then
                    Permitido = True
                    If ValorTotal > 0 Then ValorTotal = "-" & ValorTotal
                    
                    'Fornecedor
                    If Opt_saida.Value = True And Len(txttipocliente) = 1 Then
                        Valor2 = TBReceber!dbl_valorpagto
                        TipoConta = "P"
                        'Cliente
                    ElseIf Opt_entrada.Value = True And Len(txttipocliente) = 2 Then
                        Valor2 = TBReceber!Valor
                        TipoConta = "R"
                    End If
                Else
                    If Opt_saida.Value = True Then
                        Valor2 = TBReceber!Valor
                        TipoConta = "R"
                    Else
                        Valor2 = TBReceber!dbl_valorpagto
                        TipoConta = "P"
                    End If
                End If
                TBAbrir.Close
                
                Valor1 = Format((Valor2 * 100) / ValorTotal, "###,##0.0000000000")
                
                Set TBCiclo = CreateObject("adodb.recordset")
                TBCiclo.Open "select * from familia_financeiro where ID_PC = " & TBFamilia!ID_PC & " and idconta = " & TBReceber!IDintconta & " and TipoConta = '" & TipoConta & "'", Conexao, adOpenKeyset, adLockOptimistic
                If TBCiclo.EOF = True Then TBCiclo.AddNew
                TBCiclo!ID_PC = TBFamilia!ID_PC
                TBCiclo!IDConta = TBReceber!IDintconta
                TBCiclo!IDnota = TxtID
                
                If TBProduto!Tipo = "P" Then
                    Qtde = (TBProduto!dbl_ValorTotal + IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi) + Frete + Seguro + Acessorias + ValorICMS) - (IIf(IsNull(TBProduto!Valor_Retencao_PIS), 0, TBProduto!Valor_Retencao_PIS) + IIf(IsNull(TBProduto!Valor_Retencao_Cofins), 0, TBProduto!Valor_Retencao_Cofins) + QuantsolicitadoN2)
                Else
                    Qtde = TBProduto!dbl_ValorTotal - Valor_Retencao_Servico
                End If
                If Permitido = True Then Qtde = "-" & Qtde
                Valor = (Qtde * Valor1) / 100
                Valor = IIf(IsNull(TBCiclo!Valor), 0, TBCiclo!Valor) + Valor
                
                TBCiclo!Valor = Format(Valor, "###,##0.00")
                TBCiclo!TipoConta = TipoConta
                TBCiclo.Update
                TBCiclo.Close
            End If
        End If
        TBFamilia.Close
        TBProduto.MoveNext
    Loop
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdservicos_Click()
On Error GoTo tratar_erro

If NFe_liberada = False Then
    Faturamento_ListaProdudos = False
    frmFaturamento_ListaProduto.Show 1
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcSalvarTransp()
On Error GoTo tratar_erro

If Alterar = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & TxtID, Familiatext, "a transportadora", "alterar", False, True) = False Then Exit Sub

Permitido1 = True
If NF_cancelada = True Then
    Permitido1 = False
    NomeCampo = "cancelada"
    GoTo Prosseguir
End If
If NF_enviada = True Then
    Permitido1 = False
    NomeCampo = "enviada"
    GoTo Prosseguir
End If
If NFe_liberada = True Then
    Permitido1 = False
    NomeCampo = "enviada para SEFAZ"
End If
Prosseguir:
    If Permitido1 = False Then
        MsgBox ("Não é permitido salvar, pois a nota já foi " & NomeCampo & "."), vbExclamation
        Exit Sub
    End If
    
    If Formulario <> "Estoque/Ordem de faturamento" Then
        Acao = "salvar"
'        If opt_sem_frete.Value = False Then
'            If IsNumeric(txtidinttransp) = False Then
'                NomeCampo = "a transportadora"
'                ProcVerificaAcao
'                Exit Sub
'            End If
'        End If
        If cmbFrete = "" Then
            NomeCampo = "o tipo do frete"
            ProcVerificaAcao
            cmbFrete.SetFocus
            Exit Sub
        End If
        If txtTransp_IE <> "" And txtTransp_uf_Transportadora = "" Then
            NomeCampo = "a UF da transportadora"
            ProcVerificaAcao
            txtTransp_uf_Transportadora.SetFocus
            Exit Sub
        End If
        If txtTransp_Placa <> "" And txtTransp_uf = "" Then
            NomeCampo = "a UF da placa"
            ProcVerificaAcao
            txtTransp_uf.SetFocus
            Exit Sub
        End If
        If Cmb_via_transp = "" Then
            NomeCampo = "a via de transporte"
            ProcVerificaAcao
            Cmb_via_transp.SetFocus
            Exit Sub
        End If
        If Cmb_frete_contratado = "" Then
            NomeCampo = "o indicador da natureza do frete contratado"
            ProcVerificaAcao
            Cmb_frete_contratado.SetFocus
            Exit Sub
        End If
    End If
    If Faturamento_NF_Saida = True Then
        If txt_ValorNota > 10000 And chkSedex.Value = 1 Then
            MsgBox ("Não é permitido salvar transportadora, pois a nota ultrapassou o limite do sedex (R$10.000,00)."), vbExclamation
            Exit Sub
        End If
    End If
    
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select * from tbl_dados_transp Where id_nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = True Then
        TBProduto.AddNew
        MsgBox ("Novos dados de transporte cadastrados com sucesso."), vbInformation
        Evento = "Novos dados de transporte"
    Else
        If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
        If FunVerifValidacaoRegistro("alterar", txtDtValidacao, Familiatext, "a transportadora", False) = False Then Exit Sub
        
        MsgBox ("Alteração efetuada com sucesso."), vbInformation
        Evento = "Alterar dados de transporte"
    End If
    TBProduto!ID_nota = TxtID.Text
    If Cmb_tipo_transp <> "" Then
    Select Case Cmb_tipo_transp
        Case "Cliente": TipoTransp = "C"
        Case "Fornecedor": TipoTransp = "F"
        Case "Empresa": TipoTransp = "E"
    End Select
    TBProduto!Tipo_transp = TipoTransp
    End If
    TBProduto!IdIntTransp = IIf(txtidinttransp = "", 0, txtidinttransp)
    TBProduto!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    
    'FreteConta = ""
    'If opt_emitente.Value = True Then FreteConta = 1
    'If opt_destinatario.Value = True Then FreteConta = 2
    'If Opt_terceiros.Value = True Then FreteConta = 3
    'If opt_sem_frete.Value = True Then FreteConta = 4
    'TBProduto!txt_Frete_Conta = IIf(FreteConta = "", Null, FreteConta)
    If cmbFrete <> "" Then TBProduto!txt_Frete_Conta = Left(cmbFrete, 1)
    
    TBProduto!txt_Placa = txtTransp_Placa
    TBProduto!txt_UF_Placa = txtTransp_uf
    TBProduto!txt_CNPJ = txtTransp_cnpj
    TBProduto!txt_IE = txtTransp_IE
    TBProduto!int_numero = txtTransp_numero.Text
    TBProduto!int_Qtd_Transp = IIf(txtTransp_qtd = "", Null, txtTransp_qtd)
    TBProduto!txt_Especie = Cmb_transp_especie
    TBProduto!txt_Marca = Cmb_transp_marca
    TBProduto!Numeracao = Txt_numeracao
    TBProduto!dbl_Peso_Bruto = IIf(txtTransp_pesoBruto = "", Null, txtTransp_pesoBruto)
    TBProduto!dbl_Peso_Liquido = IIf(txtTransp_pesoliquido = "", Null, txtTransp_pesoliquido)
    If Cmb_via_transp <> "" Then TBProduto!Via_transp = Left(Cmb_via_transp, 1)
    TBProduto!Codigo_ANTT = Txt_codigo_ANTT
    If Cmb_frete_contratado <> "" Then TBProduto!Frete_contratado = Left(Cmb_frete_contratado, 1)
    TBProduto!txt_Razao = TxtTransp_nome
    TBProduto!txt_Endereco = txtTransp_endereco
    TBProduto!txt_Municipio = txtTransp_municipio
    TBProduto!txt_UF = txtTransp_uf_Transportadora
    If chkSedex.Value = 1 Then TBProduto!Sedex = True Else TBProduto!Sedex = False
    If Chk_enviar_XML_transp.Value = 1 Then TBProduto!EnviarXML = True Else TBProduto!EnviarXML = False
    TBProduto.Update
    
    '==================================
    Modulo = Formulario
    ID_documento = TBProduto!ID
    ProcVerificaTipoNF False
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
    Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
    If TxtTransp_nome <> "" Then Documento1 = "Transportadora: " & TxtTransp_nome Else Documento1 = ""
    ProcGravaEvento
    '==================================
    
    TBProduto.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
On Error GoTo tratar_erro

Select Case SSFaturamento.Tab
    Case 0:
        Select Case KeyCode
            Case vbKeyF2: ProcFiltrarCarteira
            Case vbKeyF3: If Formulario = "Estoque/Ordem de faturamento" Then ProcGerarOF
            Case vbKeyF5: If Formulario = "Estoque/Ordem de faturamento" Then ProcImprimirCartFat
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 1:
        Select Case KeyCode
            Case vbKeyInsert: ProcNovo
            Case vbKeyF2: ProcLocalizar
            Case vbKeyF3: ProcGravar
            Case vbKeyF4: If Cmb_opcao_lista = "Excluir" Then ProcExcluir
            Case vbKeyF5: ProcImprimir
            Case vbKeyF7: If Cmb_opcao_lista = "Copiar" Then ProcCopiar
            Case vbKeyF8:
                If Cmb_opcao_lista = "Validação" Then
                    ProcVerifiFormulario
                    ProcValidarRegistros ListaNota, Formulario
                End If
            Case vbKeyF9: ProcImpostos
            Case vbKeyF10: ProcNFe
            Case vbKeyF11: ProcNFSe
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 2:
        Select Case KeyCode
            Case vbKeyInsert: ProcNovoProduto
            Case vbKeyF3: ProcSalvarProduto
            Case vbKeyF4: If Cmb_opcao_lista_Produtos = "Excluir" Then ProcExcluirProduto
            Case vbKeyF5: ProcImprimir
            Case vbKeyF7: ProcRelacionar
            Case vbKeyF8: ProcImpostos
            Case vbKeyF9: Cmd_salvar_ICMS_SN_Click
            Case vbKeyF10: ProcAlterar
            Case vbKeyF11: ProcCancelar
            Case vbKeyF12: ProcImportacao
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 3:
        Select Case KeyCode
            Case vbKeyInsert: Procnovoservico
            Case vbKeyF3: ProcSalvarServico
            Case vbKeyF4: ProcExcluirServico
            Case vbKeyF5: ProcImprimir
            Case vbKeyF8: procImpostos_servico
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 4:
        Select Case KeyCode
            Case vbKeyF3: ProcSalvarTransp
            Case vbKeyF4: ProcExcluirTransp
            Case vbKeyF5: ProcImprimir
            Case vbKeyF8: ProcImpostos
            Case vbKeyF9: ProcCarregaTransporteProposta
            Case vbKeyF10: ProcCarregaTransporteCliente
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 5:
        Select Case KeyCode
            Case vbKeyF3: ProcSalvarDadosAd
            Case vbKeyF4: ProcExcluirDadosAd
            Case vbKeyF5: ProcImprimir
            Case vbKeyF8: ProcImpostos
            Case vbKeyF9: ProcRedespacho
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 6:
        Select Case KeyCode
            Case vbKeyInsert: ProcGerarDuplicatas
            Case vbKeyF3: ProcEnviarDupFinanceiro IIf(TxtID = "", 0, TxtID), True
            Case vbKeyF4: ProcExcluirDuplicatas
            Case vbKeyF5: ProcImprimirDuplicatas
            Case vbKeyF7: ProcPlanoContas
            Case vbKeyF8: ProcImpostos
            Case vbKeyF9: procGerarBoleto
            Case vbKeyF10: If Opt_entrada.Value = True Then ProcCentroCusto
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcAlterar()
On Error GoTo tratar_erro

If FunVerifValidacaoRegistro("salvar", txtDtValidacao, IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal"), "alterações dos valores", False) = False Then Exit Sub
FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = False Or Permitido = False Then
    MsgBox ("Não é permitido alterar os valores, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
If txtNFiscal = "" Then NomeCampo = "ordem de faturamento" Else NomeCampo = "nota fiscal"
If MsgBox("Esta é uma " & NomeCampo & " de ajuste, complementar ou importação?", vbQuestion + vbYesNo) = vbYes Then
    NF_alterada = True
    Conexao.Execute "Update tbl_Dados_Nota_Fiscal Set Alterar = 'True' where id = " & TxtID
    Set TBTotaisnota = CreateObject("adodb.recordset")
    TBTotaisnota.Open "Select * from tbl_totais_nota where id_Nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
    If TBTotaisnota.EOF = True Then TBTotaisnota.AddNew
    TBTotaisnota!ID_nota = TxtID
    TBTotaisnota!dbl_Base_ICMS = IIf(txt_BaseICMS = "", 0, txt_BaseICMS)
    TBTotaisnota!dbl_Valor_ICMS = IIf(txt_VlrICMS = "", 0, txt_VlrICMS)
    TBTotaisnota!dbl_Base_ICMS_Subst = IIf(txt_baseICMSs = "", 0, txt_baseICMSs)
    TBTotaisnota!dbl_Valor_ICMS_Subst = IIf(txt_ICMSs = "", 0, txt_ICMSs)
    TBTotaisnota!dbl_Valor_Total_IPI = IIf(txt_TotalIPI = "", 0, txt_TotalIPI)
    TBTotaisnota!dbl_Valor_Frete = IIf(txt_VlrFrete = "", 0, txt_VlrFrete)
    TBTotaisnota!dbl_Valor_Seguro = IIf(txt_vlrSeguro = "", 0, txt_vlrSeguro)
    TBTotaisnota!dbl_Desp_Adicionais = IIf(txt_OutrasDisp = "", 0, txt_OutrasDisp)
    TBTotaisnota!dbl_Valor_Total_Nota = IIf(txt_ValorNota = "", 0, txt_ValorNota)
    TBTotaisnota.Update
    TBTotaisnota.Close
    ProcCarregaLista
    ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
    ProcCarregaLista 'Obrigatório para recarregar a lista depois de calculado
Else
    NF_alterada = False
    If IIf(txt_VlrFrete = "", 0, txt_VlrFrete) > 0 Then
        If MsgBox("O valor do frete tem IPI?", vbQuestion + vbYesNo) = vbYes Then TextoFiltro = "Tem_IPI_frete = 'True'" Else TextoFiltro = "Tem_IPI_frete = 'False'"
        Conexao.Execute "UPDATE tbl_Detalhes_Nota Set " & TextoFiltro & " where ID_nota = " & TxtID
    End If
    ValorPago = IIf(txt_VlrFrete = "", 0, txt_VlrFrete) 'Verifica valor do frete
    Seguro1 = IIf(txt_vlrSeguro = "", 0, txt_vlrSeguro) 'Verifica valor de seguro
    Acessorias1 = IIf(txt_OutrasDisp = "", 0, txt_OutrasDisp) 'Verifica valor de acessorias
    Desconto1 = IIf(Txt_valor_total_desc = "", 0, Txt_valor_total_desc) 'Verifica valor do desconto

    'Valor Total de produtos
    VlttTotal = 0
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "select SUM(dbl_ValorTotal) as ValorNF_Frete from tbl_Detalhes_Nota where ID_Nota = " & TxtID & " and Retorno = 'False' and Remessa = 'False' and Tipo = 'P'", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        VlttTotal = IIf(IsNull(TBProduto!ValorNF_Frete), 0, TBProduto!ValorNF_Frete)
    End If
    
    'Quantidade de produtos na NF com aliquota de IPI diferente de 0
    ValorTotalPago = 0
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select SUM(dbl_ValorTotal) as ValorNF_IPI from tbl_Detalhes_Nota where id_nota = " & TxtID.Text & " and int_IPI <> 0 and Retorno = 'False' and Remessa = 'False' and Tipo = 'P'", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        ValorTotalPago = IIf(IsNull(TBProduto!ValorNF_IPI), 0, TBProduto!ValorNF_IPI)
    End If

    Contador = 0
    Valor = 0
    Valor1 = 0
    Valor2 = 0
    Valor3 = 0
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select NFP.*, TN.Total_DAS from tbl_Detalhes_Nota NFP INNER JOIN tbl_Totais_Nota TN ON TN.ID_nota = NFP.ID_nota where NFP.id_nota = " & TxtID.Text & " and NFP.Remessa = 'False' and NFP.Retorno = 'False' and NFP.Tipo = 'P' order by NFP.int_codigo", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        Do While TBProduto.EOF = False
            Frete = 0
            Seguro = 0
            Acessorias = 0
            QuantsolicitadoN2 = 0 'Desconto
        
            'Verifica valores para somar na base de calculo
            VltUnit = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
            If VlttTotal <> 0 Then Qtd = (VltUnit * 100) / VlttTotal
            
            Contador = Contador + 1
            If Contador = TBProduto.RecordCount Then
                If ValorPago <> 0 Then Frete = ValorPago - Valor 'Frete
                If Seguro1 <> 0 Then Seguro = Seguro1 - Valor1 'Seguro
                If Acessorias1 <> 0 Then Acessorias = Acessorias1 - Valor2 'Acessorias
                If Desconto1 <> 0 Then QuantsolicitadoN2 = Desconto1 - Valor3 'Desconto
            Else
                If ValorPago <> 0 Then Frete = Format((ValorPago * Qtd) / 100, "###,##0.00") 'Frete
                If Seguro1 <> 0 Then Seguro = Format((Seguro1 * Qtd) / 100, "###,##0.00") 'Seguro
                If Acessorias1 <> 0 Then Acessorias = Format((Acessorias1 * Qtd) / 100, "###,##0.00") 'Acessorias
                If Desconto1 <> 0 Then QuantsolicitadoN2 = (Desconto1 * Qtd) / 100 'Desconto
            End If
            TBProduto!Valor_frete = Format(Frete, "###,##0.00")
            If TBProduto!Tem_IPI_frete = True And TBProduto!dbl_valoripi <> 0 Then
                TBProduto!dbl_valoripi = Format(TBProduto!dbl_valoripi + ((TBProduto!Valor_frete * TBProduto!int_IPI) / 100), "###,##0.00")
            End If
            TBProduto!Valor_seguro = Format(Seguro, "###,##0.00")
            TBProduto!Valor_acessorias = Format(Acessorias, "###,##0.00")
            TBProduto!Valor_desconto = Format(QuantsolicitadoN2, "###,##0.00")
            
            ProcRecalculaImpostos
            TBProduto.Update
            
            ProcRecalculaICMS
            
            Valor = Valor + TBProduto!Valor_frete
            Valor1 = Valor1 + TBProduto!Valor_seguro
            Valor2 = Valor2 + TBProduto!Valor_acessorias
            Valor3 = Valor3 + TBProduto!Valor_desconto
            TBProduto.MoveNext
        Loop
    End If
    TBProduto.Close
    ProcCarregaLista
    ProcGravarTotaisNota
    ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
End If
MsgBox ("Alteração dos valores realizada com sucesso."), vbInformation
'==================================
Modulo = Formulario
Evento = "Alterar valores"
ID_documento = TxtID
ProcVerificaTipoNF False
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
Documento1 = ""
ProcGravaEvento
'==================================
ProcCarregaListaNota (IIf(FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCancelar()
On Error GoTo tratar_erro

If FunVerifValidacaoRegistro("cancelar", txtDtValidacao, IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal"), "alterações dos valores", False) = False Then Exit Sub
FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = False Or Permitido = False Then
    MsgBox ("Não é permitido cancelar a alteração dos valores, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If

Conexao.Execute "Update tbl_Dados_Nota_Fiscal Set Alterar = 'False' where id = " & TxtID
Conexao.Execute "Update tbl_Detalhes_Nota Set dbl_ValorIPI = ROUND(dbl_ValorIPI - ((Valor_frete * int_IPI) / 100), 2) where ID_nota = " & TxtID & " and Tem_IPI_frete = 'True'"
Conexao.Execute "Update tbl_Detalhes_Nota Set Valor_frete = 0, Tem_IPI_frete = 'False', Valor_seguro = 0, Valor_acessorias = 0, Valor_desconto = 0 where ID_nota = " & TxtID
NF_alterada = False
Cancelar_alt_totais = True

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select NFP.*, TN.Total_DAS from tbl_Detalhes_Nota NFP INNER JOIN tbl_Totais_Nota TN ON TN.ID_nota = NFP.ID_nota where NFP.id_nota = " & TxtID.Text & " and NFP.Remessa = 'False' and NFP.Retorno = 'False' and NFP.Tipo = 'P' order by NFP.int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Do While TBProduto.EOF = False
        ProcRecalculaImpostos
        TBProduto.Update
        
        ProcRecalculaICMS
        TBProduto.MoveNext
    Loop
End If
TBProduto.Close

ProcLimpaCamposProd
ProcLimpaCamposTotaisNota
ProcCarregaLista
ProcCarregaListaServicos
ProcGravarTotaisNota
ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
MsgBox ("Cancelamento da alteração dos valores efetuado com sucesso."), vbInformation
'==================================
Modulo = Formulario
Evento = "Cancelar alteração dos valores"
ID_documento = TxtID
ProcVerificaTipoNF False
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
Documento1 = ""
ProcGravaEvento
'==================================
ProcCarregaListaNota (IIf(FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))
Cancelar_alt_totais = False

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcRecalculaImpostos()
On Error GoTo tratar_erro

Valor_total = TBProduto!dbl_ValorTotal + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)

ProcVerifImpostosEmpresa Cmb_empresa.ItemData(Cmb_empresa.ListIndex), TBProduto!Retorno, "", False, 0, False, TabelaSN, Lbl2.Caption

TBProduto!PIS_Prod = PIS_Prod
If PIS_Prod <> 0 Then TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00") Else TBProduto!Total_PIS_prod = 0
TBProduto!Cofins_Prod = Cofins_Prod
If Cofins_Prod <> 0 Then TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00") Else TBProduto!Total_Cofins_prod = 0
TBProduto!CSLL_Prod = CSLL_Prod
If CSLL_Prod <> 0 Then TBProduto!Total_CSLL_prod = Format((Valor_total * CSLL_Prod) / 100, "###,##0.00") Else TBProduto!Total_CSLL_prod = 0
TBProduto!IRPJ_Prod = IRPJ_Prod
If IRPJ_Prod <> 0 Then TBProduto!Total_IRPJ_prod = Format((Valor_total * IRPJ_Prod) / 100, "###,##0.00") Else TBProduto!Total_IRPJ_prod = 0
TBProduto!ICMS_SN = ICMS_SN

Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where ID = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then
    If IsNull(TBProduto!ID_CF) = False Then
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & TBProduto!ID_CF, Conexao, adOpenKeyset, adLockOptimistic
        If TBFI.EOF = False Then
            'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
            If DestacaImpostos = "SIM" And TBFI!Retem_PIS_Cofins = True And chkRetorno.Value = 0 Then
                TBProduto!Valor_Retencao_PIS = Format((Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "###,##0.00")
                TBProduto!Valor_Retencao_Cofins = Format((Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "###,##0.00")
            Else
                TBProduto!Valor_Retencao_PIS = 0
                TBProduto!Valor_Retencao_Cofins = 0
            End If
    
            If DestacaImpostos = "SIM" And Regime <> 1 And TBProduto!Retorno = False Then
                PIS_Prod = IIf(IsNull(TBFI!PIS_destaca), 0, TBFI!PIS_destaca)
                Cofins_Prod = IIf(IsNull(TBFI!Cofins_destaca), 0, TBFI!Cofins_destaca)
                If PIS_Prod <> 0 Then
                    TBProduto!PIS_Prod = PIS_Prod
                    TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00")
                End If
                If Cofins_Prod <> 0 Then
                    TBProduto!Cofins_Prod = Cofins_Prod
                    TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00")
                End If
            Else
                TBProduto!PIS_Prod = 0
                TBProduto!Total_PIS_prod = 0
                TBProduto!Cofins_Prod = 0
                TBProduto!Total_Cofins_prod = 0
            End If
            
            'Calcula valor aproximado de tributos
            TBProduto!Aliq_aprox_tributos = FunCalcularAproxTrib(0, IIf(IsNull(TBProduto!txt_CST), 0, TBProduto!txt_CST), IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), False)
            If TBProduto!Aliq_aprox_tributos = 0 Then
                TBProduto!Valor_aprox_tributos = 0
            Else
                TBProduto!Valor_aprox_tributos = Format((TBProduto!dbl_ValorTotal * TBProduto!Aliq_aprox_tributos) / 100, "###,##0.00")
            End If
        End If
        TBFI.Close
    Else
        TBProduto!Valor_Retencao_PIS = 0
        TBProduto!Valor_Retencao_Cofins = 0
        TBProduto!PIS_Prod = 0
        TBProduto!Total_PIS_prod = 0
        TBProduto!Cofins_Prod = 0
        TBProduto!Total_Cofins_prod = 0
        TBProduto!Aliq_aprox_tributos = 0
        TBProduto!Valor_aprox_tributos = 0
    End If
    Valor_total = 0
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcRecalculaICMS()
On Error GoTo tratar_erro

ProcAtualizaCST Cmb_empresa.ItemData(Cmb_empresa.ListIndex), txtIDCliente, txt_Razao, cbo_UF, IIf(Cmb_consumidor = "", 1, Left(Cmb_consumidor, 1)), IIf(cmbFinalidade_emissao = "", 1, Left(cmbFinalidade_emissao, 1))
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select id_CFOP FROM tbl_NaturezaOperacao WHERE IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and (Vendas = 'True' or MaoObra = 'True')", Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    PV = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
    PV = (PV - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
    IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
    ProcCalculaBC Cmb_empresa.ItemData(Cmb_empresa.ListIndex), TBCFOP!ID_CFOP, 0, PV, IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi), SomarIPI, SomarIPIST, TemReducaoBC, IIf(TBProduto!NaoArredondar = True, True, False), IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), Aplicacao, txtIDCliente, txt_Razao

    ProcCalculaBaseST cbo_UF, IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), IIf(txtIDCliente = "", 0, txtIDCliente), txt_Razao, Format((IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) / IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd), "###,##0.0000000000"), IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd), BC, BCST, IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete), IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), True, IIf(Left(Cmb_consumidor, 1) = 1, True, False), Cmb_empresa.ItemData(Cmb_empresa.ListIndex)
End If
TBCFOP.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcEnviaDadosPedido(ID_pedido As Long, Pedido_int As Boolean)
On Error GoTo tratar_erro

If Pedido_int = True Then
    NomeTabelaFiltro = "vendas_proposta"
    TextoFiltro = "Cotacao = " & ID_pedido
Else
    NomeTabelaFiltro = "Compras_pedido"
    TextoFiltro = "IDPedido = " & ID_pedido
End If
Set TBVendas = CreateObject("adodb.recordset")
TBVendas.Open "Select * from " & NomeTabelaFiltro & " where " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
If TBVendas.EOF = False Then
    Set TBGravar = CreateObject("adodb.recordset")
    If Pedido_int = True Then TextoFiltro1 = "Proposta = '" & TBVendas!Ncotacao & "' and Revisao = " & TBVendas!Revisao Else TextoFiltro1 = "Proposta = '" & TBVendas!Pedido & "' and Revisao = 0"
    TBGravar.Open "Select * from tbl_proposta_nota where ID_nota = " & TxtID & " and " & TextoFiltro1, Conexao, adOpenKeyset, adLockOptimistic
    If TBGravar.EOF = True Then TBGravar.AddNew
    If Pedido_int = True Then
        TBGravar!Proposta = TBVendas!Ncotacao
        TBGravar!Revisao = TBVendas!Revisao
    Else
        TBGravar!Proposta = TBVendas!Pedido
        TBGravar!Revisao = 0
    End If
    TBGravar!NF = IIf(txtNFiscal = "", Null, txtNFiscal)
    TBGravar!ID_nota = TxtID
    TBGravar.Update
    TBGravar.Close
End If
TBVendas.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub Procenviadadoslista(ID_carteira As Long, Descricao_comercial As Boolean, Agrupar As Boolean, Pedido_int As Boolean, qtdeliberar As Double)
On Error GoTo tratar_erro

Set TBLISTA = CreateObject("adodb.recordset")
If Pedido_int = True Then
    TBLISTA.Open "Select * FROM vendas_carteira WHERE Codigo = " & ID_carteira, Conexao, adOpenKeyset, adLockOptimistic
    If TBLISTA.EOF = False Then
        If Agrupar = True Then
             If FunVerifCalcIPISDesc(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = True Then
                If OutraMoeda = True Then Valor = Format(TBLISTA!preco_unitario * ValorMoeda, "###,##0.0000000000") Else Valor = Format(TBLISTA!preco_unitario, "###,##0.0000000000")
            Else
                If OutraMoeda = True Then Valor = Format(TBLISTA!preco_unitario_desconto * ValorMoeda, "###,##0.0000000000") Else Valor = Format(TBLISTA!preco_unitario_desconto, "###,##0.0000000000")
            End If
            NovoValor = Replace(Valor, ",", ".")
            TextoFiltro = "where ID_nota = " & TxtID & " and int_Cod_Produto = '" & TBLISTA!Desenho & "' and dbl_ValorUnitario = " & NovoValor & " and PCCliente = '" & TBLISTA!PCCliente & "'"
            If IsNull(TBLISTA!N_item) = False And TBLISTA!N_item <> "" Then TextoFiltro = TextoFiltro & " and N_item = '" & TBLISTA!N_item & "'"
            If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then TextoFiltro = TextoFiltro & " and ID_CF = " & TBLISTA!ID_CF
        Else
            TextoFiltro = ""
        End If
            
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "Select * from tbl_detalhes_nota " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
        If Agrupar = True Then
            If TBProduto.EOF = True Then TBProduto.AddNew
        Else
            TBProduto.AddNew
        End If
        TBProduto!Tipo = "P"
        TBProduto!int_Cod_Produto = TBLISTA!Desenho
        TBProduto!N_referencia = IIf(IsNull(TBLISTA!N_referencia), "", TBLISTA!N_referencia)
        TBProduto!N_item = IIf(IsNull(TBLISTA!N_item), "", TBLISTA!N_item)
        If Descricao_comercial = False Then TBProduto!Txt_descricao = Left(TBLISTA!descricao_tecnica, 105) Else TBProduto!Txt_descricao = Left(TBLISTA!Descricao, 105)
        TBProduto!Familia = IIf(IsNull(TBLISTA!Familia), "", TBLISTA!Familia)
        TBProduto!txt_Unid = TBLISTA!Unidade
        TBProduto!Unidade_com = TBLISTA!Unidade_com
        
        If Formulario = "Estoque/Ordem de faturamento" Then TBLISTA!qtdeliberada = TBLISTA!qtdeliberada + qtdeliberar Else TBLISTA!QtdeFaturada = TBLISTA!QtdeFaturada + qtdeliberar
        
        If FunVerifCalcIPISDesc(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = True Then
            If OutraMoeda = True Then TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario * ValorMoeda, "###,##0.0000000000") Else TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario, "###,##0.0000000000")
            TBProduto!Valor_desconto = Format(TBLISTA!ValorDesconto * qtdeliberar, "###,##0.0000000000")
        Else
            If OutraMoeda = True Then TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario_desconto * ValorMoeda, "###,##0.0000000000") Else TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario_desconto, "###,##0.0000000000")
        End If
        'VALOR_TOTAL = Format(tbproduto!dbl_ValorUnitario * qtdeliberar, "0.00")
        Valor_total = TBProduto!dbl_ValorUnitario * qtdeliberar
        VlrIPI = Format((Valor_total * TBLISTA!int_IPI) / 100, "0.00")
        If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then
            Set TBAliquota = CreateObject("adodb.recordset")
            TBAliquota.Open "Select * from Clientes_Impostos where IDCliente = " & txtIDCliente & " and ID_CF = " & TBLISTA!ID_CF & " and PorcentagemIPI <> 0", Conexao, adOpenKeyset, adLockOptimistic
            If TBAliquota.EOF = False Then
                VlrIPI = TBProduto!dbl_ValorUnitario / TBAliquota!PorcentagemIPI
                VlrIPI = Format((VlrIPI - TBProduto!dbl_ValorUnitario) * qtdeliberar, "0.00")
            End If
            TBAliquota.Close
        End If
        If Agrupar = True Then TBProduto!dbl_valoripi = Format(TBProduto!dbl_valoripi + VlrIPI, "0.00") Else TBProduto!dbl_valoripi = Format(VlrIPI, "0.00")
                
        TBProduto!ID_CFOP = IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP)
        If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then TBProduto!ID_CF = TBLISTA!ID_CF
        If IsNull(TBLISTA!txt_CST) = False And TBLISTA!txt_CST <> "" Then TBProduto!txt_CST = TBLISTA!txt_CST
        
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select * from projproduto where desenho = '" & TBLISTA!Desenho & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBFIltro.EOF = False Then
            TBProduto!Codproduto = TBFIltro!Codproduto
            
            Set TBAliquota = CreateObject("adodb.recordset")
            TBAliquota.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP), Conexao, adOpenKeyset, adLockOptimistic
            If TBAliquota.EOF = False Then
                If IsNull(TBLISTA!txt_CST) = True Or TBLISTA!txt_CST = "" Then
                    If IsNull(TBAliquota!CST_ICMS) = False And TBAliquota!CST_ICMS <> "" Then TBProduto!txt_CST = TBAliquota!CST_ICMS
                    
                    If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select CST.CST FROM CST INNER JOIN Regioes ON CST.ID_UF = Regioes.ID where CST.ID_CF = " & IIf(IsNull(TBLISTA!ID_CF), 0, TBLISTA!ID_CF) & " and Regioes.UF = '" & cbo_UF & "'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then
                            If IsNull(TBAbrir!CST) = False And TBAbrir!CST <> "" Then TBProduto!txt_CST = TBAbrir!CST
                        End If
                        TBAbrir.Close
                    End If
                End If
                If IsNull(TBAliquota!CST_IPI) = False And TBAliquota!CST_IPI <> "" Then TBProduto!CST_IPI = TBAliquota!CST_IPI
                If IsNull(TBAliquota!CST_PIS) = False And TBAliquota!CST_PIS <> "" Then TBProduto!CST_PIS = TBAliquota!CST_PIS
                If IsNull(TBAliquota!CST_Cofins) = False And TBAliquota!CST_Cofins <> "" Then TBProduto!CST_Cofins = TBAliquota!CST_Cofins
            End If
            TBAliquota.Close
            
            If IsNull(TBFIltro!FINAME) = False And TBFIltro!FINAME <> "" Then TBProduto!Complemento_descricao = "CÓD. FINAME: " & TBFIltro!FINAME
        End If
        TBFIltro.Close
        
        If IsNull(TBLISTA!N_serie) = False And TBLISTA!N_serie <> "" Then
            If IsNull(TBProduto!Complemento_descricao) = False And TBProduto!Complemento_descricao <> "" Then
                Complemento_descricao = Left(TBProduto!Complemento_descricao & " - N. DE SÉRIE: " & TBLISTA!N_serie, 60)
            Else
                Complemento_descricao = Left("N. DE SÉRIE: " & TBLISTA!N_serie, 60)
            End If
            TBProduto!Complemento_descricao = Complemento_descricao
        End If
        
        ProcControleImposto IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP), IIf(txtIDCliente = "", 0, txtIDCliente)
        ProcVerifImpostosEmpresa Cmb_empresa.ItemData(Cmb_empresa.ListIndex), IIf(IsNull(TBLISTA!Retorno), False, TBLISTA!Retorno), "", False, 0, False, TabelaSN, Lbl2.Caption
        'Novo cálculo simples nacional 2018
        If DAS <> 0 Then
            NovoValor = Replace(DAS, ",", ".")
            Conexao.Execute "UPDATE tbl_Totais_Nota Set DAS = " & NovoValor & " where ID_nota = " & TxtID
        End If
        If TBProduto!CST_PIS = "01" Or TBProduto!CST_PIS = "03" Or TBProduto!CST_PIS = "49" Or TBProduto!CST_PIS = "98" Or TBProduto!CST_PIS = "99" Then
            TBProduto!PIS_Prod = PIS_Prod
        Else
            PIS_Prod = 0
            TBProduto!PIS_Prod = 0
        End If
        If TBProduto!CST_Cofins = "01" Or TBProduto!CST_Cofins = "02" Or TBProduto!CST_Cofins = "03" Or TBProduto!CST_Cofins = "49" Or TBProduto!CST_Cofins = "98" Or TBProduto!CST_Cofins = "99" Then
            TBProduto!Cofins_Prod = Cofins_Prod
        Else
            Cofins_Prod = 0
            TBProduto!Cofins_Prod = 0
        End If
        TBProduto!CSLL_Prod = CSLL_Prod
        TBProduto!IRPJ_Prod = IRPJ_Prod
        TBProduto!cpp = CPP_Prod
        TBProduto!ICMS_SN = ICMS_SN
        If Agrupar = True Then
            TBProduto!Total_PIS_prod = TBProduto!Total_PIS_prod + Format((Valor_total * PIS_Prod) / 100, "0.00")
            TBProduto!Total_Cofins_prod = TBProduto!Total_Cofins_prod + Format((Valor_total * Cofins_Prod) / 100, "0.00")
            TBProduto!Total_CSLL_prod = TBProduto!Total_CSLL_prod + Format((Valor_total * CSLL_Prod) / 100, "0.00")
            TBProduto!Total_IRPJ_prod = TBProduto!Total_IRPJ_prod + Format((Valor_total * IRPJ_Prod) / 100, "0.00")
            TBProduto!Total_CPP = TBProduto!Total_CPP + Format((Valor_total * CPP_Prod) / 100, "0.00")
            TBProduto!int_Qtd = TBProduto!int_Qtd + qtdeliberar
            TBProduto!Saldo = TBProduto!Saldo + qtdeliberar
            TBProduto!dbl_ValorTotal = Format(TBProduto!dbl_ValorUnitario * TBProduto!int_Qtd, "0.00")
        Else
            If PIS_Prod <> 0 Then TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "0.00") Else TBProduto!Total_PIS_prod = 0
            If Cofins_Prod <> 0 Then TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "0.00") Else TBProduto!Total_Cofins_prod = 0
            If CSLL_Prod <> 0 Then TBProduto!Total_CSLL_prod = Format((Valor_total * CSLL_Prod) / 100, "0.00") Else TBProduto!Total_CSLL_prod = 0
            If IRPJ_Prod <> 0 Then TBProduto!Total_IRPJ_prod = Format((Valor_total * IRPJ_Prod) / 100, "0.00") Else TBProduto!Total_IRPJ_prod = 0
            If CPP_Prod <> 0 Then TBProduto!Total_CPP = Format((Valor_total * CPP_Prod) / 100, "0.00") Else TBProduto!Total_CPP = 0
            TBProduto!int_Qtd = qtdeliberar
            TBProduto!Saldo = qtdeliberar
            TBProduto!dbl_ValorTotal = Format(Valor_total, "0.00")
        End If
        TBProduto!txt_Unid = TBLISTA!Unidade
        TBProduto!Unidade_com = TBLISTA!Unidade_com
        
        'Calcula quantidade se a unidade for diferente
        If FunVerifUNConversao(TBLISTA!Unidade, TBLISTA!Unidade_com) = True Then
            TBProduto!Qtde_estoque = FunConverteUN(TBLISTA!Unidade, TBLISTA!Unidade_com, TBProduto!int_Qtd, TBLISTA!Desenho)
        Else
            TBProduto!Qtde_estoque = Null
        End If
        
        TBProduto!int_ICMS = TBLISTA!IntICMS
        TBProduto!int_IPI = TBLISTA!int_IPI
        TBProduto!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
        TBProduto!ID_nota = TxtID.Text
        TBProduto!PCCliente = TBLISTA!PCCliente
        TBProduto!Retorno = TBLISTA!Retorno
        If Soma_retorno_total_NF = True Then TBProduto!Soma_retorno_totalnf = True Else TBProduto!Soma_retorno_totalnf = False
                
        If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & TBLISTA!ID_CF, Conexao, adOpenKeyset, adLockOptimistic
            If TBFI.EOF = False Then
                'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
                If TBFI!Retem_PIS_Cofins = True Then
                    If Agrupar = True Then
                        TBProduto!Valor_Retencao_PIS = Format(TBProduto!Valor_Retencao_PIS + (Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "0.00")
                        TBProduto!Valor_Retencao_Cofins = Format(TBProduto!Valor_Retencao_Cofins + (Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "0.00")
                    Else
                        TBProduto!Valor_Retencao_PIS = Format((Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "0.00")
                        TBProduto!Valor_Retencao_Cofins = Format((Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "0.00")
                    End If
                End If
                
                'Calcula valor aproximado de tributos
                TBProduto!Aliq_aprox_tributos = FunCalcularAproxTrib(0, IIf(IsNull(TBProduto!txt_CST), 0, TBProduto!txt_CST), IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP), False)
                If TBProduto!Aliq_aprox_tributos = 0 Then
                    TBProduto!Valor_aprox_tributos = 0
                Else
                    If Agrupar = True Then TBProduto!Valor_aprox_tributos = Format(TBProduto!Valor_aprox_tributos + (Valor_total * TBProduto!Aliq_aprox_tributos) / 100, "0.00") Else TBProduto!Valor_aprox_tributos = Format((Valor_total * TBProduto!Aliq_aprox_tributos) / 100, "0.00")
                End If
            Else
                Retem_PIS_Cofins = False
            End If
            TBFI.Close
        End If
        TBProduto.Update
        
        ProcRecalculaICMS
        
        TBLISTA.Update
        ProcGravarPedidosProdServ TBProduto!ID_nota, TBProduto!Int_codigo, TBLISTA!CODIGO, TBLISTA!Desenho, qtdeliberar
        ProcGravarQtdeFaturadaProdServ TBLISTA!CODIGO, TBLISTA!Desenho
        TBProduto.Close
    End If
Else
    TBLISTA.Open "Select * FROM Compras_pedido_lista WHERE IDLista = " & ID_carteira, Conexao, adOpenKeyset, adLockOptimistic
    If TBLISTA.EOF = False Then
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "Select * from tbl_detalhes_nota", Conexao, adOpenKeyset, adLockOptimistic
        TBProduto.AddNew
        TBProduto!Tipo = "P"
        TBProduto!int_Cod_Produto = TBLISTA!Desenho
        TBProduto!N_referencia = IIf(IsNull(TBLISTA!N_referencia), "", TBLISTA!N_referencia)
        If Descricao_comercial = False Then TBProduto!Txt_descricao = Left(TBLISTA!Descricao, 105) Else TBProduto!Txt_descricao = Left(TBLISTA!Descricao_comercial, 105)
        TBProduto!Familia = IIf(IsNull(TBLISTA!Familia), "", TBLISTA!Familia)
        TBProduto!txt_Unid = TBLISTA!Un
        TBProduto!Unidade_com = TBLISTA!Unidade_com
        If OutraMoeda = True Then TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario_desconto * ValorMoeda, "###,##0.0000000000") Else TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario_desconto, "###,##0.0000000000")
        'VALOR_TOTAL = Format(tbproduto!dbl_ValorUnitario * qtdeliberar, "0.00")
        Valor_total = TBProduto!dbl_ValorUnitario * qtdeliberar
        VlrIPI = Format((Valor_total * IIf(IsNull(TBLISTA!IPI), 0, TBLISTA!IPI)) / 100, "0.00")
        TBProduto!dbl_valoripi = Format(VlrIPI, "0.00")
        
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select * from projproduto where desenho = '" & TBLISTA!Desenho & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBFIltro.EOF = False Then
            TBProduto!Codproduto = TBFIltro!Codproduto
            If IsNull(TBFIltro!ID_CF) = False And TBFIltro!ID_CF <> "" Then TBProduto!ID_CF = TBFIltro!ID_CF
            If IsNull(TBFIltro!FINAME) = False And TBFIltro!FINAME <> "" Then TBProduto!Complemento_descricao = "CÓD. FINAME: " & TBFIltro!FINAME
        End If
        TBFIltro.Close
        If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then TBProduto!ID_CF = TBLISTA!ID_CF
        
        TBProduto!int_Qtd = qtdeliberar
        TBProduto!Saldo = qtdeliberar
        TBProduto!dbl_ValorTotal = Format(Valor_total, "0.00")
        TBProduto!int_ICMS = TBLISTA!ICMS
        TBProduto!int_IPI = IIf(IsNull(TBLISTA!IPI), 0, TBLISTA!IPI)
        TBProduto!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
        TBProduto!ID_nota = TxtID.Text
        TBProduto!Remessa = TBLISTA!Remessa
        TBProduto!Soma_retorno_totalnf = False
                
        If IsNull(TBProduto!ID_CF) = False And TBProduto!ID_CF <> "" Then
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & TBProduto!ID_CF, Conexao, adOpenKeyset, adLockOptimistic
            If TBFI.EOF = False Then
                'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
                If TBFI!Retem_PIS_Cofins = True Then
                    If Agrupar = True Then
                        TBProduto!Valor_Retencao_PIS = Format(TBProduto!Valor_Retencao_PIS + (Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "0.00")
                        TBProduto!Valor_Retencao_Cofins = Format(TBProduto!Valor_Retencao_Cofins + (Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "0.00")
                    Else
                        TBProduto!Valor_Retencao_PIS = Format((Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "0.00")
                        TBProduto!Valor_Retencao_Cofins = Format((Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "0.00")
                    End If
                End If
                
                'Verifica valor aproximado dos impostos LEI 12741
                TBProduto!Aliq_aprox_tributos = 0
                TBProduto!Valor_aprox_tributos = 0
            Else
                Retem_PIS_Cofins = False
            End If
            TBFI.Close
        End If
        TBProduto.Update
        
        ProcRecalculaICMS
        
        TBLISTA.Update
        ProcGravarPedidosProdServ TBProduto!ID_nota, TBProduto!Int_codigo, TBLISTA!IDlista, TBLISTA!Desenho, qtdeliberar
        TBProduto.Close
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcGravarPedidosProdServ(ID_nota As Long, ID_prod_NF As Long, ID_carteira As Long, Codinterno As String, Quantidade As Double)
On Error GoTo tratar_erro

Set TBGravar = CreateObject("adodb.recordset")
TBGravar.Open "Select * FROM tbl_Detalhes_Nota_pedidos where ID_nota = " & ID_nota & " and ID_prod_NF = " & ID_prod_NF & " and ID_carteira = " & ID_carteira & " and Codinterno = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBGravar.EOF = True Then TBGravar.AddNew
TBGravar!ID_nota = ID_nota
TBGravar!ID_prod_NF = ID_prod_NF
TBGravar!ID_carteira = ID_carteira
TBGravar!Codinterno = Codinterno
TBGravar!Quantidade = Quantidade
TBGravar.Update
TBGravar.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcEnviadadosListaServicos(ID_carteira As Long, Descricao_comercial As Boolean, qtdeliberar As Double)
On Error GoTo tratar_erro

Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * FROM vendas_carteira WHERE Codigo = " & ID_carteira, Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    Set TBItem = CreateObject("adodb.recordset")
    TBItem.Open "Select * from tbl_detalhes_nota", Conexao, adOpenKeyset, adLockOptimistic
    TBItem.AddNew
    TBItem!Tipo = "S"
    TBItem!int_Cod_Produto = TBLISTA!Desenho
    TBItem!N_referencia = IIf(IsNull(TBLISTA!N_referencia), "", TBLISTA!N_referencia)
    If Descricao_comercial = False Then TBItem!Txt_descricao = Left(TBLISTA!descricao_tecnica, 105) Else TBItem!Txt_descricao = Left(TBLISTA!Descricao, 105)
    TBItem!txt_Unid = TBLISTA!Unidade
    TBItem!Unidade_com = TBLISTA!Unidade_com
    TBItem!Familia = IIf(IsNull(TBLISTA!Familia), "", TBLISTA!Familia)
    TBItem!ID_CFOP = IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP)
    
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select Codproduto from projproduto where desenho = '" & TBLISTA!Desenho & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        TBItem!Codproduto = TBProduto!Codproduto
    End If
    TBProduto.Close
    
    If Formulario = "Estoque/Ordem de faturamento" Then TBLISTA!qtdeliberada = TBLISTA!qtdeliberada + qtdeliberar Else TBLISTA!QtdeFaturada = TBLISTA!QtdeFaturada + qtdeliberar
    
    If OutraMoeda = True Then
        TBItem!dbl_ValorUnitario = Format(TBLISTA!preco_unitario_desconto * ValorMoeda, "###,##0.0000000000")
    Else
        TBItem!dbl_ValorUnitario = Format(TBLISTA!preco_unitario_desconto, "###,##0.0000000000")
    End If
    
    TBItem!int_Qtd = qtdeliberar
    Valor_total = TBItem!dbl_ValorUnitario * qtdeliberar
    TBItem!dbl_ValorTotal = Format(Valor_total, "0.00")
    If Formulario <> "Estoque/Ordem de faturamento" Then TBItem!int_NotaFiscal = IIf(txtNFiscal.Text <> "", txtNFiscal.Text, 0)
    TBItem!Servico_cliente = TBLISTA!Servico_cliente
    
    ProcControleImposto TBItem!ID_CFOP, IIf(txtIDCliente = "", 0, txtIDCliente)
    ProcVerifImpostosEmpresa Cmb_empresa_filtro.ItemData(Cmb_empresa_filtro.ListIndex), False, TBItem!int_Cod_Produto, TBItem!Servico_cliente, Valor_total, True, TabelaSN, Lbl2.Caption
    If DAS <> 0 Then
        NovoValor = Replace(DAS, ",", ".")
        Conexao.Execute "UPDATE tbl_Totais_Nota Set DAS = " & NovoValor & " where ID_nota = " & TxtID
    End If
    TBItem!PIS_Serv = PIS_Serv
    If TBItem!PIS_Serv <> 0 Then TBItem!Total_PIS_serv = Format((Valor_total * TBItem!PIS_Serv) / 100, "0.00") Else TBItem!Total_PIS_serv = 0
    TBItem!Cofins_Serv = Cofins_Serv
    If TBItem!Cofins_Serv <> 0 Then TBItem!Total_Cofins_serv = Format((Valor_total * TBItem!Cofins_Serv) / 100, "0.00") Else TBItem!Total_Cofins_serv = 0
    TBItem!CSLL_Serv = CSLL_Serv
    If TBItem!CSLL_Serv <> 0 Then TBItem!Total_CSLL_serv = Format((Valor_total * TBItem!CSLL_Serv) / 100, "0.00") Else TBItem!Total_CSLL_serv = 0
    TBItem!ISS = ISS_Serv
    If TBItem!ISS <> 0 Then TBItem!VlrISS = Format((Valor_total * TBItem!ISS) / 100, "0.00") Else TBItem!VlrISS = 0
    TBItem!INSS_Serv = INSS_Serv
    If TBItem!INSS_Serv <> 0 Then TBItem!Total_INSS_serv = Format((Valor_total * TBItem!INSS_Serv) / 100, "0.00") Else TBItem!Total_INSS_serv = 0
    TBItem!IRRF_Serv = IRRF_Serv
    If TBItem!IRRF_Serv <> 0 Then TBItem!Total_IRRF_serv = Format((Valor_total * TBItem!IRRF_Serv) / 100, "0.00") Else TBItem!Total_IRRF_serv = 0
    TBItem!cpp = CPP_Serv
    If TBItem!cpp <> 0 Then TBItem!Total_CPP = Format((Valor_total * TBItem!cpp) / 100, "0.00") Else TBItem!Total_CPP = 0
    TBItem!IRPJ_Serv = IRPJ_Serv
    If TBItem!IRPJ_Serv <> 0 Then TBItem!Total_IRPJ_serv = Format((Valor_total * TBItem!IRPJ_Serv) / 100, "0.00") Else TBItem!Total_IRPJ_serv = 0
            
    TBItem!ID_nota = TxtID.Text
    TBItem!PCCliente = TBLISTA!PCCliente
    
    'Calcula valor aproximado de tributos
    TBItem!Aliq_aprox_tributos = FunCalcularAproxTrib(TBItem!PIS_Serv + TBItem!Cofins_Serv, "", IIf(IsNull(TBItem!ID_CFOP), 0, TBItem!ID_CFOP), True)
    If TBItem!Aliq_aprox_tributos = 0 Then
        TBItem!Valor_aprox_tributos = 0
    Else
        TBItem!Valor_aprox_tributos = Format((TBItem!dbl_ValorTotal * TBItem!Aliq_aprox_tributos) / 100, "0.00")
    End If
    
    'Calcula quantidade se a unidade for diferente
    If FunVerifUNConversao(TBLISTA!Unidade, TBLISTA!Unidade_com) = True Then
        TBItem!Qtde_estoque = FunConverteUN(TBLISTA!Unidade, TBLISTA!Unidade_com, TBItem!int_Qtd, TBLISTA!Desenho)
    Else
        TBItem!Qtde_estoque = Null
    End If
    
    TBItem.Update
    TBLISTA.Update
    
    ProcGravarPedidosProdServ TBItem!ID_nota, TBItem!Int_codigo, TBLISTA!CODIGO, TBLISTA!Desenho, qtdeliberar
    ProcGravarQtdeFaturadaProdServ TBLISTA!CODIGO, TBLISTA!Desenho
    TBItem.Close
End If
TBLISTA.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcLimpaCamposNota()
On Error GoTo tratar_erro

IDpedido = 0
IDAntigo = 0
TxtID = ""
Cmb_modelo = "55 - Nota Fiscal Eletrônica"
txtNFiscal.Text = ""
txtSerie = ""
optProduto.Value = False
optServico.Value = False
Txt_proposta.Clear
Txt_rev.Text = ""
txt_DtEmissao.Value = Date
Txt_hora_emissao = Format(Now, "hh:mm:ss")
txt_EntSai.Text = Format(Date, "dd/mm/yyyy")
mskHoraSaida.Text = Format(Now, "hh:mm:ss")
txtDtValidacao = ""
txtRespValidacao = ""
txt_IE.Text = ""
txt_IEST.Text = ""
txttipocliente = ""
txt_CNPJ_CPF.Text = ""
txtIDCliente.Text = ""
txt_Razao.Text = ""
txt_Endereco.Text = ""
txtNumero = ""
txt_Bairro.Text = ""
txt_Municipio.Text = ""
Txt_CEP.Text = ""
cbo_UF.ListIndex = -1
txt_FoneFAX.Text = ""
txtMoedaPrincipal = ""
txtVlrMoedaPrincipal = ""
Txt_chave_acesso = ""
'cmbForma_pagamento.ListIndex = -1
cmbFinalidade_emissao.ListIndex = -1
Cmb_consumidor.ListIndex = -1
cmbEntrega.Clear
Txt_obs = ""
Opt_sim.Value = False
Opt_nao.Value = False
cmdCliente.Enabled = True
NF_enviada = False
NF_alterada = False
NFe_liberada = False
CodigoLista = 0
TabelaSN = 0
RegimeEmpresa = 0
If Formulario = "Faturamento/Nota fiscal/Própria" Then
    Caption = "Administrativo - Faturamento - Nota fiscal - Própria"
ElseIf Formulario = "Faturamento/Nota fiscal/Terceiros" Then
        Caption = "Administrativo - Faturamento - Nota fiscal - Terceiros"
    ElseIf Formulario = "Estoque/Ordem de faturamento" Then
            Caption = "Estoque - Ordem de faturamento"
    ElseIf Formulario = "Estoque/Nota fiscal" Then
            Caption = "Estoque - Nota fiscal"
End If
ProcLimparTudo

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaDadosNota(ID_nota As Long)
On Error GoTo tratar_erro

Set TBControleNF = CreateObject("adodb.recordset")
TBControleNF.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBControleNF.EOF = False Then
    If IsNull(TBControleNF!ID_empresa) = False And TBControleNF!ID_empresa <> "" Then ProcPuxaDadosComboEmpresa Cmb_empresa, TBControleNF!ID_empresa
    If Formulario = "Faturamento/Nota fiscal/Própria" Then
        Caption = "Faturamento - Nota fiscal - Própria (Nota fiscal : " & TBControleNF!int_NotaFiscal & " - Tipo : " & TBControleNF!TipoNF & " - Série : " & TBControleNF!Serie & ")"
    ElseIf Formulario = "Faturamento/Nota fiscal/Terceiros" Then
            Caption = "Faturamento - Nota fiscal - Terceiros (Nota fiscal : " & TBControleNF!int_NotaFiscal & " - Tipo : " & TBControleNF!TipoNF & " - Série : " & TBControleNF!Serie & ")"
        ElseIf Formulario = "Estoque/Ordem de faturamento" Then
            Caption = "Estoque - Ordem de faturamento (Ordem : " & TBControleNF!ID & " - Tipo : " & TBControleNF!TipoNF & " - Série : " & TBControleNF!Serie & ")"
        ElseIf Formulario = "Estoque/Nota fiscal" Then
                Caption = "Estoque - Nota fiscal (Nota fiscal : " & TBControleNF!int_NotaFiscal & " - Tipo : " & TBControleNF!TipoNF & " - Série : " & TBControleNF!Serie & ")"
    End If
    
    With Cmb_modelo
        Select Case TBControleNF!Modelo
            Case "01": .Text = "01 - Nota Fiscal"
            Case "1B": .Text = "1B - Nota Fiscal Avulsa"
            Case "02": .Text = "02 - Nota Fiscal de Venda a Consumidor"
            Case "2D": .Text = "2D - Cupom Fiscal emitido por ECF"
            Case "2E": .Text = "2E - Bilhete de Passagem emitido por ECF"
            Case "04": .Text = "04 - Nota Fiscal de Produtor"
            Case "06": .Text = "06 - Nota Fiscal de Conta de Energia Elétrica"
            Case "07": .Text = "07 - Nota Fiscal de Serviço de Transporte"
            Case "08": .Text = "08 - Conhecimento de Transporte Rodoviário de Cargas"
            Case "8B": .Text = "8B - Conhecimento de Transporte de Cargas Avulso"
            Case "09": .Text = "09 - Conhecimento de Transporte Aquaviário de Cargas"
            Case "10": .Text = "10 - Conhecimento Aéreo"
            Case "11": .Text = "11 - Conhecimento de Transporte Ferroviário de Cargas"
            Case "13": .Text = "13 - Bilhete de Passagem Rodoviário"
            Case "14": .Text = "14 - Bilhete de Passagem Aquaviário"
            Case "15": .Text = "15 - Bilhete e Nota de Bagagem"
            Case "16": .Text = "16 - Bilhete de Passagem Ferroviário"
            Case "17": .Text = "17 - Despacho de Transporte"
            Case "18": .Text = "18 - Resumo de Movimento Diário"
            Case "20": .Text = "20 - Ordem de Coleta de Cargas"
            Case "21": .Text = "21 - Nota Fiscal de Serviço de Comunicação"
            Case "22": .Text = "22 - Nota Fiscal de Serviço de Telecomunicações"
            Case "23": .Text = "23 - Guia Nacional de Recolhimento de Tributos Estaduais"
            Case "24": .Text = "24 - Autorização de Carregamento e Transporte"
            Case "25": .Text = "25 - Manifesto de Carga"
            Case "26": .Text = "26 - Conhecimento de Transporte Multimodal de Cargas"
            Case "27": .Text = "27 - Nota Fiscal de Serviço de Transporte Ferroviário"
            Case "28": .Text = "28 - Nota Fiscal/Conta de Fornecimento de Gás Canalizado"
            Case "29": .Text = "29 - Nota Fiscal/Conta de Fornecimento de Água Canalizada"
            Case "30": .Text = "30 - Bilhete/Recibo do Passageiro"
            Case "55": .Text = "55 - Nota Fiscal Eletrônica"
            Case "57": .Text = "57 - Conhecimento de Transporte Eletrônico  CT-e"
        End Select
    End With
    
    txtNFiscal.Text = IIf(IsNull(TBControleNF!int_NotaFiscal), "", TBControleNF!int_NotaFiscal)
    NF = TBControleNF!int_NotaFiscal
    TxtID.Text = TBControleNF!ID
    TabelaSN = IIf(IsNull(TBControleNF!TabelaSN), 0, TBControleNF!TabelaSN)
    RegimeEmpresa = IIf(IsNull(TBControleNF!Regime), 0, TBControleNF!Regime)
    
    With txtSerie
        .Text = IIf(IsNull(TBControleNF!Serie), "", TBControleNF!Serie)
        If Faturamento_NF_Saida = True Then
            .Locked = True
            .TabStop = False
        Else
            .Locked = False
            .TabStop = True
        End If
    End With
    
    If IsNull(TBControleNF!TipoNF) = False And TBControleNF!TipoNF <> "" Then
        Select Case TBControleNF!TipoNF
            Case "M1": optProduto.Value = True
            Case "SA": optServico.Value = True
        End Select
        TipoNF = TBControleNF!TipoNF
    End If
    
    txttipocliente.Text = IIf(IsNull(TBControleNF!txt_tipocliente), "", TBControleNF!txt_tipocliente)
    txtNumero.Text = IIf(IsNull(TBControleNF!Numero), "", TBControleNF!Numero)
     
    Set TBProposta = CreateObject("adodb.recordset")
    TBProposta.Open "Select * from tbl_proposta_nota where id_nota = " & TBControleNF!ID, Conexao, adOpenKeyset, adLockOptimistic
    If TBProposta.EOF = False Then
        Do While TBProposta.EOF = False
            Txt_proposta.AddItem TBProposta!Proposta
            TBProposta.MoveNext
        Loop
    End If
    TBProposta.Close
    If TBControleNF!int_TipoNota = 1 Then Opt_saida.Value = True Else Opt_entrada.Value = True
    
    'Verifica se tem conta gerada e bloqueia as options de entrada e saída
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_Detalhes_Recebimento where ID_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Opt_saida.Enabled = False
        Opt_entrada.Enabled = False
    Else
        If Faturamento_NF_Saida = True Then
            Opt_saida.Enabled = True
            Opt_entrada.Enabled = True
        Else
            Opt_saida.Enabled = False
            Opt_entrada.Enabled = True
        End If
    End If
    TBContas.Close
    
    'Status da NF
    If TBControleNF!Int_status = 1 Then
        opt_Ativa.Value = True
        NF_cancelada = False
    Else
        opt_Cancelada.Value = True
        NF_cancelada = True
    End If
    
    If IsNull(TBControleNF!Id_Int_Cliente) = False Then
        txtIDCliente.Text = TBControleNF!Id_Int_Cliente
    Else
        Set TBClientes = CreateObject("adodb.recordset")
        TBClientes.Open "Select IDCliente from clientes where nomerazao = '" & txt_Razao & "' order by nomerazao", Conexao, adOpenKeyset, adLockOptimistic
        If TBClientes.EOF = False Then
            txtIDCliente.Text = TBClientes!IDCliente
        Else
            txtIDCliente.Text = 0
        End If
        TBClientes.Close
    End If
    IDCliente = txtIDCliente
    
    Novo_Nota = False
    GerarOF = False
    
    txt_DtEmissao.Value = IIf(IsNull(TBControleNF!dt_DataEmissao), Date, Format(TBControleNF!dt_DataEmissao, "dd/mm/yyyy"))
    Txt_hora_emissao = IIf(IsNull(TBControleNF!Hora_emissao), "__:__:__", Left(TBControleNF!Hora_emissao, 8))
    If IsNull(TBControleNF!dt_Saida_Entrada) = False And TBControleNF!dt_Saida_Entrada <> "" Then txt_EntSai = Format(TBControleNF!dt_Saida_Entrada, "dd/mm/yyyy") Else txt_EntSai = "__/__/____"
    mskHoraSaida = IIf(IsNull(TBControleNF!txt_Hora_Saida), "__:__:__", Left(TBControleNF!txt_Hora_Saida, 8))
    
    If Formulario = "Estoque/Ordem de faturamento" Then
        txtDtValidacao = IIf(IsNull(TBControleNF!DtValidacaoOF), "", TBControleNF!DtValidacaoOF)
        txtRespValidacao = IIf(IsNull(TBControleNF!RespValidacaoOF), "", TBControleNF!RespValidacaoOF)
    Else
        txtDtValidacao = IIf(IsNull(TBControleNF!DtValidacao), "", TBControleNF!DtValidacao)
        txtRespValidacao = IIf(IsNull(TBControleNF!RespValidacao), "", TBControleNF!RespValidacao)
    End If
    
    txt_IE = IIf(IsNull(TBControleNF!txt_IE_Cliente), "", TBControleNF!txt_IE_Cliente)
    txt_IEST = IIf(IsNull(TBControleNF!txt_Inscr_Substituto), "", TBControleNF!txt_Inscr_Substituto)
    txt_Razao = IIf(IsNull(TBControleNF!txt_Razao_Nome), "", TBControleNF!txt_Razao_Nome)
    Cliente = txt_Razao
    If txttipocliente <> "" And TBControleNF!txt_UF <> "EX" Then txt_CNPJ_CPF.Text = IIf(IsNull(TBControleNF!txt_CNPJ_CPF), "", TBControleNF!txt_CNPJ_CPF)
    txt_Endereco = IIf(IsNull(TBControleNF!txt_Endereco), "", TBControleNF!txt_Endereco)
    txt_Bairro = IIf(IsNull(TBControleNF!txt_Bairro), "", TBControleNF!txt_Bairro)
    Txt_CEP = IIf(IsNull(TBControleNF!Txt_CEP), "", TBControleNF!Txt_CEP)
    txt_Municipio = IIf(IsNull(TBControleNF!txt_Municipio), "", TBControleNF!txt_Municipio)
    txt_FoneFAX = IIf(IsNull(TBControleNF!txt_Fone_Fax), "", TBControleNF!txt_Fone_Fax)
    
    'NF impressa
    Opt_nao.Value = True
    cmdCliente.Enabled = True
    NF_enviada = False
    If Frame1(5).Visible = True Then
        If TBControleNF!Imprimir = True Then
            Opt_sim.Value = True
            cmdCliente.Enabled = False
            NF_enviada = True
        End If
    End If
    
    'Chave de acesso e NFe liberada
    NFe_liberada = False
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        If TBControleNF!int_TipoNota = 1 And IsNull(TBAbrir!Status) = False And TBAbrir!Status <> "" And TBAbrir!Status <> "0" And TBAbrir!Status <> "2" Then NFe_liberada = True
        Txt_chave_acesso = IIf(IsNull(TBAbrir!Chave_acesso), "", TBAbrir!Chave_acesso)
'        With cmbForma_pagamento
'            Select Case TBAbrir!Forma_pagamento
'                Case "0": .Text = "0 - pagamento à vista"
'                Case "1": .Text = "1 - pagamento à prazo"
'                Case "2": .Text = "2 - outros"
'            End Select
'        End With
        With cmbFinalidade_emissao
            Select Case TBAbrir!Finalidade_emissao
                Case "1": .Text = "1 - Normal"
                Case "2": .Text = "2 - Complementar"
                Case "3": .Text = "3 - Ajuste"
                Case "4": .Text = "4 - Devolução/Retorno"
            End Select
        End With
        With Cmb_consumidor
            Select Case TBAbrir!Consumidor_final
                Case "0": .Text = "0 - Não"
                Case "1": .Text = "1 - Sim"
            End Select
        End With
    End If
    TBAbrir.Close
    
    'NF alterada (totalização)
    If TBControleNF!Alterar = True Then NF_alterada = True Else NF_alterada = False
    
    ProcCarregaEntrega
    
    If IsNull(TBControleNF!txt_UF) = False Then cbo_UF = TBControleNF!txt_UF
1:
    txtMoedaPrincipal = IIf(IsNull(TBControleNF!Moeda), "", TBControleNF!Moeda)
    txtVlrMoedaPrincipal = IIf(IsNull(TBControleNF!ValorMoeda), "", Format(TBControleNF!ValorMoeda, "###,##0.00"))
    Txt_obs = IIf(IsNull(TBControleNF!Obs), "", TBControleNF!Obs)
    
    If TBControleNF!pedido_interno = True Then Faturamento_Vendas_PI = True Else Faturamento_Vendas_PI = False
End If
TBControleNF.Close
Frame1(6).Enabled = True
'ProcLimparTudo

If NF_alterada = True Then ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)

Exit Sub
tratar_erro:
    If Err.Number = 383 Then
        MsgBox ("Este destinatário não é compativel com esta CFOP, favor revisar."), vbExclamation
        GoTo 1
    End If
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaTotaisNota(ID_nota As Long)
On Error GoTo tratar_erro

If TxtID = "" Then Exit Sub
ProcLimpaCamposTotaisNota
Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_totais_nota where id_Nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBTotaisnota.EOF = False Then
    txtVLRMPA = IIf(IsNull(TBTotaisnota!VlrMPA), "0,00", Format(TBTotaisnota!VlrMPA, "###,##0.00"))
    txtVLRMOA = IIf(IsNull(TBTotaisnota!VLRMOA), "0,00", Format(TBTotaisnota!VLRMOA, "###,##0.00"))
    
    'Verifica se a empresa ou o fornecedor é SN e libera o campo de crédito
    If Faturamento_NF_Saida = True Then
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select Simples from empresa where codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
    Else
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select Simples from clientes where ID = " & txtIDCliente.Text & " and NomeRazao = '" & txt_Razao.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBFIltro.EOF = True Then
            Set TBFIltro = CreateObject("adodb.recordset")
            TBFIltro.Open "Select Simples from compras_fornecedores where IDCliente = " & txtIDCliente.Text & " and Nome_Razao = '" & txt_Razao.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
        End If
    End If
    If TBFIltro.EOF = False Then
        With txtICMSSN
            .Text = "0,00"
            .Locked = True
            .TabStop = False
            If TBFIltro!Simples = True Then
                If Faturamento_NF_Saida = True And (Opt_saida.Value = True Or Opt_entrada.Value = True And cbo_UF <> "EX") Then
                    Set TBProduto = CreateObject("adodb.recordset")
                    TBProduto.Open "Select ICMS_SN from tbl_Detalhes_Nota where ID_nota = " & TxtID & " and ICMS_SN IS NOT NULL and ICMS_SN > 0", Conexao, adOpenKeyset, adLockOptimistic
                    If TBProduto.EOF = False Then
                        .Text = IIf(IsNull(TBProduto!ICMS_SN), 0, Format(TBProduto!ICMS_SN, "###,##0.00"))
                    Else
                        ProcVerifImpostosSN Cmb_empresa.ItemData(Cmb_empresa.ListIndex), TabelaSN, Lbl2.Caption
                        .Text = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.00"))
                    End If
                    TBProduto.Close
                End If
                .Locked = False
                .TabStop = True
            End If
        End With
    End If
    TBFIltro.Close
    
    TBTotaisnota!Valor_total_ICMS_SN = IIf(txtValorICMSSN = "", 0, txtValorICMSSN)
    TBTotaisnota.Update
    
    txt_BaseICMS.Text = Format(TBTotaisnota!dbl_Base_ICMS, "###,##0.00")
    txt_VlrICMS.Text = Format(TBTotaisnota!dbl_Valor_ICMS, "###,##0.00")
    txt_baseICMSs.Text = Format(TBTotaisnota!dbl_Base_ICMS_Subst, "###,##0.00")
    txt_ICMSs.Text = Format(TBTotaisnota!dbl_Valor_ICMS_Subst, "###,##0.00")
    txt_VlrTotalProd.Text = Format(TBTotaisnota!dbl_Valor_Total_Produtos, "###,##0.00")
    txt_VlrFrete.Text = Format(TBTotaisnota!dbl_Valor_Frete, "###,##0.00")
    txt_vlrSeguro.Text = Format(TBTotaisnota!dbl_Valor_Seguro, "###,##0.00")
    txt_OutrasDisp.Text = Format(TBTotaisnota!dbl_Desp_Adicionais, "###,##0.00")
    txt_TotalIPI.Text = Format(TBTotaisnota!dbl_Valor_Total_IPI, "###,##0.00")
    Txt_valor_total_desc = Format(TBTotaisnota!Valor_total_desconto, "###,##0.00")
    Txt_valor_total_desc_SUFRAMA = Format(TBTotaisnota!Valor_total_desconto_SUFRAMA, "###,##0.00")
    txt_ValorNota.Text = Format(TBTotaisnota!dbl_Valor_Total_Nota, "###,##0.00")
    
    If NF_alterada = True Then
        txtVLRMPA.ForeColor = &HFF&
        txtVLRMOA.ForeColor = &HFF&
        txt_BaseICMS.ForeColor = &HFF&
        txt_VlrICMS.ForeColor = &HFF&
        txt_baseICMSs.ForeColor = &HFF&
        txt_ICMSs.ForeColor = &HFF&
        txt_VlrTotalProd.ForeColor = &HFF&
        txt_VlrFrete.ForeColor = &HFF&
        txt_vlrSeguro.ForeColor = &HFF&
        txt_OutrasDisp.ForeColor = &HFF&
        txt_TotalIPI.ForeColor = &HFF&
        Txt_valor_total_desc.ForeColor = &HFF&
        Txt_valor_total_desc_SUFRAMA.ForeColor = &HFF&
        txt_ValorNota.ForeColor = &HFF&
    Else
        txtVLRMPA.ForeColor = &H80000008
        txtVLRMOA.ForeColor = &H80000008
        txt_BaseICMS.ForeColor = &H80000008
        txt_VlrICMS.ForeColor = &H80000008
        txt_baseICMSs.ForeColor = &H80000008
        txt_ICMSs.ForeColor = &H80000008
        txt_VlrTotalProd.ForeColor = &H80000008
        txt_VlrFrete.ForeColor = &H80000008
        txt_vlrSeguro.ForeColor = &H80000008
        txt_OutrasDisp.ForeColor = &H80000008
        txt_TotalIPI.ForeColor = &H80000008
        Txt_valor_total_desc.ForeColor = &H80000008
        Txt_valor_total_desc_SUFRAMA.ForeColor = &H80000008
        txt_ValorNota.ForeColor = &H80000008
    End If
    
    'Serviços
    txtTotalservicos.Text = Format(IIf(IsNull(TBTotaisnota!dbl_Valor_Total_Nota_Serv) = False, TBTotaisnota!dbl_Valor_Total_Nota_Serv, 0), "###,##0.00")
    Txt_valorISS = Format(TBTotaisnota!dbl_valor_total_iss, "###,##0.00")
    txtTotal_PIS = Format(TBTotaisnota!Total_PIS_serv, "###,##0.00")
    txtTotal_Cofins = Format(TBTotaisnota!Total_Cofins_serv, "###,##0.00")
    txtTotal_CSLL = Format(TBTotaisnota!Total_CSLL_serv, "###,##0.00")
    txtTotal_INSS = Format(TBTotaisnota!Total_INSS_serv, "###,##0.00")
    txtTotal_IRRF = Format(TBTotaisnota!Total_IRRF_serv, "###,##0.00")
    txt_ValorNota2.Text = Format(IIf(IsNull(TBTotaisnota!dbl_Valor_Total_Nota) = False, TBTotaisnota!dbl_Valor_Total_Nota, 0), "###,##0.00")
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaDadosAdicionais()
On Error GoTo tratar_erro

txtDados_Corpo = ""
txtDados_DadosAdicionais = ""
Set TBCodigoDesc = CreateObject("adodb.recordset")
TBCodigoDesc.Open "Select * from tbl_dadosadicionais where id_nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBCodigoDesc.EOF = False And IsNull(TBCodigoDesc!mem_DadosAdicionais) = False Then
    txtDados_Corpo = IIf(IsNull(TBCodigoDesc!mem_corpo) = False, TBCodigoDesc!mem_corpo, "")
    txtDados_DadosAdicionais = IIf(IsNull(TBCodigoDesc!mem_DadosAdicionais) = False, TBCodigoDesc!mem_DadosAdicionais, "")
Else
    txtDados_DadosAdicionais = FunCarregaCampoDACFOP(TxtID)
    'If TBCodigoDesc.EOF = True Then
        'TBCodigoDesc.AddNew
        'TBCodigoDesc!IDNotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
        'TBCodigoDesc!ID_nota = txtid.Text
    'End If
    'TBCodigoDesc!mem_DadosAdicionais = txtDados_DadosAdicionais
    'TBCodigoDesc.Update
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Function FunCarregaCampoDACFOP(ID_nota As Long) As String
On Error GoTo tratar_erro

'Carrega os dados adicionais das CFOP dos produtos
Dados_acicionais = ""
Familiatext = ""

Set TBComponente = CreateObject("adodb.recordset")
TBComponente.Open "Select CFOP.txt_dados_adicionais, CFOP.IDCountCfop, NFP.ICMS_SN from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & ID_nota & " and CFOP.txt_dados_adicionais IS NOT NULL group by CFOP.txt_dados_adicionais,CFOP.IDCountCfop, NFP.ICMS_SN", Conexao, adOpenKeyset, adLockOptimistic
If TBComponente.EOF = False Then
    Do While TBComponente.EOF = False
        Dados_acicionais = IIf(IsNull(TBComponente!txt_dados_adicionais), "", TBComponente!txt_dados_adicionais)
        If txtIDCliente <> "0" And txtIDCliente <> "" And txttipocliente <> "E" And txttipocliente <> "F" And txttipocliente <> "J" Then
            Set TBCQ = CreateObject("adodb.recordset")
            TBCQ.Open "Select * from tbl_NaturezaOperacao_cliente where ID_CFOP = " & TBComponente!IDCountCfop & " and ID_cliente = " & txtIDCliente, Conexao, adOpenKeyset, adLockOptimistic
            If TBCQ.EOF = False Then Dados_acicionais = IIf(IsNull(TBCQ!dados_adicionais), "", TBCQ!dados_adicionais)
            TBCQ.Close
        End If
        If Dados_acicionais <> "" And Familiatext <> Dados_acicionais Then
            DATexto = Replace(Dados_acicionais, Left("@NfAliqICMSSN", 13), txtICMSSN)
            DATexto = Replace(DATexto, Left("@NfVlrTotal", 11), txt_ValorNota)
            DATexto = Replace(DATexto, Left("@NfVlrICMSSN", 12), Format(txtValorICMSSN, "###,##0.00"))
            If FunCarregaCampoDACFOP = "" Then
                FunCarregaCampoDACFOP = DATexto
            Else
                FunCarregaCampoDACFOP = FunCarregaCampoDACFOP & vbCrLf & DATexto
            End If
        End If
        Familiatext = Dados_acicionais
        TBComponente.MoveNext
    Loop
End If
TBComponente.Close

Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Function
End Function

Sub ProcLimpaCamposDuplicata()
On Error GoTo tratar_erro

cbo_PortBanco.ListIndex = -1
txt_Agencia = ""
txt_conta = ""
Txt_ID_duplicata = 0
txtvalorduplicata.Text = ""
Txt_vencimento.Value = Date
txt_Duplicata.Text = "___/___"
ProcCarregaComboForma
cmbtipo_conta.ListIndex = -1
'txt_Cond_Recebimento = ""
txtObs_Duplicata = ""
lst_Duplicata.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcLimpaCamposTransp()
On Error GoTo tratar_erro

txtidinttransp.Text = ""
Cmb_tipo_transp.ListIndex = -1
TxtTransp_nome.Text = ""
txtTransp_endereco.Text = ""
txtTransp_numero.Text = ""
'opt_emitente.Value = False
'opt_destinatario.Value = False
'Opt_terceiros.Value = False
'opt_sem_frete.Value = False
cmbFrete.ListIndex = -1
txtTransp_municipio.Text = ""
txtTransp_uf_Transportadora.ListIndex = -1
txtTransp_cnpj.Text = ""
With txtTransp_IE
    .Text = ""
    .Locked = False
    .TabStop = True
End With
txtTransp_Placa.Text = ""
txtTransp_uf.ListIndex = -1
txtTransp_qtd.Text = ""
ProcCarregaComboTranspMarcaEspecie Cmb_transp_especie, "E"
ProcCarregaComboTranspMarcaEspecie Cmb_transp_marca, "M"
Txt_numeracao = ""
txtTransp_pesoBruto.Text = ""
txtTransp_pesoliquido.Text = ""
Cmb_via_transp.ListIndex = -1
Txt_codigo_ANTT = ""
Cmb_frete_contratado.ListIndex = -1
chkSedex.Value = 0
Chk_enviar_XML_transp.Value = 0
lst_DadosTransp.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaBanco()
On Error GoTo tratar_erro

cbo_PortBanco.Clear
Set TBOrdem = CreateObject("adodb.recordset")
TBOrdem.Open "Select txt_descricao, Id from tbl_instituicoes Where Bloqueado = 'False' and DtValidacao IS NOT NULL Group by txt_descricao, Id", Conexao, adOpenKeyset, adLockOptimistic
If TBOrdem.EOF = False Then
    Do While TBOrdem.EOF = False
        cbo_PortBanco.AddItem TBOrdem!Txt_descricao
        cbo_PortBanco.ItemData(cbo_PortBanco.NewIndex) = TBOrdem!ID
        TBOrdem.MoveNext
    Loop
End If
TBOrdem.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cbo_PortBanco_Click()
On Error GoTo tratar_erro

Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * from tbl_instituicoes where txt_descricao = '" & cbo_PortBanco.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    txt_Agencia.Text = IIf(IsNull(TBLISTA!txt_Agencia), "", TBLISTA!txt_Agencia)
    txt_conta.Text = IIf(IsNull(TBLISTA!txt_conta), "", TBLISTA!txt_conta)
End If
TBLISTA.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaDuplicatas()
On Error GoTo tratar_erro
    
If cmb_tipopagto.Text = "" And txt_Cond_Recebimento.Text = "" Then condicao_duplicata = "Alterar"
ProcCarregaBanco

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * From tbl_Detalhes_Recebimento WHERE id_nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    NomeCampo = "o banco"
    If IsNull(TBAbrir!txt_Portador_Banco) = False And TBAbrir!txt_Portador_Banco <> "" Then cbo_PortBanco = TBAbrir!txt_Portador_Banco
    NomeCampo = "a forma de pagamento/recebimento"
    If IsNull(TBAbrir!txt_tipopagto) = False And TBAbrir!txt_tipopagto <> "" Then cmb_tipopagto = TBAbrir!txt_tipopagto
1:
    txt_Agencia = IIf(IsNull(TBAbrir!txt_Agencia) = True, "", TBAbrir!txt_Agencia)
    txt_conta = IIf(IsNull(TBAbrir!txt_conta) = True, "", TBAbrir!txt_conta)
    txt_Cond_Recebimento = IIf(IsNull(TBAbrir!txt_Cond_Recebimento) = True, "", TBAbrir!txt_Cond_Recebimento)
Else
    If Opt_saida.Value = True Then
        Set TBCarteira = CreateObject("adodb.recordset")
        TBCarteira.Open "Select * from tbl_proposta_nota where id_nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
        If TBCarteira.EOF = False Then
            Set TBProposta = CreateObject("adodb.recordset")
            TBProposta.Open "Select cotacao from vendas_proposta where ncotacao = '" & TBCarteira!Proposta & "' and revisao = " & TBCarteira!Revisao & " and Status = 'FATURADA' or ncotacao = '" & TBCarteira!Proposta & "' and revisao = " & TBCarteira!Revisao & " and Status = 'FATURADA PARCIAL'", Conexao, adOpenKeyset, adLockOptimistic
            If TBProposta.EOF = False Then
                Set TBVendas = CreateObject("adodb.recordset")
                TBVendas.Open "Select * from vendas_comercial where cotacao = " & TBProposta!Cotacao, Conexao, adOpenKeyset, adLockOptimistic
                If TBVendas.EOF = False Then
                    txt_Cond_Recebimento.Text = IIf(IsNull(TBVendas!condicoes), 0, TBVendas!condicoes)
                End If
                TBVendas.Close
            End If
            TBProposta.Close
        Else
            If txttipocliente <> "J" And txttipocliente <> "P" And txttipocliente <> "E" Then
                Set TBProposta = CreateObject("adodb.recordset")
                TBProposta.Open "Select * from Clientes_DadosComerciais where IDCliente = " & txtIDCliente.Text, Conexao, adOpenKeyset, adLockOptimistic
                If TBProposta.EOF = False Then
                    txt_Cond_Recebimento.Text = IIf(IsNull(TBProposta!condicoes), 0, TBProposta!condicoes)
                End If
                TBProposta.Close
            End If
        End If
        TBCarteira.Close
    Else
        Set TBPedido = CreateObject("adodb.recordset")
        TBPedido.Open "Select Compras_pedido.idpedido FROM tbl_proposta_nota INNER JOIN Compras_pedido ON Compras_pedido.Pedido = tbl_proposta_nota.proposta where tbl_proposta_nota.id_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
        If TBPedido.EOF = False Then
            Set TBCompras = CreateObject("adodb.recordset")
            TBCompras.Open "Select Condicoes from Compras_comercial where Idpedido = " & TBPedido!IDpedido, Conexao, adOpenKeyset, adLockOptimistic
            If TBCompras.EOF = False Then
                txt_Cond_Recebimento.Text = IIf(IsNull(TBCompras!condicoes), 0, TBCompras!condicoes)
            End If
            TBCompras.Close
        Else
            If txttipocliente <> "J" And txttipocliente <> "P" And txttipocliente <> "E" Then
                Set TBProposta = CreateObject("adodb.recordset")
                TBProposta.Open "Select * from Clientes_DadosComerciais where IDCliente = " & txtIDCliente.Text, Conexao, adOpenKeyset, adLockOptimistic
                If TBProposta.EOF = False Then
                    txt_Cond_Recebimento.Text = IIf(IsNull(TBProposta!condicoes), 0, TBProposta!condicoes)
                End If
                TBProposta.Close
            End If
        End If
        TBPedido.Close
        
        'Carrega OBS do pedido
        Set TBVendas = CreateObject("adodb.recordset")
        TBVendas.Open "Select CC.observacoes from (tbl_proposta_nota P INNER JOIN Compras_pedido CP ON P.Proposta = CP.Pedido) INNER JOIN compras_comercial CC ON CC.IDpedido = CP.IDpedido where P.ID_nota = " & TxtID & " and CC.Obs_financeiro = 'True'", Conexao, adOpenKeyset, adLockOptimistic
        If TBVendas.EOF = False Then
            txtObs_Duplicata = IIf(IsNull(TBVendas!observacoes), "", TBVendas!observacoes)
        End If
        TBVendas.Close
    End If
    
    'Carrega banco e tipo documento do cliente ou fornecedor
    If txttipocliente = "J" Or txttipocliente = "F" Then
        Set TBVendas = CreateObject("adodb.recordset")
        TBVendas.Open "Select banco, Tipo_doc from compras_fornecedores where IDCliente = " & txtIDCliente & " AND (banco IS NOT NULL or Tipo_doc IS NOT NULL)", Conexao, adOpenKeyset, adLockOptimistic
        If TBVendas.EOF = False Then
            NomeCampo = "portador/banco"
            If TBVendas!Banco <> "" Then cbo_PortBanco.Text = TBVendas!Banco
            NomeCampo = "tipo do documento"
            If TBVendas!Tipo_doc <> "" Then cmbtipo_conta.Text = TBVendas!Tipo_doc
        End If
        TBVendas.Close
    ElseIf txttipocliente = "JR" Or txttipocliente = "JP" Or txttipocliente = "FR" Or txttipocliente = "FP" Then
        Set TBVendas = CreateObject("adodb.recordset")
        TBVendas.Open "Select banco, Tipo_doc from clientes where IDCliente = " & txtIDCliente & " AND (banco IS NOT NULL or Tipo_doc IS NOT NULL)", Conexao, adOpenKeyset, adLockOptimistic
        If TBVendas.EOF = False Then
            NomeCampo = "portador/banco"
            If TBVendas!Banco <> "" Then cbo_PortBanco.Text = TBVendas!Banco
            NomeCampo = "tipo do documento"
            If TBVendas!Tipo_doc <> "" Then cmbtipo_conta.Text = TBVendas!Tipo_doc
        End If
        TBVendas.Close
    End If
End If
2:
ProcCarregaListaDuplicatas IIf(TxtID = "", 0, TxtID)
TBAbrir.Close

Exit Sub
tratar_erro:
    If Err.Number = "383" Then
        MsgBox ("Não foi encontrado " & NomeCampo & " desta nota."), vbExclamation
        If NomeCampo = "o banco" Or NomeCampo = "a forma de pagamento/recebimento" Then GoTo 1 Else GoTo 2
    End If
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaListaServicos()
On Error GoTo tratar_erro

If TxtID = "" Then Exit Sub
qtdeliberada = 0 'Qtde de serviços
TotalServicos = 0

'Impostos
Valor_PIS_Serv = 0
Valor_Cofins_Serv = 0
Valor_CSLL_Serv = 0
TotalISS = 0
Valor_INSS_Serv = 0
Valor_IRPJ_Serv = 0
Valor_IRRF_Serv = 0
Valor_DAS_Serv = 0
Vlr_total_aprox_tributos_serv = 0

If listaProdutos.ListItems.Count = 0 Then
    TotalProduto = 0
    TotalIPI = 0
    Valor_DAS = 0
    Vlr_total_aprox_tributos_prod = 0
End If

Listaservicos.ListItems.Clear
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select NFS.*, TTN.DAS, CFOP.ID_CFOP, CFOP.Retem from (tbl_Detalhes_Nota NFS LEFT JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFS.ID_CFOP) LEFT JOIN tbl_Totais_Nota TTN ON TTN.ID_nota = NFS.id_nota where NFS.id_nota = " & TxtID.Text & " and NFS.Tipo = 'S' order by NFS.Int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    If Atualizacao = False Then
        TBProduto.MoveLast
        PBLista(2).Min = 0
        PBLista(2).Max = TBProduto.RecordCount
        PBLista(2).Value = 1
        Contador = 0
        TBProduto.MoveFirst
    End If
    Do While TBProduto.EOF = False
        With Listaservicos.ListItems
            .Add , , TBProduto!Int_codigo
            .Item(.Count).SubItems(1) = IIf(IsNull(TBProduto!int_Cod_Produto), "", TBProduto!int_Cod_Produto)
            .Item(.Count).SubItems(2) = IIf(IsNull(TBProduto!ID_CFOP), "", TBProduto!ID_CFOP)
            .Item(.Count).SubItems(3) = IIf(IsNull(TBProduto!Txt_descricao), "", TBProduto!Txt_descricao)
            .Item(.Count).SubItems(4) = IIf(IsNull(TBProduto!txt_Unid), "", TBProduto!txt_Unid)
            .Item(.Count).SubItems(5) = IIf(IsNull(TBProduto!Unidade_com), "", TBProduto!Unidade_com)
            .Item(.Count).SubItems(6) = IIf(IsNull(TBProduto!int_Qtd), "", Format(TBProduto!int_Qtd, "###,##0.0000"))
            qtdeliberada = qtdeliberada + IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd)
            .Item(.Count).SubItems(7) = IIf(IsNull(TBProduto!dbl_ValorUnitario), "", Format(TBProduto!dbl_ValorUnitario, "###,##0.0000000000"))
            .Item(.Count).SubItems(8) = IIf(IsNull(TBProduto!dbl_ValorTotal), "", Format(TBProduto!dbl_ValorTotal, "###,##0.00"))
            .Item(.Count).SubItems(9) = IIf(IsNull(TBProduto!ISS), "", TBProduto!ISS)
            .Item(.Count).SubItems(10) = IIf(IsNull(TBProduto!VlrISS), "", Format(TBProduto!VlrISS, "###,##0.00"))
            .Item(.Count).SubItems(11) = IIf(IsNull(TBProduto!Ordem), "", TBProduto!Ordem)
            .Item(.Count).SubItems(12) = IIf(IsNull(TBProduto!PCCliente), "", TBProduto!PCCliente)
            TotalServicos = TotalServicos + TBProduto!dbl_ValorTotal
            
            'Impostos
            Valor_DAS_Serv = Valor_DAS_Serv + Format(((TBProduto!dbl_ValorTotal * IIf(IsNull(TBProduto!DAS), 0, TBProduto!DAS)) / 100), "###,##0.00")
            If IsNull(TBProduto!Total_PIS_serv) = False Then Valor_PIS_Serv = Valor_PIS_Serv + TBProduto!Total_PIS_serv
            If IsNull(TBProduto!Total_Cofins_serv) = False Then Valor_Cofins_Serv = Valor_Cofins_Serv + TBProduto!Total_Cofins_serv
            If IsNull(TBProduto!Total_CSLL_serv) = False Then Valor_CSLL_Serv = Valor_CSLL_Serv + TBProduto!Total_CSLL_serv
            TotalISS = TotalISS + IIf(IsNull(TBProduto!VlrISS), 0, TBProduto!VlrISS)
            If IsNull(TBProduto!Total_INSS_serv) = False Then Valor_INSS_Serv = Valor_INSS_Serv + TBProduto!Total_INSS_serv
            If IsNull(TBProduto!Total_IRPJ_serv) = False Then Valor_IRPJ_Serv = Valor_IRPJ_Serv + TBProduto!Total_IRPJ_serv
            If IsNull(TBProduto!Total_IRRF_serv) = False Then Valor_IRRF_Serv = Valor_IRRF_Serv + TBProduto!Total_IRRF_serv
            Vlr_total_aprox_tributos_serv = Vlr_total_aprox_tributos_serv + IIf(IsNull(TBProduto!Valor_aprox_tributos), 0, TBProduto!Valor_aprox_tributos)
            
            TBProduto.MoveNext
            If Atualizacao = False Then
                Contador = Contador + 1
                PBLista(2).Value = Contador
            End If
        End With
    Loop
Else
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select * from tbl_Detalhes_Nota where id_nota = " & TxtID.Text & " and Tipo = 'P'", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = True Then
        ProcLimpaCamposTotaisNota
    End If
End If
TBProduto.Close
txtTotalservicos.Text = Format(TotalServicos, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaLista()
On Error GoTo tratar_erro

If TxtID = "" Then Exit Sub
qtdeliberar = 0 'Qtde de produtos
TotalServicos = 0
TotalProduto = 0
Valores = 0
PV = 0
PV1 = 0
VlrTotalRetorno = 0
VlrTotalRetornoNF = 0

'Impostos
BASECALCULO = 0 'Valor total da base de calculo do ICMS
Total_ICMS = 0 'Valor total do ICMS

BC = 0
TTICMS = 0
Calcula_ICMS = 0
TotalBCICMSCST = 0
BCICMSCST = 0
TotalICMSCST = 0
ICMSCST = 0
TotalIPI = 0
Valor_PIS_Prod = 0
Valor_Cofins_Prod = 0
Valor_CSLL_Prod = 0
Valor_IRPJ_Prod = 0
Valor_Retencao_PIS = 0
Valor_Retencao_Cofins = 0
VlrICMS_suframa = 0
ICMSOUTROS = 0
Frete = 0
Seguro = 0
Acessorias = 0
QuantsolicitadoN2 = 0 'Desconto
Valor_total = 0
Valor_DAS = 0
Qtd = 0
Vlr_total_aprox_tributos_prod = 0
'ValorICMS_desonerado = 0
ValorTotalFCP = 0
ValorTotalICMSINTUFDEST = 0
ValorTotalICMSINTUFREM = 0

Credito_ICMS = 0
ValorPorc = 0 'Vlr MPA

listaProdutos.ListItems.Clear

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select NFP.*, TTN.DAS, CST.Valor_BC, CST.Valor_ICMS, CST.Valor_ICMS_SN, CST.Valor_BC_ST, CST.Valor_ICMS_ST, CST.Valor_ICMS_FCP, CST.Valor_ICMS_INT_UF_DEST, CST.Valor_ICMS_INT_UF_REM from (tbl_Detalhes_Nota NFP LEFT JOIN tbl_Detalhes_Nota_CST_ICMS CST ON CST.ID_item = NFP.Int_codigo) LEFT JOIN tbl_Totais_Nota TTN ON TTN.ID_nota = NFP.ID_nota where NFP.id_nota = " & TxtID.Text & " and NFP.Tipo = 'P' order by NFP.int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    If Atualizacao = False Then
        PBLista(1).Min = 0
        PBLista(1).Max = TBProduto.RecordCount
        PBLista(1).Value = 1
        Contador = 0
    End If
    
    Do While TBProduto.EOF = False
        Frete = Frete + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
        Seguro = Seguro + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro)
        Acessorias = Acessorias + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)
        QuantsolicitadoN2 = QuantsolicitadoN2 + IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)
    
        ProcControleImposto IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), IIf(txtIDCliente = "", 0, txtIDCliente)
        Valores = IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario) * TBProduto!int_Qtd
        
        With listaProdutos.ListItems
            .Add , , TBProduto!Int_codigo
            .Item(.Count).SubItems(1) = IIf(IsNull(TBProduto!int_Cod_Produto), "", TBProduto!int_Cod_Produto)
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select ID_CFOP from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                .Item(.Count).SubItems(2) = IIf(IsNull(TBAbrir!ID_CFOP), "", TBAbrir!ID_CFOP)
            End If
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select IDIntClasse from tbl_ClassificacaoFiscal where Idclass = " & IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                .Item(.Count).SubItems(3) = IIf(IsNull(TBAbrir!IDIntClasse), "", TBAbrir!IDIntClasse)
            End If
            TBAbrir.Close
            
            .Item(.Count).SubItems(4) = IIf(IsNull(TBProduto!Txt_descricao), "", TBProduto!Txt_descricao)
            .Item(.Count).SubItems(5) = IIf(IsNull(TBProduto!txt_Unid), "", TBProduto!txt_Unid)
            .Item(.Count).SubItems(6) = IIf(IsNull(TBProduto!Unidade_com), "", TBProduto!Unidade_com)
            .Item(.Count).SubItems(7) = IIf(IsNull(TBProduto!int_Qtd), "", Format(TBProduto!int_Qtd, "###,##0.0000"))
            .Item(.Count).SubItems(8) = IIf(IsNull(TBProduto!dbl_ValorUnitario), "", Format(TBProduto!dbl_ValorUnitario, "###,##0.0000000000"))
            .Item(.Count).SubItems(9) = Format(TBProduto!dbl_ValorUnitario * TBProduto!int_Qtd, "###,##0.00")
            .Item(.Count).SubItems(10) = IIf(IsNull(TBProduto!int_ICMS), "", TBProduto!int_ICMS)
            
            If IsNull(TBProduto!Valor_ICMS) = False Then
                If TBProduto!Valor_ICMS_ST = 0 Then ValorParcial = TBProduto!Valor_ICMS + TBProduto!Valor_ICMS_SN Else ValorParcial = TBProduto!Valor_ICMS_ST
                .Item(.Count).SubItems(11) = Format(ValorParcial, "###,##0.00")
            End If
            
            .Item(.Count).SubItems(12) = IIf(IsNull(TBProduto!int_IPI), "", TBProduto!int_IPI)
            .Item(.Count).SubItems(13) = IIf(IsNull(TBProduto!dbl_valoripi), "", Format(TBProduto!dbl_valoripi, "###,##0.00"))
            .Item(.Count).SubItems(14) = IIf(IsNull(TBProduto!Ordem), "", TBProduto!Ordem)
            .Item(.Count).SubItems(15) = IIf(IsNull(TBProduto!PCCliente), "", TBProduto!PCCliente)
            .Item(.Count).SubItems(16) = IIf(IsNull(TBProduto!Valor_frete), "0,00", Format(TBProduto!Valor_frete, "###,##0.00"))
            .Item(.Count).SubItems(17) = IIf(IsNull(TBProduto!Valor_seguro), "0,00", Format(TBProduto!Valor_seguro, "###,##0.00"))
            .Item(.Count).SubItems(18) = IIf(IsNull(TBProduto!Valor_acessorias), "0,00", Format(TBProduto!Valor_acessorias, "###,##0.00"))
            .Item(.Count).SubItems(19) = Format(IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto) + IIf(IsNull(TBProduto!Valor_desconto_SUFRAMA), 0, TBProduto!Valor_desconto_SUFRAMA), "###,##0.00")
            .Item(.Count).SubItems(20) = IIf(IsNull(TBProduto!Valor_ICMS_INT_UF_dest), "0,00", Format(TBProduto!Valor_ICMS_INT_UF_dest, "###,##0.00"))
            .Item(.Count).SubItems(21) = IIf(IsNull(TBProduto!Valor_ICMS_INT_UF_rem), "0,00", Format(TBProduto!Valor_ICMS_INT_UF_rem, "###,##0.00"))
            .Item(.Count).SubItems(22) = IIf(IsNull(TBProduto!Valor_ICMS_FCP), "0,00", Format(TBProduto!Valor_ICMS_FCP, "###,##0.00"))
            
            qt = 0
            Set TBFIltro = CreateObject("adodb.recordset")
            TBFIltro.Open "Select ISNULL(SUM(ECEV.Qtde_empenhada), 0) as qt from (tbl_Detalhes_Nota_pedidos NFPP INNER JOIN Estoque_Controle_Empenho_Vendas ECEV ON ECEV.ID_carteira = NFPP.ID_carteira) INNER JOIN Estoque_controle EC ON EC.IDestoque = ECEV.ID_estoque where NFPP.ID_prod_NF = " & TBProduto!Int_codigo & " and EC.Desenho = '" & TBProduto!int_Cod_Produto & "' and ECEV.Qtde_empenhada - ISNULL(ECEV.Qtde_saida, 0) > 0", Conexao, adOpenKeyset, adLockOptimistic
            If TBFIltro.EOF = False Then
                'Verifica qtde. faturada
                Quant = 0
                Set TBFI = CreateObject("adodb.recordset")
                TBFI.Open "Select ISNULL(SUM(NFP1.int_Qtd), 0) AS Quant from tbl_Dados_Nota_Fiscal AS NF RIGHT OUTER JOIN tbl_Detalhes_Nota AS NFP1 INNER JOIN tbl_Detalhes_Nota_pedidos AS NFPP1 ON NFP1.Int_codigo = NFPP1.ID_prod_NF INNER JOIN Estoque_Controle AS EC INNER JOIN Estoque_Controle_Empenho_Vendas AS ECEV ON EC.IdEstoque = ECEV.ID_estoque INNER JOIN tbl_Detalhes_Nota_pedidos AS NFPP ON ECEV.ID_carteira = NFPP.ID_carteira AND EC.Desenho = NFPP.Codinterno ON NFPP1.ID_carteira = ECEV.ID_carteira AND NFPP1.Codinterno = EC.Desenho AND NFPP1.ID_prod_NF = NFPP.ID_prod_NF ON NF.ID = NFP1.ID_Nota where NFPP.ID_prod_NF = " & TBProduto!Int_codigo & " and NFPP.Codinterno = '" & TBProduto!int_Cod_Produto & "' and NF.DtValidacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                If TBFI.EOF = False Then
                    Quant = TBFI!Quant
                End If
                qt = IIf(Formulario = "Estoque/Ordem de faturamento", TBFIltro!qt - Quant, TBFIltro!qt)
                
                If qt <= 0 Then
                    StatusEmpenho = "Não"
                ElseIf qt >= TBProduto!int_Qtd Then
                        StatusEmpenho = "Sim"
                    Else
                        StatusEmpenho = "Parcial"
                End If
            End If
            TBFIltro.Close
            .Item(.Count).SubItems(23) = StatusEmpenho
            
            If TBProduto!Retorno = False Or TBProduto!Retorno = True And Soma_retorno_total_NF = True Then
                TotalProduto = TotalProduto + Format(IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario) * TBProduto!int_Qtd, "###,##0.00")
                Valor_total = Valores + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)
                
                'Impostos
                Valor_DAS = Valor_DAS + Format(((Valor_total * IIf(IsNull(TBProduto!DAS), 0, TBProduto!DAS)) / 100), "###,##0.00")
                TotalIPI = TotalIPI + IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi)
                If IsNull(TBProduto!Valor_ICMS_SN) = True Or TBProduto!Valor_ICMS_SN = 0 Or Aplicacao = "T" Then
                    BASECALCULO = BASECALCULO + IIf(IsNull(TBProduto!Valor_BC), 0, TBProduto!Valor_BC)
                    Total_ICMS = Total_ICMS + IIf(IsNull(TBProduto!Valor_ICMS), 0, TBProduto!Valor_ICMS)
                End If
                TotalBCICMSCST = TotalBCICMSCST + IIf(IsNull(TBProduto!Valor_BC_ST), 0, TBProduto!Valor_BC_ST)
                TotalICMSCST = TotalICMSCST + IIf(IsNull(TBProduto!Valor_ICMS_ST), 0, TBProduto!Valor_ICMS_ST)
                
                ValorTotalFCP = ValorTotalFCP + IIf(IsNull(TBProduto!Valor_ICMS_FCP), 0, TBProduto!Valor_ICMS_FCP)
                ValorTotalICMSINTUFDEST = ValorTotalICMSINTUFDEST + IIf(IsNull(TBProduto!Valor_ICMS_INT_UF_dest), 0, TBProduto!Valor_ICMS_INT_UF_dest)
                ValorTotalICMSINTUFREM = ValorTotalICMSINTUFREM + IIf(IsNull(TBProduto!Valor_ICMS_INT_UF_rem), 0, TBProduto!Valor_ICMS_INT_UF_rem)
                
                If IsNull(TBProduto!Total_PIS_prod) = False Then Valor_PIS_Prod = Valor_PIS_Prod + TBProduto!Total_PIS_prod
                If IsNull(TBProduto!Total_Cofins_prod) = False Then Valor_Cofins_Prod = Valor_Cofins_Prod + TBProduto!Total_Cofins_prod
                If IsNull(TBProduto!Total_CSLL_prod) = False Then Valor_CSLL_Prod = Valor_CSLL_Prod + TBProduto!Total_CSLL_prod
                If IsNull(TBProduto!Total_IRPJ_prod) = False Then Valor_IRPJ_Prod = Valor_IRPJ_Prod + TBProduto!Total_IRPJ_prod
                
                'Soma retenção de PIS/Cofins
                Valor_Retencao_PIS = Valor_Retencao_PIS + IIf(IsNull(TBProduto!Valor_Retencao_PIS), 0, TBProduto!Valor_Retencao_PIS)
                Valor_Retencao_Cofins = Valor_Retencao_Cofins + IIf(IsNull(TBProduto!Valor_Retencao_Cofins), 0, TBProduto!Valor_Retencao_Cofins)
                            
                'Soma o ICMS do suframa
                VlrICMS_suframa = VlrICMS_suframa + IIf(IsNull(TBProduto!Valor_desconto_SUFRAMA), 0, TBProduto!Valor_desconto_SUFRAMA)
                    
                If NF_enviada = False And NFe_liberada = False Then ProcReacalculaICMSIPI
                If TBProduto!Remessa = False Then qtdeliberar = qtdeliberar + IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd)
                ValorPorc = ValorPorc + IIf(IsNull(TBProduto!VlrMPA), 0, TBProduto!VlrMPA)
            Else
                VlrTotalRetorno = VlrTotalRetorno + Valores
                If Soma_retorno_total_NF = False Then VlrTotalRetornoNF = VlrTotalRetornoNF + Valores
            End If
            
            Vlr_total_aprox_tributos_prod = Vlr_total_aprox_tributos_prod + IIf(IsNull(TBProduto!Valor_aprox_tributos), 0, TBProduto!Valor_aprox_tributos)
        End With
        TBProduto.MoveNext
        If Atualizacao = False Then
            Contador = Contador + 1
            PBLista(1).Value = Contador
        End If
    Loop
Else
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select * from tbl_Detalhes_Nota where id_nota = " & TxtID.Text & " and Tipo = 'S'", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = True Then
        ProcLimpaCamposTotaisNota
    End If
End If
TBProduto.Close
If NF_enviada = False And NFe_liberada = False And NF_alterada = False Then
    txt_VlrTotalProd.Text = Format(TotalProduto, "###,##0.00")
    txtVLRMPA = Format(ValorPorc, "###,##0.00")
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcReacalculaICMSIPI()
On Error GoTo tratar_erro

Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select * from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then
'    If TBFI!ID_CFOP = "1.604" Or TBFI!ID_CFOP = "3.101" Or TBFI!ID_CFOP = "3.102" Or Faturamento_NF_Saida = False And MPA = True And TBProduto!VlrMPA > 0 Or NF_alterada = True Then
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select * from tbl_Detalhes_Nota_NFe where ID_item = " & TBProduto!Int_codigo & " and Documento_importacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
    If TBFIltro.EOF = False And (TBFI!ID_CFOP = "3.101" Or TBFI!ID_CFOP = "3.102") Or TBFI!ID_CFOP = "1.604" Or NF_alterada = True Then
        PV = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
        Valor1 = IIf(txt_VlrTotalProd = "", 0, txt_VlrTotalProd)
        If Valor1 > 0 Then Valor2 = (PV * 100) / Valor1 Else Valor2 = 0
        
        If TBFIltro.EOF = False Then
            If TBFIltro!Salvar_valores_produto = False Then
                'Frete
                Valor3 = IIf(txt_VlrFrete = "", 0, txt_VlrFrete)
                If Valor2 > 0 Then TBProduto!Valor_frete = Format((Valor3 * Valor2) / 100, "###,##0.00")
                'Seguro
                Valor3 = IIf(txt_vlrSeguro = "", 0, txt_vlrSeguro)
                If Valor2 > 0 Then TBProduto!Valor_seguro = Format((Valor3 * Valor2) / 100, "###,##0.00")
                'Outr. desp.
                Valor3 = IIf(txt_OutrasDisp = "", 0, txt_OutrasDisp)
                If Valor2 > 0 Then TBProduto!Valor_acessorias = Format((Valor3 * Valor2) / 100, "###,##0.00")
                TBProduto.Update
            End If
        End If
                
        TextoCSTICMS = IIf(Len(TBProduto!txt_CST) = 3, Right(TBProduto!txt_CST, 2), Right(TBProduto!txt_CST, 3))
        If TextoCSTICMS = "00" Or TextoCSTICMS = "10" Or TextoCSTICMS = "20" Or TextoCSTICMS = "51" Or TextoCSTICMS = "70" Or TextoCSTICMS = "90" Or TextoCSTICMS = "101" Or TextoCSTICMS = "102" Or TextoCSTICMS = "201" Or TextoCSTICMS = "202" Or TextoCSTICMS = "900" Then
            If TBFIltro.EOF = False Then
                Valor1 = IIf(IsNull(TBFIltro!Valor_bc_ICMS), 0, TBFIltro!Valor_bc_ICMS)
                ValorICMS = IIf(IsNull(TBFIltro!Valor_ICMS), 0, TBFIltro!Valor_ICMS)
            Else
                If TemICMS = "SIM" Then ICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS) Else ICMS = 0
                If TextoCSTICMS = "10" Or TextoCSTICMS = "70" Or TextoCSTICMS = "201" Or TextoCSTICMS = "202" Then
                    Valor3 = IIf(txt_baseICMSs = "", 0, txt_baseICMSs)
                Else
                    Valor3 = IIf(txt_BaseICMS = "", 0, txt_BaseICMS)
                    If Valor2 > 0 Then Valor1 = Format((Valor3 * Valor2) / 100, "###,##0.00")
                End If
                
                'Valor do ICMS
                If TextoCSTICMS = "10" Or TextoCSTICMS = "70" Or TextoCSTICMS = "201" Or TextoCSTICMS = "202" Then
                    Valor1 = IIf(txt_baseICMSs = "", 0, txt_baseICMSs)
                    ValorICMS = IIf(txt_ICMSs = "", 0, txt_ICMSs)
                ElseIf Valor1 > 0 Then
                        ValorICMS = Format(FunCalulaArredondaICMS(ICMS, Valor1, IIf(TBProduto!NaoArredondar = True, True, False)), "###,##0.00")
                    Else
                        Valor1 = IIf(txt_BaseICMS = "", 0, txt_BaseICMS)
                        ValorICMS = IIf(txt_VlrICMS = "", 0, txt_VlrICMS)
                End If
            End If
            TBFIltro.Close
            
            NovoValor = Replace(Valor1, ",", ".")
            NovoValor1 = Replace(ValorICMS, ",", ".")
            If TextoCSTICMS = "10" Or TextoCSTICMS = "70" Or TextoCSTICMS = "201" Or TextoCSTICMS = "202" Then
                NomeCampo1 = "Valor_BC_ST = " & NovoValor
                NomeCampo2 = "Valor_ICMS_ST = " & NovoValor1
                NomeCampo3 = "Valor_BC = 0"
                NomeCampo4 = "Valor_ICMS = 0"
            Else
                NomeCampo1 = "Valor_BC_ST = 0"
                NomeCampo2 = "Valor_ICMS_ST = 0"
                NomeCampo3 = "Valor_BC = " & NovoValor
                NomeCampo4 = "Valor_ICMS = " & NovoValor1
            End If
            
            Conexao.Execute "Update tbl_Detalhes_Nota_CST_ICMS Set " & NomeCampo1 & " , " & NomeCampo2 & ", " & NomeCampo3 & ", " & NomeCampo4 & " where id_item = " & TBProduto!Int_codigo
        End If
        
        Credito_ICMS = ValorICMS
        
        If NF_alterada = True And (TBProduto!CST_IPI = "00" Or TBProduto!CST_IPI = "49" Or TBProduto!CST_IPI = "50" Or TBProduto!CST_IPI = "99") Then
            'Base do IPI
            If TBFI!ID_CFOP = "3.101" Or TBFI!ID_CFOP = "3.102" Then
                If TBProduto!int_IPI > 0 Then Valor1 = Format((TBProduto!dbl_valoripi / TBProduto!int_IPI), "###,##0.00") * 100 Else Valor1 = 0
            Else
                Valor1 = IIf(txt_VlrTotalProd = "", 0, txt_VlrTotalProd)
                If Valor1 <> 0 Then
                    ValorIPI = Valor1 / IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
                    Valor1 = Format(IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) * ValorIPI, "###,##0.00")
                Else
                    ValorIPI = IIf(txt_TotalIPI = "", 0, txt_TotalIPI)
                    If TBProduto!int_IPI > 0 Then Valor1 = Format((ValorIPI * 100) / TBProduto!int_IPI, "###,##0.00")
                End If
            End If
            Valor1 = Format(Valor1 / TBProduto.RecordCount, "###,##0.00")
            NovoValor = Replace(Valor1, ",", ".")
            Conexao.Execute "Update tbl_Detalhes_Nota_CST_IPI Set Valor_BC = " & NovoValor & " where id_item = " & TBProduto!Int_codigo
        End If
    Else
        'Verif. credito de ICMS se a nota for entrada
        If Opt_entrada.Value = True Then
            Set TBItem = CreateObject("adodb.recordset")
            TBItem.Open "Select * from projproduto where Desenho = '" & TBProduto!int_Cod_Produto & "' and Credita_ICMS = 'True'", Conexao, adOpenKeyset, adLockOptimistic
            If TBItem.EOF = False Then
                If Total_ICMS <> 0 Then
                    Credito_ICMS = Total_ICMS
                Else
                    Set TBItem = CreateObject("adodb.recordset")
                    TBItem.Open "Select Valor_ICMS_SN from tbl_Detalhes_Nota_CST_ICMS where ID_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
                    If TBItem.EOF = False Then
                        Credito_ICMS = Credito_ICMS + IIf(IsNull(TBItem!Valor_ICMS_SN), 0, TBItem!Valor_ICMS_SN)
                    End If
                End If
            End If
            TBItem.Close
        End If
    End If
End If
TBFI.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcAtualizaCST(IDempresa As Integer, IDCliente As Long, NomeCliente As String, UF As String, Consumidor As Integer, Finalidade As Integer)
On Error GoTo tratar_erro

CST_ICMS = False
CST_IPI = False
CST_PIS = False
CST_Cofins = False

'ICMS
If IsNull(TBProduto!txt_CST) = False And TBProduto!txt_CST <> "" Then
    InicioCST = Left(TBProduto!txt_CST, 1)
    If Len(TBProduto!txt_CST) = 4 Then FimCST = Right(TBProduto!txt_CST, 3) Else FimCST = Right(TBProduto!txt_CST, 2)
    
    CST_ICMS = True
    CST_Cofins = False
    CST_IPI = False
    CST_PIS = False
    
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_ICMS where id_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    ProcEnviadadosAtualizaCST IDempresa, IDCliente, NomeCliente, UF, Consumidor, Finalidade
    TBCST.Close
End If

'IPI
If IsNull(TBProduto!CST_IPI) = False And TBProduto!CST_IPI <> "" Then
    FimCST = TBProduto!CST_IPI
    CST_ICMS = False
    CST_Cofins = False
    CST_IPI = True
    CST_PIS = False
    
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_IPI where id_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    ProcEnviadadosAtualizaCST IDempresa, IDCliente, NomeCliente, UF, Consumidor, Finalidade
    TBCST.Close
End If

'PIS
If IsNull(TBProduto!CST_PIS) = False And TBProduto!CST_PIS <> "" Then
    FimCST = TBProduto!CST_PIS
    CST_ICMS = False
    CST_Cofins = False
    CST_IPI = False
    CST_PIS = True
    
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_PIS where id_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    ProcEnviadadosAtualizaCST IDempresa, IDCliente, NomeCliente, UF, Consumidor, Finalidade
    TBCST.Close
End If

'Cofins
If IsNull(TBProduto!CST_Cofins) = False And TBProduto!CST_Cofins <> "" Then
    FimCST = TBProduto!CST_Cofins
    CST_ICMS = False
    CST_Cofins = True
    CST_IPI = False
    CST_PIS = False
    
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_Cofins where id_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    ProcEnviadadosAtualizaCST IDempresa, IDCliente, NomeCliente, UF, Consumidor, Finalidade
    TBCST.Close
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcEnviadadosAtualizaCST(IDempresa As Integer, IDCliente As Long, NomeCliente As String, UF As String, Consumidor As Integer, Finalidade As Integer)
On Error GoTo tratar_erro

If TBCST.EOF = True Then TBCST.AddNew
'ICMS
If CST_ICMS = True Then
    TBCST!Valor_BC = 0
    TBCST!Valor_ICMS = 0
    TBCST!ICMS_SN = 0
    TBCST!Valor_ICMS_SN = 0
'   TBCST!Valor_ICMS_desonerado = Null
'   TBCST!Motivo_ICMS_desonerado = Null
    TBCST!Valor_BC_ICMS_UF_dest = 0
    TBCST!Percentual_provisorio = 0
    TBCST!Valor_ICMS_INT_UF_dest = 0
    TBCST!Valor_ICMS_INT_UF_rem = 0
    TBCST!Percentual_FCP = 0
    TBCST!Valor_ICMS_FCP = 0
    
    TBCST!Id_Item = TBProduto!Int_codigo
    TBCST!Origem_mercadoria = InicioCST
    TBCST!Tributacao_ICMS = FimCST
    If FimCST <> "40" And FimCST <> "41" And FimCST <> "50" And FimCST <> "60" And FimCST <> "101" And FimCST <> "102" And FimCST <> "103" And FimCST <> "300" And FimCST <> "400" And FimCST <> "500" Then
        If FimCST = "20" Or FimCST = "70" Or FimCST = "90" Or FimCST = "201" Or FimCST = "202" Or FimCST = "203" Or FimCST = "900" Then
            Set TBMaquinas = CreateObject("adodb.recordset")
            TBMaquinas.Open "Select regiao from regioes where uf = '" & cbo_UF & "'", Conexao, adOpenKeyset, adLockOptimistic
            If TBMaquinas.EOF = False Then
                Set TBAfericao = CreateObject("adodb.recordset")
                TBAfericao.Open "Select CTDE, CTSS, CTNN, CTCO from tbl_ClassificacaoFiscal where Idclass = " & IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), Conexao, adOpenKeyset, adLockOptimistic
                If TBAfericao.EOF = False Then
                    Select Case TBMaquinas!regiao
                        Case "DE":
                            TBCST!Percentual_reducao_BC = TBAfericao!CTDE
                            If cbo_UF <> "MG" And FimCST <> "20" And FimCST <> "51" Then TBCST!Percentual_reducao_BC_ST = TBAfericao!CTDE
                        Case "SS":
                            TBCST!Percentual_reducao_BC = TBAfericao!CTSS
                            If cbo_UF <> "MG" And FimCST <> "20" And FimCST <> "51" Then TBCST!Percentual_reducao_BC_ST = TBAfericao!CTSS
                        Case "NN":
                            TBCST!Percentual_reducao_BC = TBAfericao!CTNN
                            If cbo_UF <> "MG" And FimCST <> "20" And FimCST <> "51" Then TBCST!Percentual_reducao_BC_ST = TBAfericao!CTNN
                        Case "CO":
                            TBCST!Percentual_reducao_BC = TBAfericao!CTCO
                            If cbo_UF <> "MG" And FimCST <> "20" And FimCST <> "51" Then TBCST!Percentual_reducao_BC_ST = TBAfericao!CTCO
                    End Select
                End If
                TBAfericao.Close
            End If
        End If
        
        If FimCST <> "201" And FimCST <> "202" And FimCST <> "203" Then
            ValorTotal = 0
            PV = (IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
            
            IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
            Set TBCiclo = CreateObject("adodb.recordset")
            TBCiclo.Open "select * from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and txt_ICMS = 'SIM'", Conexao, adOpenKeyset, adLockOptimistic
            If TBCiclo.EOF = False And IntICMS <> 0 Then
                ProcCalculaBC IDempresa, TBCiclo!ID_CFOP, IIf(IsNull(TBProduto!VlrMPA), 0, TBProduto!VlrMPA), PV, TBProduto!dbl_valoripi, TBCiclo!txt_Somar, TBCiclo!Somar_IPI_BC_ICMSST, TBCiclo!TemReducaoBC, IIf(TBProduto!NaoArredondar = True, True, False), FimCST, Aplicacao, IDCliente, NomeCliente
                If TBCiclo!txt_Somar = "SIM" Then TBCST!Valor_BC = Format(BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), "###,##0.00") Else TBCST!Valor_BC = Format(BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), "###,##0.00")
            Else
                TBCST!Valor_BC = 0
            End If
            TBCiclo.Close
                            
            'Calcula ICMS sem arredondar ou arredondando
            If IntICMS <> 0 Then
                ValorTotal = TBCST!Valor_BC
                TBCST!Valor_ICMS = Format(FunCalulaArredondaICMS(IntICMS, ValorTotal, IIf(TBProduto!NaoArredondar = True, True, False)), "###,##0.00")
            End If
        End If
    End If
    
    'Set TBCiclo = CreateObject("adodb.recordset")
    'TBCiclo.Open "select * from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and Txt_ICMS = 'SIM' and Left(id_CFOP, 1) <> 3", Conexao, adOpenKeyset, adLockOptimistic
    'If TBCiclo.EOF = False And (FimCST = "101" Or FimCST = "201" Or FimCST = "900") Then
    If FimCST = "101" Or FimCST = "201" Then
        'If Faturamento_NF_Saida = True Then
            'ProcValorImposto txtid, IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), IDCliente, NomeCliente, cbo_UF, IDempresa, False, IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), RegimeEmpresa
        'Else
            'ProcValorImposto txtid, IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), IDCliente, NomeCliente, cbo_UF, IDempresa, True, IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), 0
        'End If
        
        PV = (IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)
        If FimCST = "201" Then PV = PV + TBCST!Valor_ICMS_ST
        'IntICMS = IIf(IsNull(TBProduto!ICMS_SN), 0, TBProduto!ICMS_SN)
        'ProcCalculaBC IDempresa, TBCiclo!ID_CFOP, IIf(IsNull(TBProduto!VlrMPA), 0, TBProduto!VlrMPA), PV, TBProduto!dbl_valoripi, TBCiclo!txt_Somar, TBCiclo!Somar_IPI_BC_ICMSST, TBCiclo!TemReducaoBC, False, FimCST, Aplicacao, IDCliente, NomeCliente
        'If TBCiclo!txt_Somar = "SIM" Then ValorTotal = Format(BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), "###,##0.00") Else ValorTotal = Format(BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), "###,##0.00")
        
        'If IntICMS <> 0 Then
            'TBCST!Valor_BC = ValorTotal
            'TBCST!ICMS_SN = IntICMS
            'TBCST!Valor_ICMS_SN = Format((ValorTotal * IntICMS) / 100, "###,##0.00")
        'End If
        
        'Novo cálculo simples nacional 2018
        IntICMS = IIf(IsNull(TBProduto!ICMS_SN), 0, TBProduto!ICMS_SN)
        If IntICMS <> 0 Then
            TBCST!Valor_BC = PV
            TBCST!ICMS_SN = IntICMS
            TBCST!Valor_ICMS_SN = Format((PV * IntICMS) / 100, "###,##0.00")
        End If
    End If
    'TBCiclo.Close
    
    ProcCalculaFCPeDIFAL IDempresa, IDCliente, NomeCliente, UF, Consumidor, Finalidade
    
    'Valor ICMS desonerado
'    If FimCST = "20" Or FimCST = "40" Or FimCST = "41" Or FimCST = "50" Or FimCST = "70" Or FimCST = "90" Then
'        ProcVerificaRegiao cbo_UF.Text, IDcliente, NomeCliente
'        TBCST!Valor_ICMS_desonerado = Format((TBProduto!dbl_ValorTotal * vRegiao(0, 1)) / 100, "###,##0.00")
'
'        If FimCST = "20" Then
'            Set TBCiclo = CreateObject("adodb.recordset")
'            TBCiclo.Open "select * from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and txt_ICMS = 'SIM'", Conexao, adOpenKeyset, adLockOptimistic
'            If TBCiclo.EOF = False Then
'                ProcCalculaBC IDempresa, TBCiclo!ID_CFOP, IIf(IsNull(TBProduto!VlrMPA), 0, TBProduto!VlrMPA), PV, TBProduto!dbl_valoripi, TBCiclo!txt_Somar, TBCiclo!Somar_IPI_BC_ICMSST, TBCiclo!TemReducaoBC, False, FimCST, Aplicacao, IDcliente, NomeCliente
'                ValorTotal = Format(BC, "###,##0.00")
'                ValoresParcelas = Format((BC * vRegiao(0, 1)) / 100, "###,##0.00")
'
'                TBCST!Valor_ICMS_desonerado = Format(TBCST!Valor_ICMS_desonerado - ValoresParcelas, "###,##0.00")
'            End If
'        End If
'
'        TBCST!Motivo_ICMS_desonerado = 9
'        'Verifica SUFRAMA
'        If FimCST = "40" Or FimCST = "41" Or FimCST = "50" Then If Suframa = True And Desconto_Suframa = True Then TBCST!Motivo_ICMS_desonerado = 7
'
'        ValorICMS_desonerado = ValorICMS_desonerado + TBCST!Valor_ICMS_desonerado
'    End If

    'Valor do ICMS diferido
    If FimCST = "51" Then
        TBCST!Percentual_ICMS_DIF = DIF
        TBCST!Valor_ICMS_DIF = Format((TBCST!Valor_ICMS * DIF) / 100, "###,##0.00")
    End If
End If
'IPI
If CST_IPI = True Then
    TBCST!Id_Item = TBProduto!Int_codigo
    TBCST!Codigo_situacaoTributaria = FimCST
    If FimCST = "00" Or FimCST = "49" Or FimCST = "50" Or FimCST = "99" Then TBCST!Valor_BC = IIf(TBProduto!Tem_IPI_frete = True, IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete), IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal))
End If
'PIS
If CST_PIS = True Then
    TBCST!Id_Item = TBProduto!Int_codigo
    TBCST!Codigo_situacaoTributaria = FimCST
    If FimCST = "01" Or FimCST = "03" Or FimCST = "49" Or FimCST = "98" Or FimCST = "99" Then TBCST!Valor_BC = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
End If
'Cofins
If CST_Cofins = True Then
    TBCST!Id_Item = TBProduto!Int_codigo
    TBCST!Codigo_situacaoTributaria = FimCST
    If FimCST = "01" Or FimCST = "02" Or FimCST = "03" Or FimCST = "49" Or FimCST = "98" Or FimCST = "99" Then TBCST!Valor_BC = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
End If
TBCST.Update
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCalculaFCPeDIFAL(IDempresa As Integer, IDCliente As Long, NomeCliente As String, UF As String, Consumidor As Integer, Finalidade As Integer)
On Error GoTo tratar_erro

'====================Calculo ICMS relativo ao Fundo de Combate à Pobreza (FCP) e diferencial da alíquota====================

TBCST!Valor_BC_ICMS_UF_dest = 0
TBCST!Percentual_provisorio = 0
TBCST!Percentual_FCP = 0
TBCST!Valor_ICMS_FCP = 0
TBCST!Valor_ICMS_INT_UF_dest = 0
TBCST!Valor_ICMS_INT_UF_rem = 0

'Verifica se o cliente/Fornecedor não é contribuinte do ICMS
Permitido2 = False
Set TBCorretiva = CreateObject("adodb.recordset")
TBCorretiva.Open "Select IDCliente from Clientes where IDCliente = " & IDCliente & " and NomeRazao = '" & NomeCliente & "' and Nao_contribuinte_ICMS = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBCorretiva.EOF = False Then
    Permitido2 = True
Else
    Set TBCorretiva = CreateObject("adodb.recordset")
    TBCorretiva.Open "Select IDCliente from Compras_fornecedores where IDCliente = " & IDCliente & " and Nome_Razao = '" & NomeCliente & "' and Nao_contribuinte_ICMS = 'True'", Conexao, adOpenKeyset, adLockOptimistic
    If TBCorretiva.EOF = False Then
        Permitido2 = True
    End If
End If

'Verifica se a empresa emitente é simples nacional
Parcial = False
TextoFiltroCFOP = " and txt_ICMS = 'SIM'"
Set TBCorretiva = CreateObject("adodb.recordset")
TBCorretiva.Open "Select E.UF, I.Regime from Empresa E INNER JOIN Impostos I ON I.ID_empresa = E.Codigo where E.Codigo = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
If TBCorretiva.EOF = False Then
    UFEmp = TBCorretiva!UF
    If TBCorretiva!Regime = 1 Then
        Parcial = True
        TextoFiltroCFOP = ""
        PV = (IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
    End If
End If
TBCorretiva.Close

If Faturamento_NF_Saida = True And Opt_saida.Value = True And Permitido2 = True And Left(Consumidor, 1) = 1 And UFEmp <> UF And (Parcial = True Or Parcial = False And IntICMS <> 0) And (FimCST <> "202" And FimCST <> "203" Or FimCST = "101" Or FimCST = "201" Or FimCST = "900") Then
    'Verifica se é CFOP fora do estado e vendas ou se é bonificação
    Set TBCiclo = CreateObject("adodb.recordset")
    TBCiclo.Open "select IDCountCfop, id_CFOP from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and Retorno = 'False' and (Left(id_CFOP, 1) = '6' " & TextoFiltroCFOP & " or Right(id_CFOP,3) = '910')", Conexao, adOpenKeyset, adLockOptimistic
    'TBCiclo.Open "select IDCountCfop, id_CFOP from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and Retorno = 'False' and Remessa = 'False' and Left(id_CFOP, 1) = '6' " & TextoFiltroCFOP, Conexao, adOpenKeyset, adLockOptimistic
    If TBCiclo.EOF = False Then
        Dim pICMSUFDest As Double 'OK
        Dim pICMSDest As Double 'OK
        Dim pICMSOri As Double 'OK
        Dim vBCICMS As Double 'OK
        Dim vICMSinter As Double 'OK
        Dim vDifAliq As Double 'OK
        
        'Verifica aliquota interna do ICMS da UF de destino
        pICMSUFDest = 0
        Set TBMaquinas = CreateObject("adodb.recordset")
        TBMaquinas.Open "Select ICMS_interno from regioes where UF = '" & UF & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBMaquinas.EOF = False Then
            pICMSUFDest = IIf(IsNull(TBMaquinas!ICMS_interno), 0, TBMaquinas!ICMS_interno)
        End If
        TBMaquinas.Close
        
        'Verifica alíquota do ICMS interestadual da UF de destino
        ProcVerificaRegiao UF, IDCliente, NomeCliente
       
        'Percentual de partilha para a UF de destino, conforme NT 2015/003
        Dataini = txt_DtEmissao
        If Left(Finalidade, 1) <> 1 And TBCiclo!ID_CFOP <> "6.116" Then
            Set TBMaquinas = CreateObject("adodb.recordset")
            TBMaquinas.Open "Select NFR.dt_DataEmissao from Faturamento_Relacionamento FR INNER JOIN tbl_Dados_Nota_Fiscal NFR ON NFR.ID = FR.ID_nota_relacionada where FR.ID_nota = " & TBProduto!ID_nota, Conexao, adOpenKeyset, adLockOptimistic
            If TBMaquinas.EOF = False Then
                Dataini = TBMaquinas!dt_DataEmissao
            End If
            TBMaquinas.Close
        End If
        
        'Origem
        Select Case Year(Dataini)
            Case "2016": pICMSOri = 60
            Case "2017": pICMSOri = 40
            Case "2018": pICMSOri = 20
            Case Is >= "2019": pICMSOri = 0
        End Select
        
        'Destino
        Select Case Year(Dataini)
            Case "2016": pICMSDest = 40
            Case "2017": pICMSDest = 60
            Case "2018": pICMSDest = 80
            Case Is >= "2019": pICMSDest = 100
        End Select
                    
        'Cálculo
        'PV = (Valor do produto - valor de desconto) + valor do frete
'            If Year(Date) = "2017" Then
            vBCICMS = Format(PV + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) + IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi), "###,##0.00")
            TBCST!Valor_BC_ICMS_UF_dest = vBCICMS
            TBCST!Percentual_provisorio = pICMSDest
            TBCST!Percentual_FCP = FCP
            TBCST!Valor_ICMS_FCP = Format((vBCICMS * FCP) / 100, "###,##0.00")
            vDifAliq = (vBCICMS * (pICMSUFDest - vRegiao(0, 1))) / 100
            TBCST!Valor_ICMS_INT_UF_dest = Format((vDifAliq * pICMSDest) / 100, "###,##0.00")
            TBCST!Valor_ICMS_INT_UF_rem = Format((vDifAliq * pICMSOri) / 100, "###,##0.00")
'            Else
            'Passo 1  calcular a base de cálculo e o valor do ICMS Inter
'                vBCICMS = Format(PV + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), "###,##0.00")
'                If Left(Cmb_consumidor, 1) = 1 Then vBCICMS = Format(vBCICMS + IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi), "###,##0.00") ''O valor do IPI deve integrar a base de cálculo do ICMS sempre que a operação for destinada ao consumo final.
'                vICMSinter = (vBCICMS * vRegiao(0, 1)) / 100
'                TBCST!Valor_BC_ICMS_UF_dest = vBCICMS
'                TBCST!Percentual_provisorio = pICMSDest
'
'                'Passo 2  calcular o Fundo de Combate à Pobreza
'                TBCST!Percentual_FCP = FCP
'                TBCST!Valor_ICMS_FCP = Format((vBCICMS * FCP) / 100, "###,##0.00")
'
'                'Passo 3  calcular o DIFAL
'                vDifAliq = Format(((vBCICMS - vICMSinter) / (1 - (pICMSUFDest / 100))) * (pICMSUFDest / 100) - ((vBCICMS * vRegiao(0, 1)) / 100), "0.00")
'
'                'Passo 4  efetuar a partilha do DIFAL
'                TBCST!Valor_ICMS_INT_UF_rem = Format((vDifAliq * pICMSOri) / 100, "###,##0.00")
'                TBCST!Valor_ICMS_INT_UF_dest = Format((vDifAliq * pICMSDest) / 100, "###,##0.00")
        'End If
    End If
    '================================================================================
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcSalvarProduto()
On Error GoTo tratar_erro

If Produto_Relacionado = False Then
    If Alterar = False Then
        MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
        Exit Sub
    End If
    FunVerifAlteracaoNF TxtID, True, optServico
    If Permitido1 = False Or Permitido = False Then
        MsgBox ("Não é permitido salvar, " & MsgTexto & "."), vbExclamation
        Exit Sub
    End If
    If Frame1(9).Enabled = False Then
        ProcVerificaSalvar
        Exit Sub
    End If
    Acao = "salvar"
'   If txtNFiscal.Text = "" Then
'       If Formulario = "Estoque/Ordem de faturamento" Then NomeCampo = "da ordem de faturamento" Else NomeCampo = "da nota fiscal"
'       ProcVerificaAcao
'       txtNFiscal.SetFocus
'       Exit Sub
'   End If
    If txtCod_Produto.Text = "" Then
        NomeCampo = "o código interno"
        ProcVerificaAcao
        txtCod_Produto.SetFocus
        Exit Sub
    End If
    
    If Faturamento_NF_Saida = True Then
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select Codigo from Empresa where Codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Codigo_ref_DANFE = 'True'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            If cmbreferencia = "" Then
                NomeCampo = "o código de referência"
                ProcVerificaAcao
                cmbreferencia.SetFocus
                Exit Sub
            End If
        End If
        TBAbrir.Close
        If chkRetorno.Value = 0 Then
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from tbl_dados_transp where ID_nota = " & TxtID & " and Sedex = 'True'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                Set TBProduto = CreateObject("adodb.recordset")
                TBProduto.Open "Select * from tbl_Detalhes_Nota where Int_codigo = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
                If TBProduto.EOF = False Then
                    Qtd = txt_ValorNota - ((TBProduto!dbl_valoripi + TBProduto!dbl_ValorTotal + TBProduto!Valor_frete + TBProduto!Valor_seguro + TBProduto!Valor_acessorias) - TBProduto!Valor_desconto)
                Else
                    Qtd = txt_ValorNota
                End If
                TBProduto.Close
                Qtde = (Qtd + txtVLUnit + txtValor_IPI + txt_VlrFrete_prod + txt_vlrSeguro_prod + txt_OutrasDisp_prod) - Txt_valor_total_desc_prod
                If Format(Qtde, "###,##0.00") > 10000 Then
                    MsgBox ("Não é permitido salvar produto, pois a nota ultrapassou o limite do sedex (R$10.000,00)."), vbExclamation
                    Exit Sub
                End If
            End If
            TBAbrir.Close
        End If
    Else
        If FunVerifCodRefFornSPED(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = True Then
            If cmbreferencia = "" Then
                NomeCampo = "o código de referência"
                ProcVerificaAcao
                cmbreferencia.SetFocus
                Exit Sub
            End If
        End If
    End If
    
    If Formulario <> "Estoque/Ordem de faturamento" Then
        If Txt_CFOP_prod = "" Then
            NomeCampo = "a CFOP"
            ProcVerificaAcao
            Cmd_localizar_CFOP_prod_Click
            Exit Sub
        End If
        If Txt_CF.Text = "" Then
            NomeCampo = "a NCM"
            ProcVerificaAcao
            cmdCF.SetFocus
            Exit Sub
        End If
        If txtCST_ICMS.Text = "" Then
            NomeCampo = "a CST do ICMS"
            ProcVerificaAcao
            txtCST_ICMS.SetFocus
            Exit Sub
        End If
        If txtCST_IPI.Text = "" Then
            NomeCampo = "a CST do IPI"
            ProcVerificaAcao
            txtCST_IPI.SetFocus
            Exit Sub
        End If
        If txtCST_PIS.Text = "" Then
            NomeCampo = "a CST do PIS"
            ProcVerificaAcao
            txtCST_PIS.SetFocus
            Exit Sub
        End If
        If txtCST_Cofins.Text = "" Then
            NomeCampo = "a CST do Cofins"
            ProcVerificaAcao
            txtCST_Cofins.SetFocus
            Exit Sub
        End If
    End If
   
    If txtDescricao_Produto.Text = "" Then
        NomeCampo = "a descrição"
        ProcVerificaAcao
        txtDescricao_Produto.SetFocus
        Exit Sub
    End If
    If txtun.Text = "" Then
        NomeCampo = "a unidade de estoque"
        ProcVerificaAcao
        txtun.SetFocus
        Exit Sub
    End If
    If Cmb_un_com.Text = "" Then
        NomeCampo = "a unidade comercial"
        ProcVerificaAcao
        Cmb_un_com.SetFocus
        Exit Sub
    End If
    Valor = IIf(txtQtd = "", 0, txtQtd)
    If Valor <= 0 Then
        NomeCampo = "a quantidade"
        ProcVerificaAcao
        txtQtd.SetFocus
        Exit Sub
    End If
    Valor1 = IIf(txtVLUnit = "", 0, txtVLUnit)
    If Valor1 < 0 Then
        NomeCampo = "o valor unitário"
        ProcVerificaAcao
        txtVLUnit.SetFocus
        Exit Sub
    End If
    If txtVLTotal = "" Then
        NomeCampo = "o valor total"
        ProcVerificaAcao
        txtVLTotal.SetFocus
        Exit Sub
    End If
    If txtIcms = "" Then
        NomeCampo = "o ICMS"
        ProcVerificaAcao
        txtIcms.SetFocus
        Exit Sub
    End If
    If txtIPI = "" Then
        NomeCampo = "o IPI"
        ProcVerificaAcao
        txtIPI.SetFocus
        Exit Sub
    End If
    Valor1 = IIf(txt_VlrFrete_prod = "", 0, txt_VlrFrete_prod)
    If Valor1 < 0 Then
        NomeCampo = "o valor do frete"
        ProcVerificaAcao
        txt_VlrFrete_prod.SetFocus
        Exit Sub
    End If
    Valor1 = IIf(txt_vlrSeguro_prod = "", 0, txt_vlrSeguro_prod)
    If Valor1 < 0 Then
        NomeCampo = "o valor do seguro"
        ProcVerificaAcao
        txt_vlrSeguro_prod.SetFocus
        Exit Sub
    End If
    Valor1 = IIf(txt_OutrasDisp_prod = "", 0, txt_OutrasDisp_prod)
    If Valor1 < 0 Then
        NomeCampo = "o valor de outras despesas"
        ProcVerificaAcao
        txt_OutrasDisp_prod.SetFocus
        Exit Sub
    End If
    Valor1 = IIf(Txt_valor_total_desc_prod = "", 0, Txt_valor_total_desc_prod)
    If Valor1 < 0 Then
        NomeCampo = "o valor do desconto"
        ProcVerificaAcao
        Txt_valor_total_desc_prod.SetFocus
        Exit Sub
    End If
    If Txt_codigo_enq_IPI <> "___" Then
        If Len(FunSóNumeros(Txt_codigo_enq_IPI)) < 3 Then
            MsgBox ("O código de enquadramento legal do IPI deve conter 3 caracteres."), vbExclamation
            Txt_codigo_enq_IPI.SetFocus
            Exit Sub
        End If
    End If
    If Txt_GTIN <> "" Then
        If Len(Txt_GTIN) <> 8 And Len(Txt_GTIN) <> 12 And Len(Txt_GTIN) <> 13 And Len(Txt_GTIN) <> 14 Then
            MsgBox ("O código GTIN deve conter 8, 12, 13 ou 14 caracteres."), vbExclamation
            Txt_GTIN.SetFocus
            Exit Sub
        End If
    End If
    If NF_enviada = False And NFe_liberada = False Then ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)
    
    Quantidade = 0
    Qtd = 0
    
    Conexao.Execute "Update tbl_Dados_Nota_Fiscal Set Alterar = 'False' where id = " & TxtID.Text
    NF_alterada = False
    
    'Se a unidade for diferente verifica se esta cadastrado o peso bruto e UN/KG
    If FunBloqueiaUnConversao(txtCod_Produto, txtun, Cmb_un_com, True) = True Then Exit Sub
End If

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select * from tbl_detalhes_nota where Int_codigo = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    If TBProduto!int_Cod_Produto <> txtCod_Produto Then
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            MsgBox ("Não é permitido alterar este produto, pois o mesmo pertence a um pedido interno."), vbExclamation
            TBAbrir.Close
            Exit Sub
        End If
    End If
    If Produto_Relacionado = False Then
        If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
        If FunVerifValidacaoRegistro("alterar", txtDtValidacao, Familiatext, "o produto", False) = False Then Exit Sub
        
        If Faturamento_NF_Saida = True Then
            If TBProduto!int_Qtd <> Valor Then
                If txtNFiscal <> "" Then
                    Set TBAbrir = CreateObject("adodb.recordset")
                    TBAbrir.Open "Select RespValidacaoOF from tbl_Dados_Nota_Fiscal where ID = " & TxtID & " and RespValidacaoOF <> '" & pubUsuario & "'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBAbrir.EOF = False Then
                        MsgBox ("Só é permitido alterar a quantidade deste produto pelo usuário " & TBAbrir!RespValidacaoOF & "."), vbExclamation
                        TBAbrir.Close
                        Exit Sub
                    End If
                End If
                Set TBAbrir = CreateObject("adodb.recordset")
                TBAbrir.Open "Select ID from Estoque_Controle_Empenho_Vendas where ID_faturamento = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
                If TBAbrir.EOF = False Then
                    MsgBox ("Não é possivel alterar a quantidade deste produto, pois já foi empenhado RE no estoque por esta " & Familiatext & "."), vbExclamation
                    TBAbrir.Close
                    Exit Sub
                End If
                TBAbrir.Close
            End If
        End If
        
        'Verifica se o produto está amarrado a outra nota
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select * from Faturamento_Relacionamento where Id_produto = " & txtIDProduto & " or Id_produto_relacionada = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            TBProduto!Complemento_descricao = Trim(Txt_complemento_descricao)
            TBProduto.Update
            
            MsgBox ("Só foi alterado o campo Complemento da descrição, pois este produto está sendo utilizado no módulo de relacionamento de notas fiscais."), vbExclamation
            TBAbrir.Close
            Exit Sub
        End If
        TBAbrir.Close
    End If
    
    If IsNull(TBProduto!txt_CST) = False And TBProduto!txt_CST <> txtCST_ICMS Then Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_ICMS WHERE id_item = " & txtIDProduto.Text
    If IsNull(TBProduto!CST_IPI) = False And TBProduto!CST_IPI <> txtCST_IPI Then Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_IPI WHERE id_item = " & txtIDProduto.Text
    If IsNull(TBProduto!CST_PIS) = False And TBProduto!CST_PIS <> txtCST_PIS Then Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_PIS WHERE id_item = " & txtIDProduto.Text
    If IsNull(TBProduto!CST_Cofins) = False And TBProduto!CST_Cofins <> txtCST_Cofins Then Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_Cofins WHERE id_item = " & txtIDProduto.Text
    
    Valor = IIf(txtQtd = "", 0, txtQtd)
    If Valor <> TBProduto!int_Qtd Then TBProduto!Saldo = txtQtd.Text
Else
    TBProduto.AddNew
    TBProduto!Saldo = txtQtd.Text
    TBProduto!Tipo = "P"
End If
If NFe_liberada = True Then
    TBProduto!Ordem = IIf(txtOF = "", 0, txtOF)
    TBProduto!IDestoque = IIf(Txt_IDestoque = "", 0, Txt_IDestoque)
Else
    TBProduto!int_Cod_Produto = txtCod_Produto
    TBProduto!Txt_descricao = Trim(txtDescricao_Produto)
    TBProduto!N_referencia = cmbreferencia
    Set TBItem = CreateObject("adodb.recordset")
    TBItem.Open "Select codProduto, classe from projproduto where desenho = '" & txtCod_Produto & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBItem.EOF = False Then
        TBProduto!Codproduto = TBItem!Codproduto
        TBProduto!Familia = TBItem!Classe
    End If
    TBItem.Close
    TBProduto!Valor_frete = IIf(txt_VlrFrete_prod = "", 0, txt_VlrFrete_prod)
    If Chk_tem_IPI_frete_prod.Value = 1 Then TBProduto!Tem_IPI_frete = True Else TBProduto!Tem_IPI_frete = False
    TBProduto!Valor_seguro = IIf(txt_vlrSeguro_prod = "", 0, txt_vlrSeguro_prod)
    TBProduto!Valor_acessorias = IIf(txt_OutrasDisp_prod = "", 0, txt_OutrasDisp_prod)
    TBProduto!Valor_desconto = IIf(Txt_valor_total_desc_prod = "", 0, Txt_valor_total_desc_prod)
    TBProduto!N_item = Txt_n_item
    TBProduto!PCCliente = Trim(txt_pccliente)
    TBProduto!Complemento_descricao = Trim(Txt_complemento_descricao)
    TBProduto!GTIN = Txt_GTIN
    TBProduto!Inf_adicionais_prod = Trim(Txt_inf_adicionais_prod)
    TBProduto!Ordem = IIf(txtOF = "", 0, txtOF)
    TBProduto!IDestoque = IIf(Txt_IDestoque = "", 0, Txt_IDestoque)
    TBProduto!txt_CST = txtCST_ICMS
    TBProduto!CST_IPI = txtCST_IPI
    TBProduto!CST_PIS = txtCST_PIS
    TBProduto!CST_Cofins = txtCST_Cofins
    
    TBProduto!ID_CFOP = IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod)
    ProcControleImposto IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), IIf(txtIDCliente = "", 0, txtIDCliente)
    
    TBProduto!ID_CF = IIf(Txt_ID_CF = "", 0, Txt_ID_CF)
    If IsNull(TBProduto!ID_CF) = False Then
        ProcBuscaTributos (TBProduto!ID_CF)
        If Faturamento_NF_Saida = False Then
            If vlrICMS(0, 1) = 0 Then vlrICMS(0, 1) = IIf(IsNull(TBProduto!int_IPI), 0, TBProduto!int_IPI)
            If vlrICMS(0, 2) = 0 Then vlrICMS(0, 2) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
            If vlrICMS(0, 3) = 0 Then vlrICMS(0, 3) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
            If vlrICMS(0, 4) = 0 Then vlrICMS(0, 4) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
        End If
        ProcVerificaRegiao cbo_UF.Text, txtIDCliente, txt_Razao
    End If
    
    TBProduto!int_Qtd = txtQtd.Text
    TBProduto!txt_Unid = txtun.Text
    TBProduto!Unidade_com = Cmb_un_com.Text
    TBProduto!dbl_ValorUnitario = txtVLUnit
    TBProduto!int_ICMS = txtIcms
    TBProduto!int_IPI = txtIPI
    TBProduto!dbl_valoripi = txtValor_IPI
    TBProduto!Codigo_enquadramento_IPI = IIf(Txt_codigo_enq_IPI = "___", Null, Txt_codigo_enq_IPI)
    TBProduto!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    TBProduto!ID_nota = TxtID.Text
    TBProduto!dbl_ValorTotal = txtVLTotal
    If chkNaoArredondar = 1 Then TBProduto!NaoArredondar = True Else TBProduto!NaoArredondar = False
    If chkRetorno.Value = 1 Then
        TBProduto!Retorno = True
        If Soma_retorno_total_NF = True Then TBProduto!Soma_retorno_totalnf = True Else TBProduto!Soma_retorno_totalnf = False
    Else
        TBProduto!Retorno = False
        TBProduto!Soma_retorno_totalnf = False
    End If
    If chkRemessa.Value = 1 Then TBProduto!Remessa = True Else TBProduto!Remessa = False
    
    'Impostos
    Valor_total = TBProduto!dbl_ValorTotal + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)
    Valor_IPI = txtValor_IPI
    
    ProcVerifImpostosEmpresa Cmb_empresa.ItemData(Cmb_empresa.ListIndex), chkRetorno, "", False, 0, False, TabelaSN, Lbl2.Caption
    'Novo cálculo simples nacional 2018
    'If DAS <> 0 Then
        NovoValor = Replace(DAS, ",", ".")
        Conexao.Execute "UPDATE tbl_Totais_Nota Set DAS = " & NovoValor & " where ID_nota = " & TxtID
    'End If
    If txtCST_PIS = "01" Or txtCST_PIS = "03" Or txtCST_PIS = "49" Or txtCST_PIS = "98" Or txtCST_PIS = "99" Then
        TBProduto!PIS_Prod = PIS_Prod
        If PIS_Prod <> 0 Then TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00") Else TBProduto!Total_PIS_prod = 0
    Else
        TBProduto!PIS_Prod = 0
        TBProduto!Total_PIS_prod = 0
    End If
    If txtCST_Cofins = "01" Or txtCST_Cofins = "02" Or txtCST_Cofins = "03" Or txtCST_Cofins = "49" Or txtCST_Cofins = "98" Or txtCST_Cofins = "99" Then
        TBProduto!Cofins_Prod = Cofins_Prod
        If Cofins_Prod <> 0 Then TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00") Else TBProduto!Total_Cofins_prod = 0
    Else
        TBProduto!Cofins_Prod = 0
        TBProduto!Total_Cofins_prod = 0
    End If
    TBProduto!CSLL_Prod = CSLL_Prod
    If CSLL_Prod <> 0 Then TBProduto!Total_CSLL_prod = Format((Valor_total * CSLL_Prod) / 100, "###,##0.00") Else TBProduto!Total_CSLL_prod = 0
    TBProduto!IRPJ_Prod = IRPJ_Prod
    If IRPJ_Prod <> 0 Then TBProduto!Total_IRPJ_prod = Format((Valor_total * IRPJ_Prod) / 100, "###,##0.00") Else TBProduto!Total_IRPJ_prod = 0
    TBProduto!cpp = CPP_Prod
    If CPP_Prod <> 0 Then TBProduto!Total_CPP = Format((Valor_total * CPP_Prod) / 100, "###,##0.00") Else TBProduto!Total_CPP = 0
    TBProduto!ICMS_SN = ICMS_SN
    
    Set TBFI = CreateObject("adodb.recordset")
    TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & TBProduto!ID_CF, Conexao, adOpenKeyset, adLockOptimistic
    If TBFI.EOF = False Then
        'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
        If DestacaImpostos = "SIM" And TBFI!Retem_PIS_Cofins = True And chkRetorno.Value = 0 Then
            TBProduto!Valor_Retencao_PIS = Format((Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "###,##0.00")
            TBProduto!Valor_Retencao_Cofins = Format((Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "###,##0.00")
        Else
            TBProduto!Valor_Retencao_PIS = 0
            TBProduto!Valor_Retencao_Cofins = 0
        End If
        
        'Recalcula o valor do PIS e Cofins de acordo com a alíquota informada na CF se tiver diferente de zero
        If DestacaImpostos = "SIM" Then
            PIS_Prod = IIf(IsNull(TBFI!PIS_destaca), 0, TBFI!PIS_destaca)
            Cofins_Prod = IIf(IsNull(TBFI!Cofins_destaca), 0, TBFI!Cofins_destaca)
            If Regime <> 1 And chkRetorno.Value = 0 Then
                If TemPIS = True And PIS_Prod <> 0 Then
                    TBProduto!PIS_Prod = PIS_Prod
                    TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00")
                End If
                If TemCOFINS = True And Cofins_Prod <> 0 Then
                    TBProduto!Cofins_Prod = Cofins_Prod
                    TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00")
                End If
            End If
        Else
            TBProduto!PIS_Prod = 0
            TBProduto!Total_PIS_prod = 0
            TBProduto!Cofins_Prod = 0
            TBProduto!Total_Cofins_prod = 0
        End If
        
        'Calcula valor aproximado de tributos
        TBProduto!Aliq_aprox_tributos = FunCalcularAproxTrib(0, txtCST_ICMS, IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), False)
        If TBProduto!Aliq_aprox_tributos = 0 Then
            TBProduto!Valor_aprox_tributos = 0
        Else
            TBProduto!Valor_aprox_tributos = Format((TBProduto!dbl_ValorTotal * TBProduto!Aliq_aprox_tributos) / 100, "###,##0.00")
        End If
    End If
    Valor_total = 0
    Valor_IPI = 0
    
    ValorICMS = 0
    
    PV = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
    PV = (PV - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
    IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
    ProcCalculaBC Cmb_empresa.ItemData(Cmb_empresa.ListIndex), IIf(Txt_CFOP_prod = "", "0.000", Txt_CFOP_prod), 0, PV, IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi), SomarIPI, SomarIPIST, TemReducaoBC, IIf(TBProduto!NaoArredondar = True, True, False), IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), Aplicacao, txtIDCliente, txt_Razao
    
    If TemICMS = "SIM" Or Suframa = True And Desconto_Suframa = True Then
        ICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
        
        'Verifica valor da matéria prima aplicada
        If MPA = True Then
            Set TBAfericao = CreateObject("adodb.recordset")
            If Aplicacao = "P" Then
                TBAfericao.Open "Select ICMS_ind from Impostos where ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and ICMS_ind is not null and ICMS_ind <> N''", Conexao, adOpenKeyset, adLockOptimistic
            Else
                TBAfericao.Open "Select ICMS_ind from Compras_fornecedores where IDcliente = " & txtIDCliente & " and Nome_Razao = '" & txt_Razao & "' and ICMS_ind is not null and ICMS_ind <> N''", Conexao, adOpenKeyset, adLockOptimistic
            End If
            If TBAfericao.EOF = False Then
                ICMSOUTROS = TBAfericao!ICMS_ind
                TBProduto!VlrMPA = Format((TBProduto!dbl_ValorTotal * ICMSOUTROS) / 100, "###,##0.00")
            End If
            TBAfericao.Close
        End If
        If ICMS <> 0 Or TBProduto!VlrMPA <> 0 Or Suframa = True And Desconto_Suframa = True Then
            If TBProduto!VlrMPA = 0 Then
                IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                PV1 = BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro)
                If SomarIPI = "NÃO" Then PV1 = PV1 + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)
                
                'Calcula ICMS sem arredondar ou arredondando
                If ICMS <> 0 Then ValorICMS = Format(FunCalulaArredondaICMS(ICMS, PV1, IIf(TBProduto!NaoArredondar = True, True, False)), "###,##0.00")
            Else
                If Faturamento_NF_Saida = True Then
                    Set TBFIltro = CreateObject("adodb.recordset")
                    TBFIltro.Open "Select * from empresa where codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
                Else
                    Set TBFIltro = CreateObject("adodb.recordset")
                    TBFIltro.Open "Select * from clientes where ID = " & txtIDCliente.Text & " and NomeRazao = '" & txt_Razao.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBFIltro.EOF = True Then
                        Set TBFIltro = CreateObject("adodb.recordset")
                        TBFIltro.Open "Select * from compras_fornecedores where IDCliente = " & txtIDCliente.Text & " and Nome_Razao = '" & txt_Razao.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
                    End If
                End If
                If TBFIltro.EOF = False Then
                    If TBFIltro!Simples = True Then PV1 = 0 Else PV1 = TBProduto!VlrMPA + TBProduto!Valor_frete + TBProduto!Valor_seguro + TBProduto!Valor_acessorias
                End If
                TBFIltro.Close
                
                'Calcula ICMS sem arredondar ou arredondando
                ValorICMS = Format(FunCalulaArredondaICMS(ICMS, PV1, IIf(chkNaoArredondar = 1, True, False)), "###,##0.00")
            End If
            
            'Calcula o ICMS do suframa
            If Suframa = True And Desconto_Suframa = True Then
                ProcValorImposto TxtID, IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), IIf(txtIDCliente = "", 0, txtIDCliente), txt_Razao, cbo_UF, Cmb_empresa.ItemData(Cmb_empresa.ListIndex), False, IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), RegimeEmpresa
                TBProduto!Valor_desconto_SUFRAMA = Format((PV1 * IntICMS) / 100, "###,##0.00")
            Else
                TBProduto!Valor_desconto_SUFRAMA = 0
            End If
        End If
    End If
    'Calcula quantidade se a unidade for diferente
    If FunVerifUNConversao(txtun, Cmb_un_com) = True Then
        TBProduto!Qtde_estoque = FunConverteUN(txtun, Cmb_un_com, txtQtd, txtCod_Produto)
    Else
        TBProduto!Qtde_estoque = Null
    End If
End If
TBProduto.Update
txtIDProduto = TBProduto!Int_codigo

ProcAtualizaCST Cmb_empresa.ItemData(Cmb_empresa.ListIndex), txtIDCliente, txt_Razao, cbo_UF, IIf(Cmb_consumidor = "", 1, Left(Cmb_consumidor, 1)), IIf(cmbFinalidade_emissao = "", 1, Left(cmbFinalidade_emissao, 1))
If TBProduto!dbl_ValorTotal > 0 Then ProcCalculaBaseST cbo_UF, IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), IIf(txtIDCliente = "", 0, txtIDCliente), txt_Razao, Format((IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) / IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd), "###,##0.0000000000"), IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd), BC, BCST, IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete), IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), True, IIf(Left(Cmb_consumidor, 1) = 1, True, False), Cmb_empresa.ItemData(Cmb_empresa.ListIndex)

ProcAtualizaQtdeFatProdServPed TBProduto!Int_codigo, TBProduto!int_Qtd
TBProduto.Close

If Produto_Relacionado = False Then ProcCarregaLista

If Novo_Nota1 = True Then
    Evento = "Novo produto"
    If Produto_Relacionado = False Then MsgBox ("Novo produto cadastrado com sucesso."), vbInformation
Else
    Evento = "Alterar produto"
    If Produto_Relacionado = False Then
        MsgBox ("Alteração efetuada com sucesso."), vbInformation
        If CodigoLista1 <> 0 And listaProdutos.ListItems.Count <> 0 Then
            listaProdutos.SelectedItem = listaProdutos.ListItems(CodigoLista1)
            listaProdutos.SetFocus
        End If
    End If
End If

'==================================
Modulo = Formulario
ID_documento = txtIDProduto
ProcVerificaTipoNF False
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
Documento1 = "Cód. interno: " & txtCod_Produto
ProcGravaEvento
'==================================

If Produto_Relacionado = False Then
    If NF_alterada = True Then ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
    ProcGravarTotaisNota
    ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
    ProcCarregaListaNota (IIf(FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))
End If
Novo_Nota1 = False
        
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcAtualizaQtdeFatProdServPed(IDprodserv As Long, QtdeFaturada As Double)
On Error GoTo tratar_erro

Set TBFerramentas = CreateObject("adodb.recordset")
TBFerramentas.Open "Select NFPP.*, VC.Quantidade from tbl_Detalhes_Nota_pedidos NFPP INNER JOIN Vendas_carteira VC ON VC.Codigo = NFPP.ID_carteira and VC.Desenho = NFPP.Codinterno where NFPP.ID_prod_NF = " & IDprodserv & " order by NFPP.ID_carteira", Conexao, adOpenKeyset, adLockOptimistic
If TBFerramentas.EOF = False Then
    Contador = TBFerramentas.RecordCount
    Do While TBFerramentas.EOF = False
        ProcAtualizaQtdeFatProdServPed1 IDprodserv, QtdeFaturada, True
        If QtdeFaturada <= 0 Then Exit Sub
        Contador = Contador - 1
        TBFerramentas.MoveNext
    Loop
Else
    Set TBFerramentas = CreateObject("adodb.recordset")
    TBFerramentas.Open "Select NFPP.* from tbl_Detalhes_Nota_pedidos NFPP INNER JOIN Compras_pedido_lista CPL ON CPL.IDlista = NFPP.ID_carteira and CPL.Desenho = NFPP.Codinterno where NFPP.ID_prod_NF = " & IDprodserv, Conexao, adOpenKeyset, adLockOptimistic
    If TBFerramentas.EOF = False Then
        Contador = TBFerramentas.RecordCount
        Do While TBFerramentas.EOF = False
            ProcAtualizaQtdeFatProdServPed1 IDprodserv, QtdeFaturada, False
            ProcAtualizaCTMATCTTEROrdemProd TBFerramentas!ID_carteira, TBFerramentas!Codinterno
            If QtdeFaturada <= 0 Then Exit Sub
            Contador = Contador - 1
            TBFerramentas.MoveNext
        Loop
    End If
End If

If QtdeFaturada > 0 Then
    Set TBFerramentas = CreateObject("adodb.recordset")
    TBFerramentas.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & IDprodserv & " order by ID_carteira", Conexao, adOpenKeyset, adLockOptimistic
    If TBFerramentas.EOF = False Then
        TBFerramentas.MoveLast
        NovoValor = Replace(QtdeFaturada, ",", ".")
        Conexao.Execute "Update tbl_Detalhes_Nota_pedidos Set Quantidade = " & NovoValor & " where ID_prod_NF = " & IDprodserv & " and ID_carteira = " & TBFerramentas!ID_carteira & " and Codinterno = '" & TBFerramentas!Codinterno & "'"
    End If
    TBFerramentas.Close
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcAtualizaQtdeFatProdServPed1(IDprodserv As Long, QtdeFaturada As Double, Pedidointerno As Boolean)
On Error GoTo tratar_erro

'Verifica qtde. liberada/faturada dos pedidos deste produto/serviço que seja diferente desta NF
qt = 0
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "Select Sum(NFPP.Quantidade) as qt from (tbl_dados_nota_fiscal NF INNER JOIN tbl_detalhes_nota NFP ON NFP.ID_nota = NF.ID) INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_prod_NF = NFP.Int_codigo where NF.ID <> " & TxtID & " and NF.Pedido_interno = " & IIf(Pedidointerno = True, 1, 0) & " and NF.int_status = 1 and NFPP.ID_carteira = " & TBFerramentas!ID_carteira & " and NFPP.Codinterno = '" & TBFerramentas!Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCiclo.EOF = False Then
    qt = IIf(IsNull(TBCiclo!qt), 0, TBCiclo!qt)
End If
Qtd = TBFerramentas!Quantidade - qt 'Saldo do produto/serviço

If Contador > 1 Then
    If QtdeFaturada > Qtd Then Qtd_Prog = Qtd Else Qtd_Prog = QtdeFaturada
    QtdeFaturada = QtdeFaturada - Qtd_Prog
Else
    Qtd_Prog = QtdeFaturada
    QtdeFaturada = 0
End If

NovoValor = Replace(Qtd_Prog, ",", ".")
Conexao.Execute "Update tbl_Detalhes_Nota_pedidos Set Quantidade = " & NovoValor & " where ID_prod_NF = " & IDprodserv & " and ID_carteira = " & TBFerramentas!ID_carteira & " and Codinterno = '" & TBFerramentas!Codinterno & "'"

If Pedidointerno = True Then
    If QtdeFaturada <= 0 Then
        Set TBComponente = CreateObject("adodb.recordset")
        TBComponente.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & IDprodserv & " and ID_carteira > " & TBFerramentas!ID_carteira & " and Codinterno = '" & TBFerramentas!Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBComponente.EOF = False Then
            Do While TBComponente.EOF = False
                IDlista = TBComponente!ID_carteira
                Desenho = TBComponente!Codinterno
        
                Conexao.Execute "DELETE from tbl_Detalhes_Nota_pedidos where ID = " & TBComponente!ID
                
                ProcGravarQtdeFaturadaProdServ IDlista, Desenho
                TBComponente.MoveNext
            Loop
        End If
        TBComponente.Close
    End If
    
    ProcGravarQtdeFaturadaProdServ TBFerramentas!ID_carteira, TBFerramentas!Codinterno
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcAtualizaCTMATCTTEROrdemProd(IDlista As Long, Codinterno As String)
On Error GoTo tratar_erro

Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select CP.ID_empresa, CPL.* from Compras_pedido_lista CPL INNER JOIN Compras_pedido CP ON CP.IDPedido = CPL.IDPedido where CPL.IDLista = " & IDlista & " and CPL.Desenho = '" & Codinterno & "' and CPL.Tipo = 'P'", Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then
    If IsNull(TBFIltro!Ordem) = False And TBFIltro!Ordem <> "" And (IsNull(TBFIltro!OS) = True Or TBFIltro!OS = "") Then
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select Codigo from Empresa where Codigo = " & TBFIltro!ID_empresa & " and Agregar_ordem_valor_PC = 'True'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            'Atualiza valor do material na ordem se o produto não tiver movimentação no estoque
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select IDoperacao from estoque_movimentacao where oe = '" & TBFIltro!Ordem & "' and desenho = '" & Codinterno & "' and documento = '" & TBFIltro!Ordem & "' and (operacao = 'SAIDA_ORDEM' or operacao = 'SAIDA_ORDEM_PARCIAL')", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = True Then
                Set TBOrdem = CreateObject("adodb.recordset")
                TBOrdem.Open "Select CTMaterial from producao where Ordem = " & TBFIltro!Ordem, Conexao, adOpenKeyset, adLockOptimistic
                If TBOrdem.EOF = False Then
                    Set TBAliquota = CreateObject("adodb.recordset")
                    TBAliquota.Open "Select Real from Empresa where Codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
                    If TBAliquota.EOF = False Then
                        If TBAliquota!Real = True Then
                            TextoFiltro = "Sum(NFP.dbl_ValorTotal - (CST_ICMS.Valor_ICMS + CST_ICMS.Valor_ICMS_ST + CST_ICMS.Valor_ICMS_SN) - (NFP.Total_PIS_prod + NFP.Total_Cofins_prod))"
                        Else
                            TextoFiltro = "Sum(NFP.dbl_ValorTotal - (CST_ICMS.Valor_ICMS + CST_ICMS.Valor_ICMS_ST + CST_ICMS.Valor_ICMS_SN))"
                        End If
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select ROUND(" & TextoFiltro & ", 2) as Valortotal from ((tbl_Detalhes_Nota_pedidos NFPP INNER JOIN Compras_pedido_lista PP ON PP.IDlista = NFPP.ID_carteira and PP.Desenho = NFPP.Codinterno) INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = NFPP.ID_prod_NF) INNER JOIN tbl_Detalhes_Nota_CST_ICMS CST_ICMS ON CST_ICMS.ID_item = NFP.Int_codigo where PP.Ordem = " & TBFIltro!Ordem, Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then
                            TBOrdem!CTMaterial = IIf(IsNull(TBAbrir!ValorTotal), 0, TBAbrir!ValorTotal)
                        End If
                        TBOrdem.Update
                    End If
                    TBAliquota.Close
                End If
                TBOrdem.Close
            End If
        End If
        TBAbrir.Close
    ElseIf IsNull(TBFIltro!OS) = False And TBFIltro!OS <> "" Then
            ProcAtualizaCTTEROrdem TBFIltro!OS
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Function FunVerifAlteracaoNF(ID_nota As Long, VerifDuplicata As Boolean, NF_servico As Boolean) As Boolean
On Error GoTo tratar_erro

MsgTexto = "pois a " & IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal") & " já foi "
Permitido1 = True
Permitido = True
If NF_cancelada = True Then
    Permitido1 = False
    MsgTexto = MsgTexto & "cancelada"
    Exit Function
End If

If GerarDuplicatas = False Then
    If NF_enviada = True And Frame1(5).Visible = True And NF_servico = True Then
        Permitido1 = False
        MsgTexto = MsgTexto & "enviada"
        Exit Function
    End If
    If NFe_liberada = True Then
        Permitido1 = False
        MsgTexto = MsgTexto & "enviada para SEFAZ"
        Exit Function
    End If
End If

If VerifDuplicata = True Then
    ProcVerifDupEnviadaFinanceiro ID_nota
    If Permitido = False Then
        Permitido1 = False
        MsgTexto = MsgTexto & "enviada para o financeiro"
        Exit Function
    End If
    Permitido = True
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_detalhes_recebimento WHERE ID_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Permitido = False
        MsgTexto = "pois existe(m) duplicata(s) gerada(s)"
    End If
    TBContas.Close
End If

If Opt_entrada = True And cbo_UF = "EX" And SSFaturamento.Tab <> 5 Then
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_Detalhes_Nota_NFe WHERE ID_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Permitido1 = False
        MsgTexto = "pois existem dados de importação cadastrados"
        Exit Function
    End If
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_ContasPagar WHERE ID_nota = " & ID_nota & " and Despesas_NF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Permitido1 = False
        MsgTexto = "pois existem dados de importação cadastrados"
    End If
    TBContas.Close
End If

Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Function
End Function

Sub ProcCalculaTotaisProduto()
On Error GoTo tratar_erro

txt_VlrFrete = Format(Frete, "###,##0.00")
txt_vlrSeguro = Format(Seguro, "###,##0.00")
txt_OutrasDisp = Format(Acessorias, "###,##0.00")
Txt_valor_total_desc = Format(QuantsolicitadoN2, "###,##0.00")

txt_TotalIPI = Format(TotalIPI, "###,##0.00")
txt_BaseICMS = Format(BASECALCULO, "###,##0.00")
txt_VlrICMS = Format(Total_ICMS, "###,##0.00")
txt_baseICMSs = IIf(TotalBCICMSCST = 0, Format(TotalBCICMSCST, "###,##0.00"), Format(TotalBCICMSCST, "###,##0.00"))
txt_ICMSs = IIf(TotalICMSCST = 0, Format(TotalICMSCST, "###,##0.00"), Format(TotalICMSCST, "###,##0.00"))

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub cmdcliente_Click()
On Error GoTo tratar_erro

Sit_REG = 1
Faturamento = True
frmFaturamento_Prod_serv_cliente_forn.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExcluirProduto()
On Error GoTo tratar_erro

If Excluir = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " voce não tem acesso a este recurso.")
    Exit Sub
End If
FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = False Or Permitido = False Then
    MsgBox ("Não é permitido excluir, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
Permitido = False
With listaProdutos
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If MsgBox("Deseja realmente excluir este(s) produto(s)?", vbQuestion + vbYesNo) = vbYes Then GoTo 1 Else Exit Sub
            End If
1:
            Permitido = True
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from tbl_Detalhes_Nota WHERE Int_codigo = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
            If TBFI.EOF = False Then
                '==================================
                Modulo = Formulario
                Evento = "Excluir produto"
                ID_documento = .ListItems(InitFor)
                ProcVerificaTipoNF False
                If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
                Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
                Documento1 = "Cód. interno: " & TBFI!int_Cod_Produto
                ProcGravaEvento
                '==================================
                
                Conexao.Execute "DELETE FROM tbl_detalhes_Nota WHERE int_codigo = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM Faturamento_Relacionamento WHERE Id_produto = " & .ListItems(InitFor) & " or Id_produto_relacionada = " & .ListItems(InitFor) & " "
                Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_NFe WHERE Id_item = " & .ListItems(InitFor)
                Conexao.Execute "DELETE from Estoque_controle_empenho_vendas where ID_Faturamento = " & .ListItems(InitFor)
                
                ProcExcluirDadosTabelaCST .ListItems(InitFor)
                
                Set TBTempo = CreateObject("adodb.recordset")
                TBTempo.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                If TBTempo.EOF = False Then
                    Do While TBTempo.EOF = False
                        IDlista = TBTempo!ID_carteira
                        Desenho = TBTempo!Codinterno
                        Conexao.Execute "DELETE from tbl_Detalhes_Nota_pedidos where ID = " & TBTempo!ID
                        
                        ProcGravarQtdeFaturadaProdServ IDlista, Desenho
                        ProcAtualizaCTMATCTTEROrdemProd IDlista, Desenho
                        ProcExcluirPedidosNF IDlista, Desenho
                        TBTempo.MoveNext
                    Loop
                End If
                TBTempo.Close
            End If
            TBFI.Close
        End If
    Next InitFor
End With
If Permitido = False Then
    MsgBox ("Informe o(s) produto(s) antes de excluir."), vbExclamation
Else
    MsgBox ("Produto(s) excluído(s) com sucesso."), vbInformation
    txtCod_Produto.Text = ""
    txtIDProduto = 0
    ProcLimpaCamposProd
    ProcCarregaLista
    If NF_alterada = True Then ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
    ProcGravarTotaisNota
    ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
    ProcCarregaListaNota (IIf(FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))
    Frame1(9).Enabled = False
    Novo_Nota1 = False
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExcluirPedidosNF(ID_carteira As Long, Codinterno As String)
On Error GoTo tratar_erro

Set TBCotacao = CreateObject("adodb.recordset")
TBCotacao.Open "Select VP.* from vendas_carteira VC INNER JOIN vendas_proposta VP ON VP.Cotacao = VC.Cotacao where VC.Codigo = " & ID_carteira & " and VC.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCotacao.EOF = False Then
    Set TBProposta = CreateObject("adodb.recordset")
    TBProposta.Open "Select VC.* from vendas_carteira VC INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_carteira = VC.Codigo and NFPP.Codinterno = VC.Desenho where NFPP.ID_nota = " & TxtID & " and VC.Cotacao = " & TBCotacao!Cotacao, Conexao, adOpenKeyset, adLockOptimistic
    If TBProposta.EOF = True Then
        Conexao.Execute "DELETE from tbl_proposta_nota where ID_nota = " & TxtID & " and Proposta = '" & TBCotacao!Ncotacao & "' and Revisao = " & TBCotacao!Revisao
    End If
    TBProposta.Close
Else
    Set TBCotacao = CreateObject("adodb.recordset")
    TBCotacao.Open "Select P.* from Compras_pedido_lista CPL INNER JOIN Compras_pedido P ON P.IDpedido = CPL.IDPedido where CPL.IDlista = " & ID_carteira & " and CPL.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBCotacao.EOF = False Then
        Set TBProposta = CreateObject("adodb.recordset")
        TBProposta.Open "Select CPL.* from Compras_pedido_lista CPL INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_carteira = CPL.IDLista and NFPP.Codinterno = CPL.Desenho where NFPP.ID_nota = " & TxtID & " and CPL.IDpedido = " & TBCotacao!IDpedido, Conexao, adOpenKeyset, adLockOptimistic
        If TBProposta.EOF = True Then
            Conexao.Execute "DELETE from tbl_proposta_nota where ID_nota = " & TxtID & " and Proposta = '" & TBCotacao!Pedido & "' and Revisao = 0"
        End If
        TBProposta.Close
    End If
End If
TBCotacao.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExcluirDadosTabelaCST(ID_produto_nota As Long)
On Error GoTo tratar_erro

Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_ICMS WHERE id_item = " & ID_produto_nota
Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_IPI WHERE id_item = " & ID_produto_nota
Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_PIS WHERE id_item = " & ID_produto_nota
Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_Cofins WHERE id_item = " & ID_produto_nota

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcLimpaCamposTotaisNota()
On Error GoTo tratar_erro

If listaProdutos.ListItems.Count = 0 Or Cancelar_alt_totais = True Then
    txtVLRMPA = "0,00"
    txtVLRMOA = "0,00"
    txtBCICMSSN = "0,00"
    txtValorICMSSN = "0,00"
    
    txt_BaseICMS = "0,00"
    txt_VlrICMS = "0,00"
    txt_baseICMSs = "0,00"
    txt_ICMSs = "0,00"
    txt_VlrTotalProd = "0,00"
    txt_VlrFrete = "0,00"
    txt_vlrSeguro = "0,00"
    txt_OutrasDisp = "0,00"
    txt_TotalIPI = "0,00"
    Txt_valor_total_desc = "0,00"
    Txt_valor_total_desc_SUFRAMA = "0,00"
End If

txt_ValorNota = "0,00"

If Listaservicos.ListItems.Count = 0 Then
    txtTotalservicos = "0,00"
    Txt_valorISS = "0,00"
    txtTotal_PIS = "0,00"
    txtTotal_Cofins = "0,00"
    txtTotal_CSLL = "0,00"
    txtTotal_INSS = "0,00"
    txtTotal_IRRF = "0,00"
End If

txt_ValorNota2 = "0,00"

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub cmdProduto_Click()
On Error GoTo tratar_erro

If NFe_liberada = False Then
    Faturamento_ListaProdudos = True
    frmFaturamento_ListaProduto.Show 1
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Form_Load()
On Error GoTo tratar_erro

ProcCarregaToolBar7 Me, 15195, 7, True
ProcCarregaToolBar8 Me, 15195, 4, True
ProcCarregaToolBar1 Me, 15195, 17, True
ProcCarregaToolBar2 Me, 15195, 14, True
ProcCarregaToolBar3 Me, 15195, 11, True
ProcCarregaToolBar4 Me, 15195, 12, True
ProcCarregaToolBar5 Me, 15195, 11, True
ProcCarregaToolBar6 Me, 15195, 14, True
Direitos
ProcLimpaVariaveisPrincipais

USToolBar1.ButtonState(13) = 5

With SSFaturamento
    .TabVisible(0) = True
    .TabsPerRow = 7
    .Tab = 0
    If Formulario = "Faturamento/Nota fiscal/Própria" Then
        Caption = "Administrativo - Faturamento - Nota fiscal - Própria"
        .TabCaption(0) = "Carteira de fatur."
        USToolBar7.Visible = False
        USToolBar8.Visible = True
        Lista_carteira_faturar.Visible = True
        Frame1(25).Visible = False
        Chk_data(0).Visible = False
        Chk_data(1).Visible = False
        Frame1(20).Visible = False
        Frame1(24).Visible = False
        Lista_carteira_faturar.Visible = True
        Frame1(28).Visible = True
        
        chkNaoArredondar.Visible = False
    ElseIf Formulario = "Faturamento/Nota fiscal/Terceiros" Or Formulario = "Estoque/Nota fiscal" Then
            If Formulario = "Faturamento/Nota fiscal/Terceiros" Then Caption = "Administrativo - Faturamento - Nota fiscal - Terceiros" Else Caption = "Estoque - Nota fiscal"
            Label1(34).Caption = "Emitente"
            txt_Razao.ToolTipText = "Emitente"
            cmdCliente.ToolTipText = "Localizar emitente"
            ListaNota.ColumnHeaders(8).Text = "Emitente"
            .TabVisible(0) = False
            .TabsPerRow = 6
            Cmb_empresa.Visible = True
            .Tab = 1
            USToolBar1.ButtonState(13) = 0
            Frame1(28).Visible = False
            
            chkNaoArredondar.Visible = True
        ElseIf Formulario = "Estoque/Ordem de faturamento" Then
                Caption = "Estoque - Ordem de faturamento"
                .TabCaption(0) = "Carteira de pedidos"
                
                USToolBar7.Visible = True
                USToolBar8.Visible = False
                Lista_carteira.Visible = True
                'opt_Ativa.Enabled = False
                'opt_Cancelada.Enabled = False
                'Opt_sim.Enabled = False
                'Opt_nao.Enabled = False
                With txtNFiscal
                    .Locked = True
                    .TabStop = False
                End With
                With Txt_chave_acesso
                    .Locked = True
                    .TabStop = False
                End With
                Frame1(28).Visible = True
                
                chkNaoArredondar.Visible = False
                listaProdutos.ColumnHeaders(21).Width = 1200
                ProcCorrigeFormPedIntCompra
    End If
End With

With cmbfiltrarpor
    .Clear
    If Formulario = "Estoque/Ordem de faturamento" Then
        .AddItem "Cliente"
        .AddItem "Código de referência"
        .AddItem "Código interno"
        .AddItem "Descrição"
        .AddItem "Família"
        .AddItem "Pedido do cliente"
        .AddItem "Pedido interno"
        .AddItem "Programa"
    Else
        .AddItem "Ordem de faturamento"
        .AddItem "Destinatário"
        .AddItem "Código de referência"
        .AddItem "Código interno"
        .AddItem "Descrição"
        .AddItem "Pedido do cliente"
        .AddItem "Pedido interno"
    End If
End With

If Faturamento_NF_Saida = True Then
    With Opt_saida
        .Value = True
        .Enabled = True
    End With
    With Opt_entrada
        .Value = False
        .Enabled = True
    End With
    Frame1(4).Enabled = True
    Aplicacao = "P"
    With txt_Razao
        .Locked = True
        .TabStop = False
    End With
    With txttipocliente
        .Locked = True
        .TabStop = False
    End With
    With Txt_chave_acesso
        .Locked = True
        .TabStop = False
    End With
Else
    With Opt_saida
        .Value = False
        .Enabled = False
    End With
    With Opt_entrada
        .Value = True
        .Enabled = True
    End With
    Frame1(4).Enabled = False
    Aplicacao = "T"
    With txt_Razao
        .Locked = False
        .TabStop = True
    End With
    With txttipocliente
        .Locked = False
        .TabStop = True
    End With
    With Txt_chave_acesso
        .Locked = False
        .TabStop = Tue
    End With
End If

With Cmb_opcao_lista
    .Clear
    .AddItem "Copiar"
    .AddItem "Excluir"
    .AddItem "Validação"
End With
    
ProcCarregaComboEmpresa Cmb_empresa_filtro, False
ProcCarregaComboEmpresa Cmb_empresa, False
ProcCarregaComboUnidade txtun, False
ProcCarregaComboUnidade Cmb_un_com, False
ProcCarregaComboUnidade txtunserv, False
ProcCarregaComboUnidade Cmb_un_com_serv, False
ProcCarregaCamposCombo
TabFiltro.Tabs(Month(Date)).Selected = True
ProcCarregaComboAno cmbAno, "2005", 1
ProcCarregaComboUF cbo_UF, "UF is not null", ""
cmbfiltrarpor = "Código interno"
Msk_data(0).Value = Date
Msk_data(1).Value = Date
txt_DtEmissao.Value = Date

NF_cancelada = False
NF_enviada = False
NF_alterada = False
NFe_liberada = False

Cmb_opcao_lista = "Validação"
Formulario_nota = Formulario

ProcRemoveObjetosResize Me

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCorrigeForm()
On Error GoTo tratar_erro

With SSFaturamento
    If Formulario = "Faturamento/Nota fiscal/Própria" Then
        Frame1(23).Top = Frame1(25).Top
        txtTexto.Width = (Frame1(24).Left + Frame1(24).Width) - txtTexto.Left
        cmbTexto.Width = txtTexto.Width
        Label1(2).Left = txtTexto.Left + (txtTexto.Width / 2) - (Label1(2).Width / 2)
        Frame1(8).Width = Frame1(28).Left - Frame1(8).Left
        Txt_complemento_descricao.Left = txt_VlrFrete_prod.Left
        Txt_complemento_descricao.Width = Txt_GTIN.Left - Txt_complemento_descricao.Left
        Label1(9).Left = Txt_complemento_descricao.Left + (Txt_complemento_descricao.Width / 2) - (Label1(9).Width / 2)
    ElseIf Formulario = "Faturamento/Nota fiscal/Terceiros" Or Formulario = "Estoque/Nota fiscal" Then
            Frame1(8).Width = Frame1(29).Width
            Txt_complemento_descricao.Left = chkNaoArredondar.Left + chkNaoArredondar.Width + 100
            Txt_complemento_descricao.Width = Txt_GTIN.Left - Txt_complemento_descricao.Left
            Label1(9).Left = Txt_complemento_descricao.Left + (Txt_complemento_descricao.Width / 2) - (Label1(9).Width / 2)
        ElseIf Formulario = "Estoque/Ordem de faturamento" Then
                Frame1(8).Width = Frame1(28).Left - Frame1(8).Left
                Txt_complemento_descricao.Left = txt_VlrFrete_prod.Left
                Txt_complemento_descricao.Width = Txt_GTIN.Left - Txt_complemento_descricao.Left
                Label1(9).Left = Txt_complemento_descricao.Left + (Txt_complemento_descricao.Width / 2) - (Label1(9).Width / 2)
    End If
End With
If Formulario <> "Faturamento/Nota fiscal/Própria" Then
    Frame1(5).Visible = False
    With ListaNota
        .ColumnHeaders(8).Width = 6405
        .ColumnHeaders(10).Width = 0
        .ColumnHeaders(12).Width = 0
    End With
Else
    Frame1(5).Visible = True
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaCamposCombo()
On Error GoTo tratar_erro

txtun.ListIndex = -1
Cmb_un_com.ListIndex = -1
txtunserv.ListIndex = -1
Cmb_un_com_serv.ListIndex = -1
Set TBFamilia = CreateObject("adodb.recordset")
If txtIDProduto <> 0 Then
    TBFamilia.Open "Select * from tbl_Detalhes_Nota where Int_codigo = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
    If TBFamilia.EOF = False Then
        If IsNull(TBFamilia!txt_Unid) = False And TBFamilia!txt_Unid <> "" Then txtun = TBFamilia!txt_Unid
        If IsNull(TBFamilia!Unidade_com) = False And TBFamilia!Unidade_com <> "" Then Cmb_un_com = TBFamilia!Unidade_com
    End If
    TBFamilia.Close
End If
If txtidservico <> 0 Then
    TBFamilia.Open "Select * from tbl_Detalhes_Nota where Int_codigo = " & txtidservico, Conexao, adOpenKeyset, adLockOptimistic
    If TBFamilia.EOF = False Then
        If IsNull(TBFamilia!txt_Unid) = False And TBFamilia!txt_Unid <> "" Then txtunserv = TBFamilia!txt_Unid
        If IsNull(TBFamilia!Unidade_com) = False And TBFamilia!Unidade_com <> "" Then Cmb_un_com_serv = TBFamilia!Unidade_com
    End If
    TBFamilia.Close
End If
1:

Exit Sub
tratar_erro:
    If Err.Number = "383" Then GoTo 1
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Form_Resize()
On Error GoTo tratar_erro

ProcVerifiFormulario
Direitos
ProcLimpaVariaveisPrincipais
ProcCarregaComboUnidade txtun, False
ProcCarregaComboUnidade Cmb_un_com, False
ProcCarregaComboUnidade txtunserv, False
ProcCarregaComboUnidade Cmb_un_com_serv, False
ProcCarregaCamposCombo
Formulario_nota = Formulario
If Formulario = "Estoque/Ordem de faturamento" Then
    If Opt_filtrar_ped_int.Value = True Then
        ProcCorrigeColunasForm Lista_carteira, "Estoque/Ordem de faturamento - Carteira de fat. - PI", 30, False, 300, 0, 1800, 1000, 500, 1000, 2200, 750, 900, 800, 850, 1000, 850, 525, 1100, 530, 550, 2800, 550, 650, 650, 1200, 2200, 1000, 1000, 1100, 900, 900, 900, 3000, 0
    Else
        ProcCorrigeColunasForm Lista_carteira, "Estoque/Ordem de faturamento - Carteira de fat. - PC", 30, False, 300, 0, 1800, 1000, 0, 1000, 2200, 750, 0, 0, 850, 1000, 1000, 0, 0, 0, 550, 2800, 550, 0, 0, 1200, 2200, 1000, 0, 1100, 900, 0, 0, 3000, 0
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcImprimir()
On Error GoTo tratar_erro

If Formulario = "Estoque/Ordem de faturamento" Or TxtID <> "" And txtNFiscal = "" Then
    Acao = "abrir o menu para impressão"
    If TxtID = "" Then
        NomeCampo = "a ordem de faturamento"
        ProcVerificaAcao
        Exit Sub
    End If
    frmFaturamento_Prod_serv_imprimirOF.Show 1
Else
    frmFaturamento_Prod_Serv_Imprimir.Show 1
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcAtualizar()
On Error GoTo tratar_erro

If InputBox("Informe a senha para liberar.") = "280362F" Then frmFaturamento_Prod_serv_atualizar.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcAtualizacao()
On Error GoTo tratar_erro

If MsgBox("Deseja realmente executar essa(s) atualização(ões)?", vbQuestion + vbYesNo) = vbYes Then
    Atualizacao = True
    With frmFaturamento_Prod_serv_atualizar
        If Formulario = "Faturamento/Nota fiscal/Terceiros" Or Formulario = "Estoque/Nota fiscal" Then
            DataFiltro = "dt_Saida_Entrada"
            ApicacaoFiltro = "T"
        Else
            DataFiltro = "dt_DataEmissao"
            ApicacaoFiltro = "P"
        End If
        
        If .Chk1.Value = 1 Then
            'Atualiza totais das notas
            'Atualiza valores e impostos dos produtos e serviços
            Set TBVendas = CreateObject("adodb.recordset")
            TBVendas.Open "Select TT.*, NF.ID_empresa, NF.Id_Int_Cliente, NF.Aplicacao, NF.txt_Razao_Nome, NF.txt_UF, NF.TabelaSN, NF.int_TipoNota from tbl_Totais_Nota TT INNER JOIN tbl_Dados_Nota_Fiscal NF ON TT.ID_nota = NF.ID where NF.Alterar = 'False' and NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by TT.ID_nota", Conexao, adOpenKeyset, adLockOptimistic
            If TBVendas.EOF = False Then
                PBLista(0).Min = 0
                PBLista(0).Max = TBVendas.RecordCount
                PBLista(0).Value = 1
                Contador = 0
                Do While TBVendas.EOF = False
                
                    TBVendas!Valor_total_Extenso = FunValorExtenso(TBVendas!dbl_Valor_Total_Nota)
                    TBVendas.Update
                    
                    ProcCarregaDadosNota TBVendas!ID_nota
                    
                    'Produtos
                    Set TBProduto = CreateObject("adodb.recordset")
                    TBProduto.Open "Select * from tbl_Detalhes_Nota where ID_nota = " & TBVendas!ID_nota & " and Tipo = 'P' order by Int_codigo", Conexao, adOpenKeyset, adLockOptimistic
                    If TBProduto.EOF = False Then
                        Do While TBProduto.EOF = False
                                
                            'Atualiza familia dos produtos na nota
                            If TBProduto!int_Cod_Produto <> "'---" And TBProduto!int_Cod_Produto <> "-" And TBProduto!int_Cod_Produto <> "--'" And TBProduto!int_Cod_Produto <> "--" And TBProduto!int_Cod_Produto <> "---" And TBProduto!int_Cod_Produto <> "----" And TBProduto!int_Cod_Produto <> "." Then
                                Set TBItem = CreateObject("adodb.recordset")
                                TBItem.Open "Select Classe from projproduto where desenho = '" & TBProduto!int_Cod_Produto & "'", Conexao, adOpenKeyset, adLockOptimistic
                                If TBItem.EOF = False Then
                                    TBProduto!Familia = IIf(IsNull(TBItem!Classe), "", TBItem!Classe)
                                End If
                                TBItem.Close
                            End If
                                
                            'Impostos
                            Valor_total = IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario) * IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd)
                                
                            'Empresa
                            If IsNull(TBProduto!ID_CFOP) = False And TBProduto!ID_CFOP <> "" Then ProcControleImposto TBProduto!ID_CFOP, TBVendas!Id_Int_Cliente
                            ProcVerifImpostosEmpresa TBVendas!ID_empresa, TBProduto!Retorno, "", False, 0, False, IIf(IsNull(TBVendas!TabelaSN), 0, TBVendas!TabelaSN), Lbl2.Caption
                            TBProduto!PIS_Prod = PIS_Prod
                            If PIS_Prod <> 0 Then TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "0.00") Else TBProduto!Total_PIS_prod = 0
                            TBProduto!Cofins_Prod = Cofins_Prod
                            If Cofins_Prod <> 0 Then TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "0.00") Else TBProduto!Total_Cofins_prod = 0
                            TBProduto!CSLL_Prod = CSLL_Prod
                            If CSLL_Prod <> 0 Then TBProduto!Total_CSLL_prod = Format((Valor_total * CSLL_Prod) / 100, "0.00") Else TBProduto!Total_CSLL_prod = 0
                            TBProduto!IRPJ_Prod = IRPJ_Prod
                            If IRPJ_Prod <> 0 Then TBProduto!Total_IRPJ_prod = Format((Valor_total * IRPJ_Prod) / 100, "0.00") Else TBProduto!Total_IRPJ_prod = 0
                            TBProduto!cpp = CPP_Prod
                            If CPP_Prod <> 0 Then TBProduto!Total_CPP = Format((Valor_total * CPP_Prod) / 100, "0.00") Else TBProduto!Total_CPP = 0
                            TBProduto!ICMS_SN = ICMS_SN
                            If Regime = 1 Then Valor_total = Valor
                            
                            Set TBFI = CreateObject("adodb.recordset")
                            TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), Conexao, adOpenKeyset, adLockOptimistic
                            If TBFI.EOF = False Then
                                'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
                                If DestacaImpostos = "SIM" And TBFI!Retem_PIS_Cofins = True And TBProduto!Retorno = False Then
                                    TBProduto!Valor_Retencao_PIS = (Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100
                                    TBProduto!Valor_Retencao_Cofins = (Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100
                                Else
                                    TBProduto!Valor_Retencao_PIS = 0
                                    TBProduto!Valor_Retencao_Cofins = 0
                                End If
                                
                                If DestacaImpostos = "SIM" Then
                                    If Regime <> 1 And TBVendas!int_TipoNota = 2 And TBProduto!Retorno = False Then
                                        If TemPIS = True Then
                                            PIS_Prod = IIf(IsNull(TBFI!PIS_destaca), 0, TBFI!PIS_destaca)
                                            If PIS_Prod <> 0 Then
                                                TBProduto!PIS_Prod = PIS_Prod
                                                TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00")
                                            End If
                                        Else
                                            TBProduto!PIS_Prod = 0
                                            TBProduto!Total_PIS_prod = 0
                                        End If
                                        If TemCOFINS = True Then
                                            Cofins_Prod = IIf(IsNull(TBFI!Cofins_destaca), 0, TBFI!Cofins_destaca)
                                            If Cofins_Prod <> 0 Then
                                                TBProduto!Cofins_Prod = Cofins_Prod
                                                TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00")
                                            End If
                                        Else
                                            TBProduto!Cofins_Prod = 0
                                            TBProduto!Total_Cofins_prod = 0
                                        End If
                                    End If
                                Else
                                    TBProduto!PIS_Prod = 0
                                    TBProduto!Total_PIS_prod = 0
                                    TBProduto!Cofins_Prod = 0
                                    TBProduto!Total_Cofins_prod = 0
                                End If
                            End If
                            
                            If IsNull(TBProduto!ID_CF) = False Then
                                ProcBuscaTributos (TBProduto!ID_CF)
                                If TBVendas!Aplicacao = "T" Then
                                    If vlrICMS(0, 1) = 0 Then vlrICMS(0, 1) = IIf(IsNull(TBProduto!int_IPI), 0, TBProduto!int_IPI)
                                    If vlrICMS(0, 2) = 0 Then vlrICMS(0, 2) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                                    If vlrICMS(0, 3) = 0 Then vlrICMS(0, 3) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                                    If vlrICMS(0, 4) = 0 Then vlrICMS(0, 4) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                                End If
                                ProcVerificaRegiao TBVendas!txt_UF, TBVendas!Id_Int_Cliente, TBVendas!txt_Razao_Nome
                            End If
                            
                            Set TBFI = CreateObject("adodb.recordset")
                            TBFI.Open "Select Valor_IPI from tbl_Detalhes_Nota_NFe where ID_item = " & TBProduto!Int_codigo & " and Documento_importacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                            If TBFI.EOF = True Then
                                If IsNull(TBProduto!int_IPI) = False And TBProduto!int_IPI <> "" And TBProduto!int_IPI <> "0" Then
                                    If TBProduto!Tem_IPI_frete = True Then
                                        TBProduto!dbl_valoripi = Format(((Valor_total + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)) * IIf(IsNull(TBProduto!int_IPI), 0, TBProduto!int_IPI)) / 100, "###,##0.00")
                                    Else
                                        TBProduto!dbl_valoripi = Format((Valor_total * IIf(IsNull(TBProduto!int_IPI), 0, TBProduto!int_IPI)) / 100, "###,##0.00")
                                    End If
                                Else
                                    TBProduto!dbl_valoripi = 0
                                End If
                            End If
                            TBFI.Close
                            
                            If TBProduto!Retorno = False Then
                                'Impostos
                                Valores = Valor_total + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)
                                
                                ProcVerifImpostosEmpresa TBVendas!ID_empresa, TBProduto!Retorno, "", False, 0, False, IIf(IsNull(TBVendas!TabelaSN), 0, TBVendas!TabelaSN), Lbl2.Caption
                                
                                Set TBFI = CreateObject("adodb.recordset")
                                TBFI.Open "Select valor_pis, valor_cofins from tbl_Detalhes_Nota_NFe where ID_item = " & TBProduto!Int_codigo & " and Documento_importacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                                If TBFI.EOF = False Then
                                    TBProduto!Total_PIS_prod = IIf(IsNull(TBFI!valor_pis), 0, TBFI!valor_pis)
                                    TBProduto!Total_Cofins_prod = IIf(IsNull(TBFI!valor_cofins), 0, TBFI!valor_cofins)
                                End If
                                TBFI.Close
                                
                                PV = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
                                PV = (PV - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
                                IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                                Set TBFI = CreateObject("adodb.recordset")
                                TBFI.Open "Select id_CFOP from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), Conexao, adOpenKeyset, adLockOptimistic
                                If TBFI.EOF = False Then
                                    ProcCalculaBC TBVendas!ID_empresa, TBFI!ID_CFOP, 0, PV, IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi), SomarIPI, SomarIPIST, TemReducaoBC, IIf(TBProduto!NaoArredondar = True, True, False), IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), TBVendas!Aplicacao, TBVendas!Id_Int_Cliente, TBVendas!txt_Razao_Nome
                                End If
                                TBFI.Close
                                
                                If TemICMS = "SIM" Or Suframa = True And Desconto_Suframa = True Then
                                    ICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                    
                                    'Verifica valor da matéria prima aplicada
                                    If MPA = True Then
                                        Set TBAfericao = CreateObject("adodb.recordset")
                                        If TBVendas!int_TipoNota = 1 Then
                                            TBAfericao.Open "Select ICMS_ind from Impostos where ID_empresa = " & TBVendas!ID_empresa & " and ICMS_ind is not null", Conexao, adOpenKeyset, adLockOptimistic
                                        ElseIf TBVendas!Aplicacao = "T" Then
                                                TBAfericao.Open "Select ICMS_ind from Compras_fornecedores where IDcliente = " & TBVendas!Id_Int_Cliente & " and Nome_Razao = '" & TBVendas!txt_Razao_Nome & "' and ICMS_ind is not null", Conexao, adOpenKeyset, adLockOptimistic
                                        End If
                                        If TBAfericao.EOF = False Then
                                            If TBAfericao!ICMS_ind <> "" Then
                                                ICMSOUTROS = TBAfericao!ICMS_ind
                                                TBProduto!VlrMPA = Format((Valores * ICMSOUTROS) / 100, "###,##0.00")
                                            End If
                                        End If
                                        TBAfericao.Close
                                    End If
                                    
                                    ValorPorc = ValorPorc + quantnovo
                                    quantnovo = IIf(IsNull(TBProduto!VlrMPA), 0, TBProduto!VlrMPA)
                                
                                    If ICMS <> 0 Or quantnovo <> 0 Or Suframa = True And Desconto_Suframa = True Then
                                        If quantnovo = 0 Then
                                            IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                                            PV1 = BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)
                    
                                            'Calcula ICMS sem arredondar ou arredondando
                                            If ICMS <> 0 Then
                                                Total_ICMS = Total_ICMS + Format(FunCalulaArredondaICMS(ICMS, PV1, IIf(TBProduto!NaoArredondar = True, True, False)), "###,##0.00")
                                                BASECALCULO = BASECALCULO + PV1
                                            End If
                                        Else
                                            If Faturamento_NF_Saida = True Then
                                                Set TBFIltro = CreateObject("adodb.recordset")
                                                TBFIltro.Open "Select * from empresa where codigo = " & TBVendas!ID_empresa, Conexao, adOpenKeyset, adLockOptimistic
                                            Else
                                                Set TBFIltro = CreateObject("adodb.recordset")
                                                TBFIltro.Open "Select * from clientes where ID = " & TBVendas!Id_Int_Cliente & " and NomeRazao = '" & TBVendas!txt_Razao_Nome & "'", Conexao, adOpenKeyset, adLockOptimistic
                                                If TBFIltro.EOF = True Then
                                                    Set TBFIltro = CreateObject("adodb.recordset")
                                                    TBFIltro.Open "Select * from compras_fornecedores where IDCliente = " & TBVendas!Id_Int_Cliente & " and Nome_Razao = '" & TBVendas!txt_Razao_Nome & "'", Conexao, adOpenKeyset, adLockOptimistic
                                                End If
                                            End If
                                            If TBFIltro.EOF = False Then
                                                If TBFIltro!Simples = True Then PV1 = 0 Else PV1 = quantnovo + TBProduto!Valor_frete + TBProduto!Valor_seguro + TBProduto!Valor_acessorias
                                            End If
                                            TBFIltro.Close
                    
                                            'Calcula ICMS sem arredondar ou arredondando
                                            Total_ICMS = Total_ICMS + Format(FunCalulaArredondaICMS(ICMS, PV1, IIf(TBProduto!NaoArredondar = True, True, False)), "###,##0.00")
                                            BASECALCULO = BASECALCULO + PV1
                                        End If
                                    End If
                                End If
                                
                                'Soma o ICMS do suframa
                                If Suframa = True And Desconto_Suframa = True Then
                                    ProcValorImposto TBVendas!ID, IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), TBVendas!Id_Int_Cliente, TBVendas!txt_Razao_Nome, TBVendas!txt_UF, TBVendas!ID_empresa, False, IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), IIf(IsNull(TBVendas!Regime), 0, TBVendas!Regime)
                                    TBProduto!Valor_desconto_SUFRAMA = Format((PV1 * IntICMS) / 100, "###,##0.00")
                                    VlrICMS_suframa = VlrICMS_suframa + IIf(IsNull(TBProduto!Valor_desconto_SUFRAMA), 0, TBProduto!Valor_desconto_SUFRAMA)
                                Else
                                    TBProduto!Valor_desconto_SUFRAMA = 0
                                End If
                            End If
                            TBProduto.Update
                            
                            ProcCalculaBaseST cbo_UF, IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), TBVendas!Id_Int_Cliente, TBVendas!txt_Razao_Nome, IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario), IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd), BC, BCST, IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete), IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), True, IIf(Left(Cmb_consumidor, 1) = 1, True, False), Cmb_empresa.ItemData(Cmb_empresa.ListIndex)
                            ProcAtualizaCST Cmb_empresa.ItemData(Cmb_empresa.ListIndex), txtIDCliente, txt_Razao, cbo_UF, IIf(Cmb_consumidor = "", 1, Left(Cmb_consumidor, 1)), IIf(cmbFinalidade_emissao = "", 1, Left(cmbFinalidade_emissao, 1))
                            
                            TBProduto.MoveNext
                        Loop
                    End If
                    
                    Valor_total = 0
                    
                    'Serviços
                    Set TBCarteira = CreateObject("adodb.recordset")
                    TBCarteira.Open "Select * from tbl_Detalhes_Nota where ID_nota = " & TBVendas!ID_nota & " and Tipo = 'S' order by Int_codigo", Conexao, adOpenKeyset, adLockOptimistic
                    If TBCarteira.EOF = False Then
                        Do While TBCarteira.EOF = False
                            
                            'Atualiza familia dos serviços na nota
                            If TBCarteira!int_Cod_Produto <> "'---" And TBCarteira!int_Cod_Produto <> "-" And TBCarteira!int_Cod_Produto <> "--'" And TBCarteira!int_Cod_Produto <> "--" And TBCarteira!int_Cod_Produto <> "---" And TBCarteira!int_Cod_Produto <> "----" And TBCarteira!int_Cod_Produto <> "." Then
                                Set TBProduto = CreateObject("adodb.recordset")
                                TBProduto.Open "Select Classe from projproduto where desenho = '" & TBCarteira!int_Cod_Produto & "'", Conexao, adOpenKeyset, adLockOptimistic
                                If TBProduto.EOF = False Then
                                    TBCarteira!Familia = IIf(IsNull(TBProduto!Classe), "", TBProduto!Classe)
                                End If
                                TBProduto.Close
                            End If
                            
                            'Impostos
                            Valor_total = IIf(IsNull(TBCarteira!dbl_ValorUnitario), 0, TBCarteira!dbl_ValorUnitario) * IIf(IsNull(TBCarteira!int_Qtd), 0, TBCarteira!int_Qtd)
                            
                            'Empresa
                            If IsNull(TBCarteira!ID_CFOP) = False And TBCarteira!ID_CFOP <> "" Then ProcControleImposto TBCarteira!ID_CFOP, TBVendas!Id_Int_Cliente
                            ProcVerifImpostosEmpresa TBVendas!ID_empresa, False, TBCarteira!int_Cod_Produto, TBCarteira!Servico_cliente, Valor_total, True, IIf(IsNull(TBVendas!TabelaSN), 0, TBVendas!TabelaSN), Lbl2.Caption
                                
                            If TBCarteira!Imposto_manual_serv <> True Then
                                TBCarteira!PIS_Serv = PIS_Serv
                                If PIS_Serv <> 0 Then TBCarteira!Total_PIS_serv = (Valor_total * PIS_Serv) / 100 Else TBCarteira!Total_PIS_serv = 0
                                TBCarteira!Cofins_Serv = Cofins_Serv
                                If Cofins_Serv <> 0 Then TBCarteira!Total_Cofins_serv = (Valor_total * Cofins_Serv) / 100 Else TBCarteira!Total_Cofins_serv = 0
                                TBCarteira!CSLL_Serv = CSLL_Serv
                                If CSLL_Serv <> 0 Then TBCarteira!Total_CSLL_serv = (Valor_total * CSLL_Serv) / 100 Else TBCarteira!Total_CSLL_serv = 0
                                 TBCarteira!ISS = ISS_Serv
                                If TBCarteira!ISS <> 0 Then TBCarteira!VlrISS = Format((Valor_total * TBCarteira!ISS) / 100, "###,##0.00") Else TBCarteira!VlrISS = 0
                                TBCarteira!INSS_Serv = INSS_Serv
                                If INSS_Serv <> 0 Then TBCarteira!Total_INSS_serv = (Valor_total * INSS_Serv) / 100 Else TBCarteira!Total_INSS_serv = 0
                                TBCarteira!IRPJ_Serv = IRPJ_Serv
                                If IRPJ_Serv <> 0 Then TBCarteira!Total_IRPJ_serv = (Valor_total * IRPJ_Serv) / 100 Else TBCarteira!Total_IRPJ_serv = 0
                                TBCarteira!IRRF_Serv = IRRF_Serv
                                If IRRF_Serv <> 0 Then TBCarteira!Total_IRRF_serv = (Valor_total * IRRF_Serv) / 100 Else TBCarteira!Total_IRRF_serv = 0
                            End If
                            TBCarteira.Update
                            TBCarteira.MoveNext
                        Loop
                    End If
                    TBCarteira.Close
                    
                    TBVendas.MoveNext
                    Contador = Contador + 1
                    PBLista(0).Value = Contador
                Loop
            End If
            TBVendas.Close
            
            Set TBExecucao = CreateObject("adodb.recordset")
            TBExecucao.Open "Select * from tbl_Dados_Nota_Fiscal where Aplicacao = '" & ApicacaoFiltro & "' and " & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by Int_TipoNota, dt_DataEmissao, int_NotaFiscal", Conexao, adOpenKeyset, adLockOptimistic
            If TBExecucao.EOF = False Then
                TBExecucao.MoveLast
                PBLista(0).Min = 0
                PBLista(0).Max = TBExecucao.RecordCount
                PBLista(0).Value = 1
                Contador1 = 0
                TBExecucao.MoveFirst
                Do While TBExecucao.EOF = False
                    TxtID = TBExecucao!ID
                    ProcCarregaDadosNota IIf(TxtID = "", 0, TxtID)
                    ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
                    ProcCarregaLista
                    ProcCarregaListaServicos
                    ProcGravarTotaisNota
                    TBExecucao.MoveNext
                    Contador1 = Contador1 + 1
                    PBLista(0).Value = Contador1
                Loop
            End If
            TBExecucao.Close
        End If
            
        If .Chk2.Value = 1 Then
            'Corrige valor total por FunValorExtenso das duplicatas
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select DR.* from tbl_Detalhes_Recebimento DR INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.ID = DR.ID_nota where NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by DR.id_nota", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                TBAbrir.MoveLast
                PBLista(0).Min = 0
                PBLista(0).Max = TBAbrir.RecordCount
                PBLista(0).Value = 1
                Contador = 0
                TBAbrir.MoveFirst
                Do While TBAbrir.EOF = False
                    TBAbrir!Valor_Extenso = FunValorExtenso(TBAbrir!dbl_Valor)
                    TBAbrir.Update
                    TBAbrir.MoveNext
                    Contador = Contador + 1
                    PBLista(0).Value = Contador
                Loop
            End If
            TBAbrir.Close
        End If
                                       
        If .Chk3.Value = 1 Then
            'Atualiza qtde. faturada e status do produto/servico
            Set TBVendas = CreateObject("adodb.recordset")
            TBVendas.Open "Select * from vendas_carteira order by Codigo", Conexao, adOpenKeyset, adLockOptimistic
            If TBVendas.EOF = False Then
                TBVendas.MoveLast
                PBLista(0).Min = 0
                PBLista(0).Max = TBVendas.RecordCount
                PBLista(0).Value = 1
                Contador = 0
                TBVendas.MoveFirst
                Do While TBVendas.EOF = False
                    Quant = 0
                    Set TBLISTA = CreateObject("adodb.recordset")
                    TBLISTA.Open "Select Sum(NFPP.Quantidade) as Quant from (tbl_Detalhes_Nota_pedidos NFPP INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = NFPP.ID_prod_NF) INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.ID = NFPP.ID_nota where NFPP.ID_carteira = " & TBVendas!CODIGO & " and NFPP.Codinterno = '" & TBVendas!Desenho & "' and NF.int_status = 1 and NF.Pedido_interno = 'True' and NF.int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                    If TBLISTA.EOF = False Then
                        Quant = IIf(IsNull(TBLISTA!Quant), 0, TBLISTA!Quant)
                    End If
                    If Quant <> 0 Then
                        TBVendas!QtdeFaturada = Quant
                        If TBVendas!qtdeliberada < Quant Then TBVendas!qtdeliberada = Quant
                        If Quant >= TBVendas!Quantidade Then TBVendas!Liberacao = "FATURADO" Else TBVendas!Liberacao = "FATURADO PARCIAL"
                        TBVendas.Update
                    End If
                    TBVendas.MoveNext
                    Contador = Contador + 1
                    PBLista(0).Value = Contador
                Loop
            End If
        End If
        
        If .Chk4.Value = 1 Then
            'Atualiza status do pedido
            Set TBVendas = CreateObject("adodb.recordset")
            TBVendas.Open "Select * from vendas_proposta order by cotacao", Conexao, adOpenKeyset, adLockOptimistic
            If TBVendas.EOF = False Then
                TBVendas.MoveLast
                PBLista(0).Min = 0
                PBLista(0).Max = TBVendas.RecordCount
                PBLista(0).Value = 1
                Contador = 0
                TBVendas.MoveFirst
                Do While TBVendas.EOF = False
                    FunAtualizaStatusPropPI TBVendas!Cotacao
                    TBVendas.MoveNext
                    Contador = Contador + 1
                    PBLista(0).Value = Contador
                Loop
            End If
            TBVendas.Close
        End If
        
        If .Chk5.Value = 1 Then
            'Número das notas
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from Estoque_controle_recebimento where Nota_fiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select NF as Nota_fiscal from Estoque_Controle where NF IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select Documento as Nota_fiscal from Estoque_Movimentacao where Documento IS NOT NULL and (Operacao = 'ENTRADA_NOTA_FISCAL' or Operacao = 'ENTRADA_NOTA_FISCAL_CONSIGNAÇÃO') order by IDEstoque", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal

            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select NFiscal as Nota_fiscal from tbl_contas_receber where NFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal

            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select int_NotaFiscal as Nota_fiscal from tbl_Dados_Nota_Fiscal where int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
                
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select int_NotaFiscal as Nota_fiscal from tbl_Dados_Transp where int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
                        
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select IDNotaFiscal as Nota_fiscal from Tbl_DadosAdicionais where IDNotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select int_NotaFiscal as Nota_fiscal from tbl_Detalhes_Nota where int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select int_NotaFiscal as Nota_fiscal from tbl_Detalhes_Recebimento where int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select NF as Nota_fiscal from tbl_proposta_nota where NF IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select int_NotaFiscal as Nota_fiscal from tbl_Totais_Nota where int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
        End If
        
        If .Chk6.Value = 1 Then
            'CNPJ dos fornecedores
            Set TBControleNF = CreateObject("adodb.recordset")
            TBControleNF.Open "Select * FROM tbl_Dados_Nota_Fiscal where Aplicacao = '" & ApicacaoFiltro & "' and " & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "'", Conexao, adOpenKeyset, adLockOptimistic
            If TBControleNF.EOF = False Then
                TBControleNF.MoveLast
                PBLista(0).Min = 0
                PBLista(0).Max = TBControleNF.RecordCount
                PBLista(0).Value = 1
                Contador = 0
                TBControleNF.MoveFirst
                Do While TBControleNF.EOF = False
                    If IsNull(TBControleNF!Id_Int_Cliente) = False And IsNull(TBControleNF!txt_Razao_Nome) = False Then
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select * from Compras_fornecedores where IDCliente = " & TBControleNF!Id_Int_Cliente & " and Nome_Razao = '" & TBControleNF!txt_Razao_Nome & "'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then
                            If TBAbrir!idTipoEmpresa = 1 Then TBControleNF!txt_CNPJ_CPF = TBAbrir!CPF_CNPJ
                            If TBAbrir!Pessoa = "JURÍDICA" Then TBControleNF!txt_tipocliente = "J" Else TBControleNF!txt_tipocliente = "F"
                            TBControleNF.Update
                        End If
                    End If
                    TBControleNF.MoveNext
                    Contador = Contador + 1
                    PBLista(0).Value = Contador
                Loop
            End If
            TBControleNF.Close
        End If
        
        If .chk7.Value = 1 Then
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from tbl_contas_receber order by ID_nota", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                TBAbrir.MoveLast
                PBLista(4).Min = 0
                PBLista(4).Max = TBAbrir.RecordCount
                PBLista(4).Value = 1
                Contador = 0
                TBAbrir.MoveFirst
                Do While TBAbrir.EOF = False
                    Conexao.Execute "Update tbl_Detalhes_Recebimento Set IDContaReceber = " & TBAbrir!IDintconta & " where ID_nota = " & IIf(IsNull(TBAbrir!ID_nota), 0, TBAbrir!ID_nota) & " and txt_parcela = '" & IIf(IsNull(TBAbrir!Parcela), 0, TBAbrir!Parcela) & "'"
                    TBAbrir.MoveNext
                    Contador = Contador + 1
                    PBLista(4).Value = Contador
                Loop
            End If
    
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from tbl_Detalhes_Recebimento", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                TBAbrir.MoveLast
                PBLista(4).Min = 0
                PBLista(4).Max = TBAbrir.RecordCount
                PBLista(4).Value = 1
                Contador = 0
                TBAbrir.MoveFirst
                Do While TBAbrir.EOF = False
                    If IsNull(TBAbrir!IdContaReceber) = True Or TBAbrir!IdContaReceber = "" Then
                        TBAbrir!IdContaReceber = 0
                        TBAbrir.Update
                    End If
                    TBAbrir.MoveNext
                    Contador = Contador + 1
                    PBLista(4).Value = Contador
                Loop
            End If
            TBAbrir.Close
        End If
        
        If .chk8.Value = 1 Then
            'Corrige número sequencial dos boletos
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select DR.* from tbl_Detalhes_Recebimento DR INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.ID = DR.ID_nota where DR.Seq_remessa is not null and NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by DR.Seq_remessa", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                TBAbrir.MoveLast
                PBLista(0).Min = 0
                PBLista(0).Max = TBAbrir.RecordCount
                PBLista(0).Value = 1
                Contador = 0
                TBAbrir.MoveFirst
                Do While TBAbrir.EOF = False
                    If TBAbrir!Seq_remessa <> "" Then
                        If Len(TBAbrir!Seq_remessa) > 1 Then
                            If Right(TBAbrir!Seq_remessa, 4) = ".txt" Then
                                Seq = Left(TBAbrir!Seq_remessa, Len(TBAbrir!Seq_remessa) - 4)
                            Else
                                Seq = TBAbrir!Seq_remessa
                            End If
                        Else
                            If IsNumeric(TBAbrir!Seq_remessa) = False Then
                                Select Case TBAbrir!Seq_remessa
                                    Case "A": Seq = 1
                                    Case "B": Seq = 2
                                    Case "C": Seq = 3
                                    Case "D": Seq = 4
                                    Case "E": Seq = 5
                                    Case "F": Seq = 6
                                    Case "G": Seq = 7
                                    Case "H": Seq = 8
                                    Case "I": Seq = 9
                                    Case "J": Seq = 10
                                    Case "K": Seq = 11
                                    Case "L": Seq = 12
                                    Case "M": Seq = 13
                                    Case "N": Seq = 14
                                    Case "O": Seq = 15
                                    Case "P": Seq = 16
                                    Case "Q": Seq = 17
                                    Case "R": Seq = 18
                                    Case "S": Seq = 19
                                    Case "T": Seq = 20
                                    Case "U": Seq = 21
                                    Case "V": Seq = 22
                                    Case "X": Seq = 23
                                    Case "W": Seq = 24
                                    Case "Y": Seq = 25
                                    Case "Z": Seq = 26
                                End Select
                            Else
                                Seq = TBAbrir!Seq_remessa
                            End If
                        End If
                        TBAbrir!Seq_remessa = Seq
                        TBAbrir.Update
                    End If
                    TBAbrir.MoveNext
                    Contador = Contador + 1
                    PBLista(0).Value = Contador
                Loop
            End If
            TBAbrir.Close
        End If
        
        If .chk9.Value = 1 Then
            'Corrige valores (retorno)
            IDlista = 0
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select NFP.*, TN.dbl_Valor_Total_Nota from (tbl_Totais_Nota TN INNER JOIN tbl_Detalhes_Nota NFP ON TN.ID_nota = NFP.ID_Nota) INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.ID = TN.ID_nota where NFP.retorno = 'True' and NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by NFP.ID_Nota", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                TBAbrir.MoveLast
                PBLista(0).Min = 0
                PBLista(0).Max = TBAbrir.RecordCount
                PBLista(0).Value = 1
                Contador = 0
                TBAbrir.MoveFirst
                Do While TBAbrir.EOF = False
                    Valor = TBAbrir!dbl_Valor_Total_Nota
                    
                    Valor1 = 0
                    Set TBFI = CreateObject("adodb.recordset")
                    TBFI.Open "Select Sum(dbl_ValorTotal) as Valor1 from tbl_Detalhes_Nota where ID_nota = " & TBAbrir!ID_nota, Conexao, adOpenKeyset, adLockOptimistic
                    If TBFI.EOF = False Then
                        Valor1 = IIf(IsNull(TBFI!Valor1), 0, TBFI!Valor1)
                    End If
                    TBFI.Close
                    If Format(Valor, "###,##0.00") < Format(Valor1, "###,##0.00") Then TBAbrir!Soma_retorno_totalnf = False Else TBAbrir!Soma_retorno_totalnf = True
                    
                    TBAbrir.Update
                    TBAbrir.MoveNext
                    Contador = Contador + 1
                    PBLista(0).Value = Contador
                Loop
            End If
            TBAbrir.Close
        End If
        
        If .chk10.Value = 1 Then
            'Atualiza totais contas (receber/pagar) e quantidades das notas
            Set TBTotaisnota = CreateObject("adodb.recordset")
            TBTotaisnota.Open "Select TT.*, NF.int_TipoNota, NF.TipoNF, NF.Id_Int_Cliente from tbl_Totais_Nota TN INNER JOIN tbl_Dados_Nota_Fiscal NF ON TT.ID_nota = NF.ID where NF.int_TipoNota = 1 and NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by NF.ID", Conexao, adOpenKeyset, adLockOptimistic
            If TBTotaisnota.EOF = False Then
                TBTotaisnota.MoveLast
                PBLista(0).Min = 0
                PBLista(0).Max = TBTotaisnota.RecordCount
                PBLista(0).Value = 1
                Contador = 0
                TBTotaisnota.MoveFirst
                Do While TBTotaisnota.EOF = False
                    Valor_Retencao_PIS = IIf(IsNull(TBTotaisnota!Total_retencao_PIS), 0, TBTotaisnota!Total_retencao_PIS)
                    Valor_Retencao_Cofins = IIf(IsNull(TBTotaisnota!Total_retencao_Cofins), 0, TBTotaisnota!Total_retencao_Cofins)
                    
                    If Valor_Retencao_PIS > 0 Or Valor_Retencao_Cofins > 0 Then
                    
                        'Soma total de rentenção de serviços
                        Valor_Retencao_Servico = 0
                        Set TBProduto = CreateObject("adodb.recordset")
                        TBProduto.Open "Select * from tbl_Detalhes_Nota where id_nota = " & TBTotaisnota!ID_nota & " and Tipo = 'S' and (Retencao_PIS = 'True' or Retencao_Cofins = 'True' or Retencao_CSLL = 'True' or Retencao_INSS = 'True' or Retencao_IRRF = 'True' or Retencao_ISSQN = 'True')", Conexao, adOpenKeyset, adLockOptimistic
                        Do While TBProduto.EOF = False
                            If TBProduto!Retencao_PIS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_PIS_serv), 0, TBProduto!Total_PIS_serv)
                            If TBProduto!Retencao_Cofins = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_Cofins_serv), 0, TBProduto!Total_Cofins_serv)
                            If TBProduto!Retencao_CSLL = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_CSLL_serv), 0, TBProduto!Total_CSLL_serv)
                            If TBProduto!Retencao_INSS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_INSS_serv), 0, TBProduto!Total_INSS_serv)
                            If TBProduto!Retencao_ISSQN = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!VlrISS), 0, TBProduto!VlrISS)
                            If TBProduto!Retencao_IRRF = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_IRRF_serv), 0, TBProduto!Total_IRRF_serv)
                            TBProduto.MoveNext
                        Loop
                        
                        'Verifica produtos de remessa
                        qt = 0
                        Set TBProduto = CreateObject("adodb.recordset")
                        TBProduto.Open "Select Sum(dbl_ValorTotal) as qt from tbl_Detalhes_Nota where id_nota = " & TBTotaisnota!ID_nota & " and Remessa = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBProduto.EOF = False Then
                            qt = IIf(IsNull(TBProduto!qt), 0, TBProduto!qt)
                        End If
                        
                        'Verifica produtos de retorno que somam o valor no total da nota
                        VlrTotalRetorno = 0
                        Set TBProduto = CreateObject("adodb.recordset")
                        TBProduto.Open "Select Sum(dbl_ValorTotal) as VlrTotalRetorno from tbl_Detalhes_Nota where id_nota = " & TBTotaisnota!ID_nota & " and Tipo = 'P' and Retorno = 'True' and Soma_retorno_totalnf = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBProduto.EOF = False Then
                            VlrTotalRetorno = IIf(IsNull(TBProduto!VlrTotalRetorno), 0, TBProduto!VlrTotalRetorno)
                        End If
                        TBProduto.Close
                        
                        Controle = 0
                        nPagto = 0
                        Valor_Duplicatas = 0
                        Valor1 = 0
                        ValorTotal = 0
                        Set TBProduto = CreateObject("adodb.recordset")
                        TBProduto.Open "Select * from tbl_Detalhes_Recebimento where id_nota = " & TBTotaisnota!ID_nota, Conexao, adOpenKeyset, adLockOptimistic
                        If TBProduto.EOF = False Then
                            nPagto = TBProduto.RecordCount
                            Do While TBProduto.EOF = False
                                Valor = IIf(IsNull(TBTotaisnota!dbl_Valor_Total_Nota_Serv), 0, TBTotaisnota!dbl_Valor_Total_Nota_Serv)
                                
                                'Valor total dos produtos com retenção
                                Valor1 = IIf(IsNull(TBTotaisnota!dbl_Valor_Total_Nota), 0, TBTotaisnota!dbl_Valor_Total_Nota) - Valor_Retencao_PIS - Valor_Retencao_Cofins - Valor
                                ValorTotal = (Valor1 + Valor) - Valor_Retencao_Servico
                                If Valor_Retencao_Servico = 0 Then
                                    If TBTotaisnota!int_TipoNota = 2 And (TBTotaisnota!TipoNF = "SA" Or TBTotaisnota!TipoNF = "M1SA") Then
                                        'Valor total dos serviços com retenção
                                        txtIDCliente = TBTotaisnota!Id_Int_Cliente
                                        ProcVerificaEmpresaCliente
                                        If Permitido = True Then ProcVerificaImposto
                                    End If
                                End If
                                            
                                mxValorPag = Format((ValorTotal - VlrTotalRetorno - qt) / nPagto, "###,##0.00")
                                For Init = 1 To nPagto
                                    PAGTO = mxPagto(1, Init - 1)
                                    With lst_Duplicata
                                        TBProduto!dbl_Valor = Format(mxValorPag, "###,##0.00")
                                    End With
                                Next Init
                                TBProduto.MoveNext
                            Loop
                        End If
                        TBProduto.Close
                    End If
                    
                    'Grava valor total a receber/pagar na tabela de totais da NF
                    Set TBReceber = CreateObject("adodb.recordset")
                    TBReceber.Open "Select Sum(dbl_Valor) as Valor from tbl_Detalhes_Recebimento where ID_nota = " & TBTotaisnota!ID_nota, Conexao, adOpenKeyset, adLockOptimistic
                    If TBReceber.EOF = False Then
                        TBTotaisnota!Valor_total_receber_pagar = IIf(IsNull(TBReceber!Valor), 0, TBReceber!Valor)
                    End If
                    TBReceber.Close
                    
                    Quant = 0
                    Set TBLISTA = CreateObject("adodb.recordset")
                    TBLISTA.Open "Select Sum(int_Qtd) as Quant from tbl_Detalhes_Nota where ID_nota = " & TBTotaisnota!ID_nota & " and Tipo = 'P' and Retorno = 'False' and Remessa = 'False'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBLISTA.EOF = False Then
                        Quant = IIf(IsNull(TBLISTA!Quant), 0, TBLISTA!Quant)
                    End If
                    TBTotaisnota!Qtde_total_prod = Quant
                    
                    Quant = 0
                    Set TBLISTA = CreateObject("adodb.recordset")
                    TBLISTA.Open "Select Sum(int_Qtd) as Quant from tbl_Detalhes_Nota where ID_nota = " & TBTotaisnota!ID_nota & " and Tipo = 'S'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBLISTA.EOF = False Then
                        Quant = IIf(IsNull(TBLISTA!Quant), 0, TBLISTA!Quant)
                    End If
                    TBTotaisnota!Qtde_total_serv = Quant
                    
                    TBTotaisnota.Update
                    TBTotaisnota.MoveNext
                    Contador = Contador + 1
                    PBLista(0).Value = Contador
                Loop
            End If
            TBTotaisnota.Close
        End If
        
        If .chk11.Value = 1 Then
            'Atualiza saldo dos produtos (relacionamento)
            Conexao.Execute "Update NFP Set Saldo = int_Qtd - (Select ROUND(ISNULL(SUM(FR.Qtde),0), 3) from Faturamento_Relacionamento FR where FR.Id_produto_relacionada = Int_codigo or FR.Id_produto = Int_codigo) from tbl_Detalhes_Nota NFP"
        End If
        
        If .chk12.Value = 1 Then
            'Atualiza valor de retenção de PIS e Cofins
            IDlista = 0
            Valor_Retencao_PIS = 0
            Valor_Retencao_Cofins = 0
            Valor_total = 0
            
            Set TBProduto = CreateObject("adodb.recordset")
            TBProduto.Open "Select NFP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.ID = NFP.ID_nota where NF.int_TipoNota = 1 and NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by NF.ID", Conexao, adOpenKeyset, adLockOptimistic
            If TBProduto.EOF = False Then
                TBProduto.MoveLast
                PBLista(0).Min = 0
                PBLista(0).Max = TBProduto.RecordCount
                PBLista(0).Value = 1
                Contador = 0
                TBProduto.MoveFirst
                Do While TBProduto.EOF = False
                    If IDlista <> TBProduto!ID_nota Then
                        Valor_Retencao_PIS = 0
                        Valor_Retencao_Cofins = 0
                    End If
                        
                    Valores = Format(IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario) * TBProduto!int_Qtd, "###,##0.00")
                    If TBProduto!Retorno = False Then
                        'Impostos
                        Valor_total = Format(Valores + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), "###,##0.00")
                        
                        Set TBFIltro = CreateObject("adodb.recordset")
                        TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where ID = " & TBProduto!ID_nota, Conexao, adOpenKeyset, adLockOptimistic
                        If TBFIltro.EOF = False Then
                            ProcControleImposto IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), IIf(IsNull(TBFIltro!Id_Int_Cliente), 0, TBFIltro!Id_Int_Cliente)
                            If IsNull(TBProduto!ID_CF) = False And TBProduto!ID_CF <> "" Then
                                ProcBuscaTributos TBProduto!ID_CF
                                Set TBFI = CreateObject("adodb.recordset")
                                TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & TBProduto!ID_CF, Conexao, adOpenKeyset, adLockOptimistic
                                If TBFI.EOF = False Then
                                    
                                    'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
                                    If DestacaImpostos = "SIM" And TBFI!Retem_PIS_Cofins = True And TBProduto!Retorno = False Then
                                        TBProduto!Valor_Retencao_PIS = (Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100
                                        TBProduto!Valor_Retencao_Cofins = (Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100
                                    Else
                                        TBProduto!Valor_Retencao_PIS = 0
                                        TBProduto!Valor_Retencao_Cofins = 0
                                    End If
                                End If
                                TBFI.Close
                            End If
                        End If
                        TBFIltro.Close
                    
                        'Soma retenção de PIS/Cofins
                        If Retencao_PIS_Cofins = True Then
                            Valor_Retencao_PIS = Valor_Retencao_PIS + IIf(IsNull(TBProduto!Valor_Retencao_PIS), 0, TBProduto!Valor_Retencao_PIS)
                            Valor_Retencao_Cofins = Valor_Retencao_Cofins + IIf(IsNull(TBProduto!Valor_Retencao_Cofins), 0, TBProduto!Valor_Retencao_Cofins)
                        End If
                        
                        NovoValor = Replace(Valor_Retencao_PIS, ",", ".")
                        NovoValor1 = Replace(Valor_Retencao_Cofins, ",", ".")
                        Conexao.Execute "Update tbl_Totais_Nota Set Total_retencao_PIS = " & NovoValor & ", Total_retencao_Cofins = " & NovoValor1 & " where ID_nota = " & TBProduto!ID_nota
                        
                        TBProduto.Update
                    End If
                    IDlista = TBProduto!ID_nota
                    TBProduto.MoveNext
                    Contador = Contador + 1
                    PBLista(0).Value = Contador
                Loop
            End If
            TBProduto.Close
        End If
                
        MsgBox ("Atualização efetuada com sucesso."), vbInformation
        '==================================
        Modulo = Formulario
        Evento = "Atualizar"
        ID_documento = 0
        Documento = ""
        Documento1 = ""
        ProcGravaEvento
        '==================================
        
        Atualizacao = False
    End With
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub imgCalendario_Click()
On Error GoTo tratar_erro

Faturamento = True
Compras_Pedido = False
Compras_Requisicao = False
Compras_Fallow_up = False
Vendas_Carteira = False
Vendas_Proposta = False
Vendas_PI = False
Manutencao = False
Compras_Cotacao = False
Usuarios = False
Inspecao_recebimento = False
Funcionario = False
RNC = False
SolicitacaoAcao = False
Troca_Duplicata = False
Financeiro_Contas_Recebidas = False
Engenharia_Normas = False
Qualidade_PPAP_PSW = False
Qualidade_PPAP_Plano = False
Qualidade_PPAP_FMEA = False
Qualidade_sistema = False
Engenharia = False
Compras_Fornecedores = False
Vendas_Programacao = False
Outros_solicitacaoPCP = False
Estoque_recebimento = False
Sit_Data = 1
FrmCalendario.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExcluir()
On Error GoTo tratar_erro

If Excluir = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " voce não tem acesso a este recurso.")
    Exit Sub
End If
Permitido = False
If Formulario = "Estoque/Ordem de faturamento" Then
    DocumentoTexto = "orden(s) de faturamento"
    DocumentoTexto2 = "Orden(s) de faturamento"
Else
    DocumentoTexto = "nota(s) fiscal(ais)"
    DocumentoTexto2 = "Nota(s) fiscal(ais)"
End If
With ListaNota
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If MsgBox("Deseja realmente excluir esta(s) " & DocumentoTexto & "?", vbQuestion + vbYesNo) = vbNo Then Exit Sub
            End If
            Permitido = True
            Set TBAliquota = CreateObject("adodb.recordset")
            TBAliquota.Open "Select * from tbl_Dados_Nota_Fiscal WHERE ID = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
            If TBAliquota.EOF = False Then
                '==================================
                Modulo = Formulario
                Evento = "Excluir"
                ID_documento = .ListItems(InitFor)
                If IsNull(TBAliquota!int_NotaFiscal) = True Or TBAliquota!int_NotaFiscal = "" Then DocumentoTexto1 = "Nº ordem: " & TBAliquota!ID Else DocumentoTexto1 = "Nº nota: " & TBAliquota!int_NotaFiscal
                Documento = DocumentoTexto1 & " - Tipo: " & TBAliquota!TipoNF & " - Série: " & TBAliquota!Serie
                Documento1 = ""
                ProcGravaEvento
                '==================================
                
                ProcExcluirCST .ListItems(InitFor)
                ProcExcluirArquivosRemessa .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Dados_Nota_Fiscal WHERE id = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Dados_Nota_Fiscal_nfe WHERE id_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Totais_Nota WHERE id_nota = " & .ListItems(InitFor)
                
                If TBAliquota!int_TipoNota = 2 Then
                    'Atualiza valor do material/terceiros na ordem
                    Set TBProduto = CreateObject("adodb.recordset")
                    TBProduto.Open "Select NFPP.* from (Compras_pedido_lista P INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON P.IDLista = NFPP.ID_carteira and P.Desenho = NFPP.Codinterno) INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = NFPP.ID_prod_NF where NFPP.ID_nota = " & TBAliquota!ID & " and NFP.Tipo = 'P' and P.Tipo = 'P'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBProduto.EOF = False Then
                        Do While TBProduto.EOF = False
                            IDlista = TBProduto!ID_carteira
                            Desenho = TBProduto!Codinterno
                            Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_pedidos WHERE ID = " & TBProduto!ID
                            
                            ProcAtualizaCTMATCTTEROrdemProd IDlista, Desenho
                            TBProduto.MoveNext
                        Loop
                    End If
                    
                    'Atualiza valor do terceiro na OS e ordem
                    Set TBProduto = CreateObject("adodb.recordset")
                    TBProduto.Open "Select NFPP.* from (Compras_pedido_lista P INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON P.IDLista = NFPP.ID_carteira and P.Desenho = NFPP.Codinterno) INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = NFPP.ID_prod_NF where NFPP.ID_nota = " & TBAliquota!ID & " and NFP.Tipo = 'S' and P.Tipo = 'S'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBProduto.EOF = False Then
                        Do While TBProduto.EOF = False
                            IDlista = TBProduto!ID_carteira
                            Desenho = TBProduto!Codinterno
                            Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_pedidos WHERE ID = " & TBProduto!ID
                            
                            ProcAtualizaCTTEROrdemServ IDlista, Desenho
                            TBProduto.MoveNext
                        Loop
                    End If
                    TBProduto.Close
                Else
                    ProcAtualizaDadosPedido .ListItems(InitFor), True
                End If
                
                'Empenho da OF
                Conexao.Execute "DELETE from ECEV from Estoque_Controle_Empenho_Vendas ECEV INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = ECEV.ID_faturamento where NFP.ID_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Detalhes_Nota WHERE ID_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Detalhes_Recebimento WHERE id_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Dados_Transp WHERE id_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_DadosAdicionais WHERE id_nota = " & .ListItems(InitFor)
                ProcExcluirContas .ListItems(InitFor), IIf(TBAliquota!int_TipoNota = 1, True, False), IIf(TBAliquota!int_TipoNota = 2, True, False), TBAliquota!txt_tipocliente
                
                'Despesas importação
                Conexao.Execute "DELETE FROM tbl_ContasPagar WHERE id_nota = " & .ListItems(InitFor) & " and Despesas_NF = 'True'"
                
                Conexao.Execute "DELETE FROM tbl_proposta_nota WHERE id_nota = " & .ListItems(InitFor)
            End If
        End If
    Next InitFor
End With
If Permitido = False Then
    MsgBox ("Informe a(s) " & DocumentoTexto & " antes de excluir."), vbExclamation
Else
    MsgBox (DocumentoTexto2 & " excluída(s) com sucesso."), vbInformation
    ProcLimpaCamposNota
    'ProcLimparTudo
    ListaNota.ListItems.Clear
    ProcCarregaListaNota (1)
    Frame1(6).Enabled = False
    Novo_Nota = False
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcAtualizaCTTEROrdemServ(IDlista As Long, Codinterno As String)
On Error GoTo tratar_erro

Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select OS from Compras_pedido_lista where IDLista = " & IDlista & " and Desenho = '" & Codinterno & "' and Tipo = 'S' and OS IS NOT NULL and OS <> 0", Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then ProcAtualizaCTTEROrdem TBFIltro!OS
TBFIltro.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcLocalizar()
On Error GoTo tratar_erro

frm_Localizarnota.Show 1
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcNovo()
On Error GoTo tratar_erro

If Incluir = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If FunVerifRegimeEmpresa(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = 1 Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select Tabela FROM Impostos_TabelaDAS where ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Ativado = 1 group by Tabela", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = True Then
        MsgBox ("Não é permitido criar nota fiscal, pois não existe nenhuma tabela do simples nacional ativa."), vbExclamation
        TBAbrir.Close
        Exit Sub
    End If
    TBAbrir.Close
End If

ProcLimpaCamposNota
'ProcLimparTudo
opt_Ativa = True
Novo_Nota = True
If Faturamento_NF_Saida = True Then
    With Opt_saida
        .Enabled = True
        .Value = True
    End With
    Opt_entrada.Enabled = True
Else
    Opt_saida.Enabled = False
    With Opt_entrada
        .Enabled = True
        .Value = True
    End With
End If
Faturamento_Vendas_PI = False
frmfaturamento_Nova_Nota.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcLimparTudo()
On Error GoTo tratar_erro

Novo_Nota1 = False
Novo_Nota2 = False
Novo_Nota3 = False
Frame1(9).Enabled = False
Frame1(12).Enabled = False
txtIDProduto = 0
txtidservico = 0
txtCod_Produto.Text = ""
ProcLimpaCamposProd
'listaProdutos.ListItems.Clear
txtcodServ.Text = ""
ProcLimpaCamposServicos
Listaservicos.ListItems.Clear
'ProcLimpaCamposTotaisNota
ProcLimpaCamposTransp
txtDados_Corpo = ""
txtDados_DadosAdicionais = ""
'ProcLimpaCamposDuplicata

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcNovoPedido(Cotacao As Long, Pedido_int As Boolean)
On Error GoTo tratar_erro

If Pedido_int = True Then
    NomeTabelaFiltro = "vendas_proposta"
    NomeCampoFiltro = "cotacao"
    NomeTabelaFiltro1 = "clientes"
Else
    NomeTabelaFiltro = "Compras_pedido"
    NomeCampoFiltro = "IDpedido"
    NomeTabelaFiltro1 = "Compras_fornecedores"
End If

Set TBProposta = CreateObject("adodb.recordset")
TBProposta.Open "Select * from " & NomeTabelaFiltro & " where " & NomeCampoFiltro & " = " & Cotacao, Conexao, adOpenKeyset, adLockOptimistic
If TBProposta.EOF = False Then
    Set TBClientes = CreateObject("adodb.recordset")
    If Pedido_int = True Then NomeCampoFiltro1 = TBProposta!IDCliente Else NomeCampoFiltro1 = TBProposta!idfornecedor
    TBClientes.Open "Select * from " & NomeTabelaFiltro1 & " where idcliente = " & NomeCampoFiltro1, Conexao, adOpenKeyset, adLockOptimistic
    If TBClientes.EOF = False Then
        txtIDCliente.Text = IIf(IsNull(TBClientes!IDCliente), "", TBClientes!IDCliente)
        If IsNull(TBClientes!Tipo_endereco) = False And TBClientes!Tipo_endereco <> "" Then
            Endereco = TBClientes!Tipo_endereco & ": " & IIf(IsNull(TBClientes!Endereco), "", TBClientes!Endereco)
        Else
            Endereco = IIf(IsNull(TBClientes!Endereco), "", TBClientes!Endereco)
        End If
        txt_Endereco = Endereco
        
        If IsNull(TBClientes!Tipo_bairro) = False And TBClientes!Tipo_bairro <> "" Then
            Bairro = TBClientes!Tipo_bairro & ": " & IIf(IsNull(TBClientes!Bairro), "", TBClientes!Bairro)
        Else
            Bairro = IIf(IsNull(TBClientes!Bairro), "", TBClientes!Bairro)
        End If
        txt_Bairro = Bairro
        
        txt_Municipio = IIf(IsNull(TBClientes!Cidade), "", TBClientes!Cidade)
        txtNumero = IIf(IsNull(TBClientes!Numero), "", TBClientes!Numero)
        Txt_CEP = IIf(IsNull(TBClientes!CEP), "", TBClientes!CEP)
        
        If Pedido_int = True Then
            TabelaSN = IIf(IsNull(TBProposta!TabelaSN), 0, TBProposta!TabelaSN)
            txttipocliente = TBProposta!Tipo_cliente
            If TBClientes!idTipoEmpresa = 1 Then txt_CNPJ_CPF.Text = IIf(IsNull(TBClientes!CPF_CNPJ), "", TBClientes!CPF_CNPJ)
            If TBClientes!Tipo = "JP" Or TBClientes!Tipo = "JR" Then txt_IE.Text = IIf(IsNull(TBClientes!RG_IE), "", TBClientes!RG_IE) Else txt_IE = ""
            txt_FoneFAX = IIf(IsNull(TBClientes!Tel01), "", TBClientes!Tel01)
            txt_Razao = IIf(IsNull(TBProposta!Cliente), "", TBProposta!Cliente)
            cbo_UF = IIf(IsNull(TBClientes!UF), "", TBClientes!UF)
        Else
            'NF de remesa
            
            TabelaSN = 0
            
            txttipocliente = Left(TBClientes!Pessoa, 1)
            If TBClientes!Pessoa = "JURÍDICA" Then
                txt_CNPJ_CPF.Text = IIf(IsNull(TBClientes!CPF_CNPJ), "", TBClientes!CPF_CNPJ)
                txt_IE.Text = IIf(IsNull(TBClientes!RG_IE), "", TBClientes!RG_IE)
            Else
                txt_IE = ""
            End If
            txt_FoneFAX = IIf(IsNull(TBClientes!Telefones), "", TBClientes!Telefones)
            txt_Razao = IIf(IsNull(TBProposta!Fornecedor), "", TBProposta!Fornecedor)
            cbo_UF = IIf(IsNull(TBClientes!Estado), "", TBClientes!Estado)
        End If
        UF = cbo_UF
    End If
    TBClientes.Close
End If
TBProposta.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcNovoProduto()
On Error GoTo tratar_erro

If Incluir = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If FunVerifValidacaoRegistro("criar novo", txtDtValidacao, IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal"), "produto", False) = False Then Exit Sub
FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = False Or Permitido = False Then
    MsgBox ("Não é permitido criar novo, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
txtCod_Produto.Text = ""
txtIDProduto = 0
Novo_Nota1 = True
ProcLimpaCamposProd
Frame1(9).Enabled = True
NFe_liberada = False
ProcBloqueiaNfe
If FunVerifNFProdServSemCad(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = False Then ProcLiberaCamposProd Else ProcBloqueiaCamposProd False
txtCod_Produto.SetFocus

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Procnovoservico()
On Error GoTo tratar_erro

If Incluir = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = False Or Permitido = False Then
    MsgBox ("Não é permitido criar novo, " & MsgTexto & "."), vbExclamation
    Exit Sub
End If
txtcodServ.Text = ""
txtidservico = 0
Novo_Nota2 = True
ProcLimpaCamposServicos
Frame1(12).Enabled = True
If FunVerifNFProdServSemCad(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = False Then ProcBloqueiaCamposServ Else ProcBloqueiaCamposServ
txtcodServ.SetFocus

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcSair()
On Error GoTo tratar_erro

If Novo_Nota = True Then
    If MsgBox("A nota fiscal ainda não foi salva, deseja salvar antes de fechar o módulo?", vbYesNo + vbQuestion) = vbYes Then
        ProcGravar
        If Novo_Nota = True Then
            Exit Sub
        Else
            Unload Me
        End If
    End If
End If
If Novo_Nota1 = True Then
    If MsgBox("O produto ainda não foi salvo, deseja salvar antes de fechar o módulo?", vbYesNo + vbQuestion) = vbYes Then
        ProcSalvarProduto
        If Novo_Nota1 = True Then
            Exit Sub
        Else
            Unload Me
        End If
    End If
End If
If Novo_Nota2 = True Then
    If MsgBox("O serviço ainda não foi salvo, deseja salvar antes de fechar o módulo?", vbYesNo + vbQuestion) = vbYes Then
        ProcSalvarServico
        If Novo_Nota2 = True Then
            Exit Sub
        Else
            Unload Me
        End If
    End If
End If
If txtNFiscal <> "" And txtDtValidacao <> "" And Novo_Nota3 = True Then
    If MsgBox("A duplicata ainda não foi enviada para o financeiro, deseja enviar antes de fechar o módulo?", vbYesNo + vbQuestion) = vbYes Then
        ProcEnviarDupFinanceiro IIf(TxtID = "", 0, TxtID), True
        If Novo_Nota3 = True Then
            Exit Sub
        Else
            Unload Me
        End If
    End If
End If
Novo_Nota = False
Novo_Nota1 = False
Novo_Nota2 = False
Novo_Nota3 = False
TotalContas = 0
TotContas = 0
Strsql_Faturamento = ""
Formulario_nota = ""
Unload Me

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcGravar()
On Error GoTo tratar_erro

If Alterar = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If Frame1(6).Enabled = False Then
    ProcVerificaSalvar
    Exit Sub
End If
If NF_enviada = True And optServico = True And opt_Ativa.Value = True Then
    MsgBox ("Não é possivel salvar, pois a nota já foi enviada."), vbExclamation
    Exit Sub
End If
If opt_Ativa.Value = False And NF_cancelada = True Then
    MsgBox ("Não é permitido salvar, pois a nota já foi cancelada."), vbExclamation
    ProcCarregaDadosNota IIf(TxtID = "", 0, TxtID)
    Exit Sub
End If
If FunChecaCampos = False Then Exit Sub
If Formulario <> "Estoque/Ordem de faturamento" Then
    If Novo_Nota = True Then
        If FunVerificaNumeroNF = False Then Exit Sub
    Else
        If FunVerificaNumeroNFAlterar = False Then Exit Sub
    End If
End If
If opt_Cancelada.Value = True Then
    If txtNFiscal <> "" Then
        Set TBEstoque = CreateObject("adodb.recordset")
        TBEstoque.Open "Select EM.Idoperacao from (tbl_dados_nota_fiscal NF INNER JOIN tbl_Detalhes_Nota NFP ON NF.ID = NFP.ID_nota) INNER JOIN Estoque_movimentacao EM ON EM.ID_prod_NF = NFP.Int_codigo where NF.ID = " & TxtID & " and NF.Aplicacao = 'P' and EM.Documento = '" & txtNFiscal & "' and (EM.Operacao = 'SAIDA_NOTA' or EM.Operacao = 'SAIDA_NOTA_PARCIAL')", Conexao, adOpenKeyset, adLockOptimistic
        If TBEstoque.EOF = False Then
            MsgBox ("Não é permitido cancelar esta nota fiscal, pois a mesma já baixou estoque."), vbExclamation
            TBEstoque.Close
            Exit Sub
        End If
        TBEstoque.Close
    End If
    If Txt_obs <> "" Then
        If MsgBox("O motivo do cancelamento foi informado corretamente no campo Observações/Motivo do cancelamento?", vbQuestion + vbYesNo) = vbNo Then
            Txt_obs.SetFocus
            Exit Sub
        End If
    End If
End If
GerarOF = False
ProcVerificaTipoNF False
ProcSalvar TipoNF, Status_nota, Cmb_empresa.ItemData(Cmb_empresa.ListIndex)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcSalvar(TipoNF As String, Status_nota As Integer, ID_empresa As Integer)
On Error GoTo tratar_erro

Permitido2 = False
Set TBproducao = CreateObject("adodb.recordset")
TBproducao.Open "Select * from tbl_dados_nota_fiscal where id = " & IIf(TxtID = "", 0, TxtID), Conexao, adOpenKeyset, adLockOptimistic
If TBproducao.EOF = True Then
    TBproducao.AddNew
    TBproducao!Imprimir = False
    If txtNFiscal <> "" Then
        TBproducao!DtValidacaoOF = Now
        TBproducao!RespValidacaoOF = pubUsuario
    End If
    If Faturamento_NF_Saida = True And IsDate(Txt_hora_emissao) = True Then TBproducao!Hora_emissao = Txt_hora_emissao
    TBproducao!TabelaSN = TabelaSN
    TBproducao!Regime = RegimeEmpresa
Else
    If opt_Ativa.Value = True And TBproducao!Int_status = 1 Then
        If FunVerifValidacaoRegistro("alterar", txtDtValidacao, "mesma", IIf(txtNFiscal = "", "a ordem de faturamento", "a nota fiscal"), False) = False Then Exit Sub
    End If
       
    'Verifica se a nota fiscal já foi cancelada no SEFAZ e não permite mudar o status
    If Formulario <> "Estoque/Ordem de faturamento" And opt_Ativa.Value = True And TBproducao!Int_status = 2 Then
        OF = TBproducao!int_NotaFiscal
        Set TBGravar_NFe = CreateObject("adodb.recordset")
        TBGravar_NFe.Open "Select * from NFE012 where CbdNtfNumero = " & OF & " and CbdNtfSerie = '" & TBproducao!Serie & "' and CbdSituacao <> 0 and CbdAcao <> 'V' order by CbdNtfNumero, CbdNtfSerie", Conexao_NFe, adOpenKeyset, adLockOptimistic
        If TBGravar_NFe.EOF = False Then
            If TBGravar_NFe!CbdStsRetCodigo = 101 Then
                MsgBox ("Não é permitido alterar os dados desta nota, pois a mesma já foi cancelada no SEFAZ."), vbExclamation
                opt_Cancelada.Value = True
                TBGravar_NFe.Close
                Exit Sub
            End If
        End If
        TBGravar_NFe.Close
    End If
    
    'Verifica se a NF é complementar e já possui relacionamento, se sim, não deixa alterar a finalidade
    Set TBGravar_NFe = CreateObject("adodb.recordset")
    TBGravar_NFe.Open "Select ID from tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & TxtID & " and Finalidade_emissao = 2", Conexao, adOpenKeyset, adLockOptimistic
    If TBGravar_NFe.EOF = False And Left(cmbFinalidade_emissao, 1) <> 2 Then
        Set TBGravar_NFe = CreateObject("adodb.recordset")
        TBGravar_NFe.Open "Select ID from Faturamento_Relacionamento where ID_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
        If TBGravar_NFe.EOF = False Then
            MsgBox ("Não é permitido alterar a finalidade de emissão desta " & IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal") & ", pois a mesma já possui relacionamento."), vbExclamation
            TBGravar_NFe.Close
            Exit Sub
        End If
    End If
    TBGravar_NFe.Close
            
    If opt_Cancelada.Value = True And TBproducao!Int_status = 1 Then
        Set TBUsuarios = CreateObject("adodb.recordset")
        TBUsuarios.Open "Select usuarios.* from usuarios INNER JOIN acessos ON usuarios.IDUsuario = Acessos.IDUsuario where usuarios.usuario = '" & pubUsuario & "' and Acessos.Acesso = 'Faturamento/Nota fiscal/Cancelar nota'", Conexao, adOpenKeyset, adLockOptimistic
        If TBUsuarios.EOF = True Then
            Sit_REG = 1
            frmFaturamento_Prod_serv_excluir_dup_aut.Show 1
        End If
    End If
        
    If Formulario <> "Estoque/Ordem de faturamento" And TBproducao!int_NotaFiscal <> txtNFiscal Or TBproducao!int_NotaFiscal = txtNFiscal And TBproducao!dt_DataEmissao <> txt_DtEmissao Then
        If Faturamento_NF_Saida = False Then
            Conexao.Execute "Update ECR set ECR.Nota_fiscal = '" & txtNFiscal & "', ECR.Data_emissao = '" & txt_DtEmissao & "' from (Estoque_controle_recebimento ECR INNER JOIN Compras_pedido CP ON CP.IDpedido = ECR.IDPedido) INNER JOIN tbl_proposta_nota PN ON PN.proposta = CP.Pedido and PN.ID_nota = " & TxtID & " where ECR.Nota_fiscal = '" & TBproducao!int_NotaFiscal & "'"
            Conexao.Execute "Update EC set EC.nf = '" & txtNFiscal & "' from (((Estoque_controle EC INNER JOIN Estoque_movimentacao EM ON EM.IDestoque = EC.IDestoque) INNER JOIN Estoque_controle_recebimento ECR ON ECR.ID = EM.IDEstoque_recebimento) INNER JOIN Compras_pedido CP ON CP.IDpedido = ECR.IDPedido) INNER JOIN tbl_proposta_nota PN ON PN.proposta = CP.Pedido and PN.ID_nota = " & TxtID & " where EC.nf = '" & TBproducao!int_NotaFiscal & "'"
            Conexao.Execute "Update EM set EM.Documento = '" & txtNFiscal & "', EM.Dtemissao = '" & txt_DtEmissao & "' from ((Estoque_movimentacao EM INNER JOIN Estoque_controle_recebimento ECR ON ECR.ID = EM.IDEstoque_recebimento) INNER JOIN Compras_pedido CP ON CP.IDpedido = ECR.IDPedido) INNER JOIN tbl_proposta_nota PN ON PN.proposta = CP.Pedido and PN.ID_nota = " & TxtID & " where EM.Documento = '" & TBproducao!int_NotaFiscal & "'"
        End If
        Conexao.Execute "Update tbl_contas_receber Set NFiscal = '" & txtNFiscal & "' where NFiscal = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update tbl_Dados_Transp Set int_NotaFiscal = '" & txtNFiscal & "' where int_NotaFiscal = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update Tbl_DadosAdicionais Set IDNotaFiscal = '" & txtNFiscal & "' where IDNotaFiscal = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update tbl_Detalhes_Nota Set int_NotaFiscal = '" & txtNFiscal & "' where int_NotaFiscal = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update tbl_Detalhes_Recebimento Set int_NotaFiscal = '" & txtNFiscal & "' where int_NotaFiscal = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update tbl_proposta_nota Set NF = '" & txtNFiscal & "' where NF = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update tbl_Totais_Nota Set int_NotaFiscal = '" & txtNFiscal & "' where int_NotaFiscal = '" & TBproducao!int_NotaFiscal & "'"
    End If
End If

If txt_EntSai <> "__/__/____" Then TBproducao!dt_Saida_Entrada = txt_EntSai Else TBproducao!dt_Saida_Entrada = Null
If mskHoraSaida <> "__:__:__" Then
    If IsDate(mskHoraSaida) = True Then TBproducao!txt_Hora_Saida = mskHoraSaida
Else
    TBproducao!txt_Hora_Saida = Null
End If

TBproducao!Obs = Txt_obs

ProcVerifDupEnviadaFinanceiro IIf(TxtID = "", 0, TxtID)
If NF_enviada = False And Permitido = True Then
    If txtIDCliente <> "" Then
        TBproducao!Id_Int_Cliente = txtIDCliente
    Else
        Set TBClientes = CreateObject("adodb.recordset")
        TBClientes.Open "Select IDCliente from clientes where nomerazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBClientes.EOF = False Then
            TBproducao!Id_Int_Cliente = TBClientes!IDCliente
        Else
            Set TBFornecedor = CreateObject("adodb.recordset")
            TBFornecedor.Open "Select IDCliente from Compras_fornecedores where Nome_Razao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
            If TBFornecedor.EOF = False Then
                TBproducao!Id_Int_Cliente = TBFornecedor!IDCliente
            Else
                TBproducao!Id_Int_Cliente = 0
            End If
            TBFornecedor.Close
        End If
        TBClientes.Close
    End If
    TBproducao!Modelo = Left(Cmb_modelo, 2)
    TBproducao!int_NotaFiscal = IIf(txtNFiscal = "", Null, FunTamanhoTextoZeroEsq(FunSóNumeros(txtNFiscal), 9))
    TBproducao!Serie = IIf(txtSerie = "", Null, txtSerie)
    TBproducao!TipoNF = TipoNF
    If Opt_saida.Value = True Then TBproducao!int_TipoNota = 1 Else TBproducao!int_TipoNota = 2
    TBproducao!txt_Inscr_Substituto = txt_IEST
    TBproducao!txt_Razao_Nome = txt_Razao
    
    If cbo_UF = "EX" Then
        Set TBClientes = CreateObject("adodb.recordset")
        TBClientes.Open "Select CPF_CNPJ from clientes where IDcliente = " & txtIDCliente & " and nomerazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBClientes.EOF = False Then
            TBproducao!txt_CNPJ_CPF = TBClientes!CPF_CNPJ
        Else
            Set TBClientes = CreateObject("adodb.recordset")
            TBClientes.Open "Select CPF_CNPJ from Compras_fornecedores where IDcliente = " & txtIDCliente & " and Nome_Razao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
            If TBClientes.EOF = False Then
                TBproducao!txt_CNPJ_CPF = TBClientes!CPF_CNPJ
            End If
        End If
        TBClientes.Close
    Else
        TBproducao!txt_CNPJ_CPF = txt_CNPJ_CPF
    End If
    
    TBproducao!Numero = txtNumero
    TBproducao!ID_empresa = ID_empresa
    TBproducao!dt_DataEmissao = txt_DtEmissao.Value
    
    If Txt_hora_emissao <> "__:__:__" Then
        If IsDate(Txt_hora_emissao) = True Then TBproducao!Hora_emissao = Txt_hora_emissao
    Else
        TBproducao!Hora_emissao = Null
    End If
    
    TBproducao!txt_Endereco = txt_Endereco
    TBproducao!txt_Bairro = txt_Bairro
    TBproducao!Txt_CEP = Txt_CEP
    TBproducao!txt_Municipio = txt_Municipio
    TBproducao!txt_Fone_Fax = txt_FoneFAX
    TBproducao!txt_UF = cbo_UF
    TBproducao!txt_IE_Cliente = txt_IE
    If Novo_Nota = True Then
        If OutraMoeda = True Then
            TBproducao!Moeda = Moeda
            TBproducao!ValorMoeda = ValorMoeda
        Else
            TBproducao!Moeda = "REAL"
            TBproducao!ValorMoeda = "1"
        End If
    End If
    
    'Ativa ou cancelada
    TBproducao!Int_status = Status_nota
    ProcStatusnota
   
    TBproducao!txt_tipocliente = txttipocliente.Text
    TBproducao!Aplicacao = Aplicacao
    If Faturamento_Vendas_PI = True Then TBproducao!pedido_interno = True Else TBproducao!pedido_interno = False
Else
'Aqui criar cancelamento nota GNFe
    ProcStatusnota
    TBproducao!Int_status = Status_nota
    TBproducao!Serie = IIf(txtSerie = "", Null, txtSerie)
End If
TBproducao.Update
TxtID = TBproducao!ID
ProcAtualizaDadosPedido TxtID, False

Set TBGravar = CreateObject("adodb.recordset")
TBGravar.Open "Select * From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
If TBGravar.EOF = True Then
    TBGravar.AddNew
    TBGravar!ID_nota = TxtID
    TBGravar!Status = Null
End If
If Faturamento_NF_Saida = False Then TBGravar!Chave_acesso = Txt_chave_acesso
'If cmbForma_pagamento <> "" Then TBGravar!Forma_pagamento = Left(cmbForma_pagamento, 1) Else TBGravar!Forma_pagamento = Null
If cmbFinalidade_emissao <> "" Then TBGravar!Finalidade_emissao = Left(cmbFinalidade_emissao, 1) Else TBGravar!Finalidade_emissao = Null
If Cmb_consumidor <> "" Then TBGravar!Consumidor_final = Left(Cmb_consumidor, 1) Else TBGravar!Consumidor_final = Null
If cmbEntrega <> "" Then TBGravar!ID_entrega = cmbEntrega.ItemData(cmbEntrega.ListIndex)

TBGravar.Update

Set TBGravar = CreateObject("adodb.recordset")
TBGravar.Open "Select * from tbl_Totais_Nota where ID_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
If TBGravar.EOF = True Then
    TBGravar.AddNew
    TBGravar!ID_nota = TxtID
    TBGravar!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    ProcVerifImpostosEmpresa Cmb_empresa.ItemData(Cmb_empresa.ListIndex), False, "", False, 0, False, TabelaSN, Lbl2.Caption
    TBGravar!DAS = DAS
    TBGravar.Update
End If
TBGravar.Close

If txtNFiscal = "" Then
    NomeCampo = "ordem de faturamento"
    NomeCampo1 = "N° ordem: " & TxtID
Else
    NomeCampo = "nota fiscal"
    NomeCampo1 = "N° nota: " & txtNFiscal
End If
If Novo_Nota = True Then
    'Grava dados adicionais
    If txtDados_DadosAdicionais <> "" Then
        Set TBCiclo = CreateObject("adodb.recordset")
        TBCiclo.Open "Select * from tbl_dadosadicionais where id_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
        If TBCiclo.EOF = True Then TBCiclo.AddNew
        TBCiclo!ID_nota = TxtID
        TBCiclo!mem_DadosAdicionais = txtDados_DadosAdicionais
        TBCiclo.Update
        TBCiclo.Close
    End If
    
    If GerarOF = False Then MsgBox ("Nova " & NomeCampo & " cadastrada com sucesso."), vbInformation
    Evento = "Novo"
    If txtNFiscal = "" Then
        TextoFiltroVal = "and NF.DtValidacao IS NULL"
        OrdenarFiltro = "order by NF.ID"
    Else
        TextoFiltroVal = "and NF.DtValidacaoOF IS NOT NULL"
        OrdenarFiltro = "order by NNF desc"
    End If
    CamposFiltro = "NF.ID, NF.dt_DataEmissao, NF.dt_Saida_Entrada, NF.int_NotaFiscal, NF.TipoNF, NF.Serie, TN.dbl_Valor_Total_Nota, NF.txt_Razao_Nome, NF.Int_status, NF.Imprimir, NF.ID_empresa, NF.Aplicacao, NF.DtValidacaoOF, NF.DtValidacao"
    Strsql_Faturamento = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & TxtID
    Strsql_FaturamentoTotal = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor1, Sum(TN.Valor_Total_Receber_Pagar) as Valor2 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & TxtID & " and NF.Int_status = 1"
    Strsql_FaturamentoTotalCanc = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor3 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & TxtID & " and NF.Int_status = 2"
    Strsql_FaturamentoNFe = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.TipoNF <> 'SA' AND NF.ID = " & TxtID
    Strsql_FaturamentoNFSe = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.TipoNF = 'SA' AND NF.ID = " & TxtID
    ProcCarregaListaNota (1)
Else
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select NFP.Int_codigo, NFP.Tem_IPI_frete, NFP.ID_CF, NFP.ID_CFOP, NFP.dbl_ValorTotal, NFP.Valor_desconto, NFP.Valor_frete, NFP.int_ICMS, NFP.ICMS_SN, NFP.dbl_ValorIPI, NFP.NaoArredondar, NFP.txt_CST, NFP.CST_IPI, NFP.CST_PIS, NFP.CST_Cofins, NFP.dbl_ValorUnitario, NFP.int_Qtd, NFP.Valor_seguro, NFP.Valor_acessorias, NFP.VlrMPA, TN.Total_DAS from tbl_Detalhes_Nota NFP INNER JOIN tbl_Totais_Nota TN ON TN.ID_nota = NFP.ID_nota where NFP.id_nota = " & TxtID.Text & " and NFP.Remessa = 'False' and NFP.Retorno = 'False' and NFP.Tipo = 'P' order by NFP.int_codigo", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        Do While TBProduto.EOF = False
            ProcRecalculaICMS
            TBProduto.MoveNext
        Loop
        ProcCarregaLista
        ProcGravarTotaisNota
    End If
    
    MsgBox ("Alteração efetuada com sucesso."), vbInformation
    Evento = "Alterar"
    ProcCarregaListaNota (IIf(FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, FunSóNumeros(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))
    If CodigoLista <> 0 And ListaNota.ListItems.Count <> 0 Then
        ListaNota.SelectedItem = ListaNota.ListItems(CodigoLista)
        ListaNota.SetFocus
    End If
End If
1:
    '==================================
    Modulo = Formulario
    ID_documento = TxtID
    ProcVerificaTipoNF False
    Documento = NomeCampo1 & " - Tipo: " & TipoNF & " - Série: " & txtSerie
    Documento1 = ""
    ProcGravaEvento
    '==================================
    NF = txtNFiscal
    Novo_Nota = False
    ProcCarregaDadosNota IIf(TxtID = "", 0, TxtID)

Exit Sub
tratar_erro:
    If Err.Number = "35600" Then GoTo 1
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcGravarTotaisNota()
On Error GoTo tratar_erro

If TxtID = "" Then Exit Sub
FunVerifAlteracaoNF TxtID, True, optServico
If Permitido1 = True And Permitido = True And NF_alterada = False Or Atualizacao = True And NF_alterada = False Or AtualizaImpSN = True And NF_alterada = False Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from tbl_dadosadicionais where id_nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = True Then
        TBAbrir.AddNew
        TBAbrir!mem_DadosAdicionais = Null
    End If
    'FunCarregaCampoDACFOP
    'TBAbrir!mem_DadosAdicionais = txtDados_DadosAdicionaisCategoria
    TBAbrir!IDNotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    TBAbrir!ID_nota = TxtID.Text
    TBAbrir.Update
    TBAbrir.Close
        
    TotalProduto = IIf(txt_VlrTotalProd = "", 0, txt_VlrTotalProd)
    TotalServicos = IIf(txtTotalservicos = "", 0, txtTotalservicos)
    Set TBTotaisnota = CreateObject("adodb.recordset")
    TBTotaisnota.Open "Select * from tbl_totais_nota where id_Nota = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
    If TBTotaisnota.EOF = True Then TBTotaisnota.AddNew
    TBTotaisnota!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    If TxtID.Text <> "" Then TBTotaisnota!ID_nota = TxtID.Text
    TBTotaisnota!dbl_Valor_Total_Produtos = IIf(txt_VlrTotalProd = "", 0, Format(txt_VlrTotalProd, "###,##0.00"))
    TBTotaisnota!dbl_Valor_Total_Nota_Serv = IIf(txtTotalservicos = "", 0, Format(txtTotalservicos, "###,##0.00"))
    TBTotaisnota!Qtde_total_serv = qtdeliberada 'Qtde. serviços
    TBTotaisnota!Qtde_total_prod = qtdeliberar 'Qtde. produtos
    TBTotaisnota!VlrMPA = txtVLRMPA
    
    TBTotaisnota!Valor_total_desconto_SUFRAMA = Format(VlrICMS_suframa, "###,##0.00")
    
    If NF_alterada = False And listaProdutos.ListItems.Count <> 0 Then
        ProcCalculaTotaisProduto
    Else
        txt_VlrFrete = "0,00"
        txt_vlrSeguro = "0,00"
        txt_OutrasDisp = "0,00"
        Txt_valor_total_desc = "0,00"
        
        txt_TotalIPI = "0,00"
        txt_BaseICMS = "0,00"
        txt_VlrICMS = "0,00"
        txt_baseICMSs = "0,00"
        txt_ICMSs = "0,00"
    End If
            
    TBTotaisnota!dbl_Base_ICMS = IIf(txt_BaseICMS = "", 0, Format(txt_BaseICMS, "###,##0.00"))
    TBTotaisnota!dbl_Valor_ICMS = IIf(txt_VlrICMS = "", 0, Format(txt_VlrICMS, "###,##0.00"))
    TBTotaisnota!dbl_Base_ICMS_Subst = IIf(txt_baseICMSs = "", 0, Format(txt_baseICMSs, "###,##0.00"))
    TBTotaisnota!dbl_Valor_ICMS_Subst = IIf(txt_ICMSs = "", 0, Format(txt_ICMSs, "###,##0.00"))
    TBTotaisnota!dbl_Valor_Frete = IIf(txt_VlrFrete = "", 0, Format(txt_VlrFrete, "###,##0.00"))
    TBTotaisnota!dbl_Valor_Seguro = IIf(txt_vlrSeguro = "", 0, Format(txt_vlrSeguro, "###,##0.00"))
    TBTotaisnota!dbl_Desp_Adicionais = IIf(txt_OutrasDisp = "", 0, Format(txt_OutrasDisp, "###,##0.00"))
    TBTotaisnota!dbl_Valor_Total_IPI = IIf(txt_TotalIPI = "", 0, Format(txt_TotalIPI, "###,##0.00"))
    TBTotaisnota!Valor_total_desconto = IIf(Txt_valor_total_desc = "", 0, Format(Txt_valor_total_desc, "###,##0.00"))
    
    'Impostos produtos
    TBTotaisnota!Total_PIS_prod = Format(Valor_PIS_Prod, "###,##0.00")
    TBTotaisnota!Total_Cofins_prod = Format(Valor_Cofins_Prod, "###,##0.00")
    TBTotaisnota!Total_CSLL_prod = Format(Valor_CSLL_Prod, "###,##0.00")
    TBTotaisnota!Total_IRPJ_prod = Format(Valor_IRPJ_Prod, "###,##0.00")
    
    'Impostos serviços
    TBTotaisnota!Total_PIS_serv = Format(Valor_PIS_Serv, "###,##0.00")
    TBTotaisnota!Total_Cofins_serv = Format(Valor_Cofins_Serv, "###,##0.00")
    TBTotaisnota!Total_CSLL_serv = Format(Valor_CSLL_Serv, "###,##0.00")
    TBTotaisnota!dbl_valor_total_iss = Format(TotalISS, "###,##0.00")
    TBTotaisnota!Total_INSS_serv = Format(Valor_INSS_Serv, "###,##0.00")
    TBTotaisnota!Total_IRPJ_serv = Format(Valor_IRPJ_Serv, "###,##0.00")
    TBTotaisnota!Total_IRRF_serv = Format(Valor_IRRF_Serv, "###,##0.00")
    
    txt_ValorNota = Format((TotalProduto + IIf(txt_VlrFrete = "", 0, txt_VlrFrete) + IIf(txt_vlrSeguro = "", 0, txt_vlrSeguro) + IIf(txt_OutrasDisp = "", 0, txt_OutrasDisp) + TotalIPI + TotalICMSCST + TotalServicos) - IIf(Txt_valor_total_desc = "", 0, Txt_valor_total_desc) - VlrICMS_suframa, "###,##0.00")
    
    'Impostos faturamento
    TBTotaisnota!Total_DAS = Format(Valor_DAS + Valor_DAS_Serv, "###,##0.00")
    
    'Retenção de PIS/Cofins
    TBTotaisnota!Total_retencao_PIS = Format(Valor_Retencao_PIS, "###,##0.00")
    TBTotaisnota!Total_retencao_Cofins = Format(Valor_Retencao_Cofins, "###,##0.00")
    
    'Crédito de ICMS
    TBTotaisnota!Total_Credito_ICMS = Credito_ICMS
    
    If txt_ValorNota.Text <> "" Then
        TBTotaisnota!dbl_Valor_Total_Nota = Format(txt_ValorNota.Text, "###,##0.00")
        
        'Valor total de ICMS simples nacional
        ProcCalculaICMSSN
        TBTotaisnota!Valor_total_ICMS_SN = Format(txtValorICMSSN, "###,##0.00")
        
        'Atualiza serie e valor total da nf na tabela Estoque_controle_recebimento
        If Opt_entrada.Value = True Then
            ValoresParcelas = txt_ValorNota
            NovoValor = Replace(ValoresParcelas, ",", ".")
            Conexao.Execute "Update Estoque_controle_recebimento Set Serie = '" & txtSerie & "', Total_Nf = " & NovoValor & " where Nota_fiscal = '" & txtNFiscal & "'"
        End If
    End If

    TBTotaisnota!Valor_total_Extenso = FunValorExtenso(TBTotaisnota!dbl_Valor_Total_Nota)
    TBTotaisnota!Total_retorno = Format(VlrTotalRetorno, "###,##0.00")
    TBTotaisnota!Valor_total_aprox_tributos = Format(Vlr_total_aprox_tributos_prod + Vlr_total_aprox_tributos_serv, "###,##0.00")
    'TBTotaisnota!Valor_total_ICMS_desonerado = Format(ValorICMS_desonerado, "###,##0.00")
    TBTotaisnota!Valor_total_ICMS_FCP = Format(ValorTotalFCP, "###,##0.00")
    TBTotaisnota!Valor_total_ICMS_INT_UF_dest = Format(ValorTotalICMSINTUFDEST, "###,##0.00")
    TBTotaisnota!Valor_total_ICMS_INT_UF_rem = Format(ValorTotalICMSINTUFREM, "###,##0.00")
    
    TBTotaisnota.Update
    TBTotaisnota.Close
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ListaNota_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

If ColumnHeader = "" Then
    With ListaNota
        For InitFor = 1 To .ListItems.Count
            If .ListItems.Item(InitFor).Checked = True Then
                .ListItems.Item(InitFor).Checked = False
            Else
                If Cmb_opcao_lista = "Excluir" Then
                    If FunVerificaRegistroValidadoSemMsg("tbl_Dados_Nota_Fiscal", "ID = " & .ListItems(InitFor), True) = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    
                    Set TBVendas = CreateObject("adodb.recordset")
                    TBVendas.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                    If TBVendas.EOF = False Then
                        'Status da NF
                        If TBVendas!Int_status = 1 Then NF_cancelada = False Else NF_cancelada = True
                        'NF impressa
                        If TBVendas!Imprimir = True Then NF_enviada = True Else NF_enviada = False
                        
                        'NFe liberada
                        NFe_liberada = False
                        If TBVendas!Aplicacao = "P" Then
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select * From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                If IsNull(TBAbrir!Status) = False And TBAbrir!Status <> "" And TBAbrir!Status <> "2" Then NFe_liberada = True
                            End If
                            TBAbrir.Close
                        End If
                        
                        'NF alterada (totalização)
                        If TBVendas!Alterar = True Then NF_alterada = True Else NF_alterada = False
                                    
                        FunVerifAlteracaoNF .ListItems(InitFor), True, IIf(.ListItems(InitFor).ListSubItems(4) = "Serviço(s)", True, False)
                        If Permitido1 = False Then
                            .ListItems.Item(InitFor).Checked = False
                            GoTo Proximo
                        End If
                    End If
                    TBVendas.Close
                    
                    If Opt_saida.Value = True Then
                        ProcVerificaRegistroUtilizadoSemMsg "tbl_contas_receber", "ID_Nota = " & .ListItems(InitFor) & " and LogSit = 'S'"
                    Else
                        ProcVerificaRegistroUtilizadoSemMsg "tbl_ContasPagar", "ID_Nota = " & .ListItems(InitFor) & " and LogSit = 'S'"
                    End If
                    If Permitido = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    ProcVerificaRegistroUtilizadoSemMsg "Faturamento_Relacionamento", "Id_nota = " & .ListItems(InitFor) & " or ID_nota_relacionada = " & .ListItems(InitFor)
                    If Permitido = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    If Formulario = "Faturamento/Nota fiscal/Própria" And .ListItems(InitFor).ListSubItems(3) = "" Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                ElseIf Cmb_opcao_lista = "Validação" Then
                        If Formulario = "Estoque/Ordem de faturamento" Then
                            If .ListItems(InitFor).ListSubItems(10) = "Sim" Then
                                Set TBVendas = CreateObject("adodb.recordset")
                                TBVendas.Open "Select ID From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor) & " and int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                                If TBVendas.EOF = False Then
                                    .ListItems.Item(InitFor).Checked = False
                                    TBVendas.Close
                                    GoTo Proximo
                                End If
                                TBVendas.Close
                            End If
                        Else
                            If .ListItems(InitFor).ListSubItems(3) <> "" Then
                                'NFe liberada
                                Set TBVendas = CreateObject("adodb.recordset")
                                TBVendas.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor) & " and Aplicacao = 'P'", Conexao, adOpenKeyset, adLockOptimistic
                                If TBVendas.EOF = False Then
                                    Set TBAbrir = CreateObject("adodb.recordset")
                                    TBAbrir.Open "Select Status From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                    If TBAbrir.EOF = False Then
                                        If IsNull(TBAbrir!Status) = False And TBAbrir!Status <> "" Then
                                            .ListItems.Item(InitFor).Checked = False
                                            GoTo Proximo
                                        End If
                                    End If
                                    TBAbrir.Close
                                End If
                                TBVendas.Close

                                If .ListItems(InitFor).ListSubItems(10) = "Sim" Then
                                    Set TBEstoque = CreateObject("adodb.recordset")
                                    TBEstoque.Open "Select NF.ID from (tbl_dados_nota_fiscal NF INNER JOIN tbl_Detalhes_Nota NFP ON NF.ID = NFP.ID_nota) INNER JOIN Estoque_movimentacao EM ON EM.ID_prod_NF = NFP.Int_codigo where NF.ID = " & .ListItems(InitFor) & " and NF.Aplicacao = 'P' and EM.Documento = '" & .ListItems(InitFor).ListSubItems(3) & "' and (EM.Operacao = 'SAIDA_NOTA' or EM.Operacao = 'SAIDA_NOTA_PARCIAL')", Conexao, adOpenKeyset, adLockOptimistic
                                    If TBEstoque.EOF = False Then
                                        TBEstoque.Close
                                        .ListItems.Item(InitFor).Checked = False
                                        GoTo Proximo
                                    End If
                                    TBEstoque.Close
                                    
                                    If VerificaContaBaixada(.ListItems(InitFor), "cancelar a validação", False) = True Then
                                        .ListItems.Item(InitFor).Checked = False
                                        GoTo Proximo
                                    End If
                                Else
                                    Set TBAbrir = CreateObject("adodb.recordset")
                                    TBAbrir.Open "Select NF.ID_empresa, NF.dt_Saida_Entrada, NF.Modelo, NF.TabelaSN, NF.Aplicacao, E.Simples, E.Simples1 From tbl_Dados_Nota_Fiscal NF INNER JOIN Empresa E ON E.Codigo = NF.ID_empresa where NF.id = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                    If TBAbrir.EOF = False Then
                                        If TBAbrir!Aplicacao = "P" Then
                                            If TBAbrir!Simples = True And (IsNull(TBAbrir!TabelaSN) = True Or TBAbrir!TabelaSN = 0) Then
                                                .ListItems.Item(InitFor).Checked = False
                                                GoTo Proximo
                                            End If
                                        Else
                                            If IsNull(TBAbrir!dt_Saida_Entrada) = True Or TBAbrir!dt_Saida_Entrada = "" Then
                                                .ListItems.Item(InitFor).Checked = False
                                                GoTo Proximo
                                            End If
                                            Set TBVendas = CreateObject("adodb.recordset")
                                            TBVendas.Open "Select Finalidade_emissao, Chave_acesso From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                            If TBVendas.EOF = True Then
                                                .ListItems.Item(InitFor).Checked = False
                                                GoTo Proximo
                                            Else
                                                If IsNull(TBVendas!Finalidade_emissao) = True Or TBVendas!Finalidade_emissao = "" Or (Left(TBAbrir!Modelo, 2) = "55" Or Left(TBAbrir!Modelo, 2) = "57") And (IsNull(TBVendas!Chave_acesso) = True Or TBVendas!Chave_acesso = "") Then
                                                    .ListItems.Item(InitFor).Checked = False
                                                    GoTo Proximo
                                                End If
                                            End If
                                        End If
                                        Set TBVendas = CreateObject("adodb.recordset")
                                        TBVendas.Open "Select ID_CFOP, Tipo, ID_CF, txt_CST, CST_IPI, CST_PIS, CST_Cofins, N_Referencia, dbl_ValorUnitario From tbl_Detalhes_Nota where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                        If TBVendas.EOF = False Then
                                            Do While TBVendas.EOF = False
                                                If IsNull(TBVendas!ID_CFOP) = True Or TBVendas!ID_CFOP = "" Or TBVendas!ID_CFOP = "0" Then
                                                    .ListItems.Item(InitFor).Checked = False
                                                    GoTo Proximo
                                                End If
                                                If TBVendas!Tipo = "P" Then
                                                    If IsNull(TBVendas!ID_CF) = True Or TBVendas!ID_CF = "" Or TBVendas!ID_CF = "0" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                    If IsNull(TBVendas!txt_CST) = True Or TBVendas!txt_CST = "" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                    If IsNull(TBVendas!CST_IPI) = True Or TBVendas!CST_IPI = "" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                    If IsNull(TBVendas!CST_PIS) = True Or TBVendas!CST_PIS = "" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                    If IsNull(TBVendas!CST_Cofins) = True Or TBVendas!CST_Cofins = "" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                End If
                                                Set TBFI = CreateObject("adodb.recordset")
                                                TBFI.Open "Select ID From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor) & " and (Finalidade_emissao = 1 or Finalidade_emissao = 4)", Conexao, adOpenKeyset, adLockOptimistic
                                                If TBFI.EOF = False Then
                                                    If TBVendas!Tipo = "P" And TBVendas!dbl_ValorUnitario = 0 Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        TBFI.Close
                                                        GoTo Proximo
                                                    End If
                                                End If
                                                TBFI.Close
                                                
                                                If FunVerifCodRefFornSPED(TBAbrir!ID_empresa) = True Then
                                                    If IsNull(TBVendas!N_referencia) = True Or TBVendas!N_referencia = "" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                End If
                                                TBVendas.MoveNext
                                            Loop
                                        End If
                                        TBVendas.Close
                                    End If
                                    TBAbrir.Close
                                    
                                End If
                            End If
                            
                            'Não deixar validar se tiver transportadora sem frete
                            Set TBVendas = CreateObject("adodb.recordset")
                            TBVendas.Open "Select * From tbl_dados_transp where id_nota = " & .ListItems(InitFor) & " and txt_Frete_Conta IS NULL", Conexao, adOpenKeyset, adLockOptimistic
                            If TBVendas.EOF = False Then
                                .ListItems.Item(InitFor).Checked = False
                                GoTo Proximo
                            End If
                            TBVendas.Close
                        End If
                End If
                .ListItems.Item(InitFor).Checked = True
Proximo:
            End If
        Next InitFor
    End With
Else
    ProcOrdenaListView ListaNota, ColumnHeader
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ListaNota_ItemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

If ListaNota.ListItems.Count = 0 Then Exit Sub
ProcLimpaCamposNota
TxtID.Text = ListaNota.SelectedItem
ProcCarregaDadosNota IIf(TxtID = "", 0, TxtID)
CodigoLista = ListaNota.SelectedItem.Index

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Function FunChecaCampos() As Boolean
On Error GoTo tratar_erro

FunChecaCampos = True
Acao = "salvar"
If Cmb_empresa = "" Then
    NomeCampo = "a empresa"
    ProcVerificaAcao
    Cmb_empresa.SetFocus
    FunChecaCampos = False
    Exit Function
End If
If Cmb_modelo = "" Then
    NomeCampo = "o modelo"
    ProcVerificaAcao
    Cmb_modelo.SetFocus
    FunChecaCampos = False
    Exit Function
End If
If Faturamento_NF_Saida = False And txtNFiscal = "" Then
    NomeCampo = "o número da nota fiscal"
    ProcVerificaAcao
    txtNFiscal.SetFocus
    FunChecaCampos = False
    Exit Function
End If
If Faturamento_NF_Saida = True And txtNFiscal <> "" Then
    IDlista = txtNFiscal
    If IDlista = 0 Then
        NomeCampo = "o número da nota fiscal"
        ProcVerificaAcao
        txtNFiscal.SetFocus
        FunChecaCampos = False
        Exit Function
    End If
End If
If txtNFiscal <> "" And txtSerie = "" Or Faturamento_NF_Saida = False And txtSerie = "" Then
    NomeCampo = "a série"
    ProcVerificaAcao
    With txtSerie
        If .Text = "" Then
            .Locked = False
            .TabStop = True
        End If
        .SetFocus
    End With
    FunChecaCampos = False
    Exit Function
End If
If opt_Ativa.Value = False And opt_Cancelada.Value = False And Opt_entrada.Value = False And Opt_saida.Value = False Then
    NomeCampo = "o status"
    ProcVerificaAcao
    FunChecaCampos = False
    Exit Function
End If
If Faturamento_NF_Saida = False And txt_EntSai = "__/__/____" Then
    If MsgBox("A data de entrada não foi informada, deseja utilizar a data de hoje?", vbQuestion + vbYesNo) = vbYes Then
        txt_EntSai = Format(Date, "dd/mm/yyyy")
    Else
        NomeCampo = "a data de entrada"
        ProcVerificaAcao
        FunChecaCampos = False
        txt_EntSai.SetFocus
        Exit Function
    End If
End If
If Faturamento_NF_Saida = True Then
    If optServico.Value = True Then
        DataTexto = "data de competência"
    Else
        DataTexto = "data de saída"
    End If
Else
    DataTexto = "data de entrada"
End If
If txt_EntSai <> "__/__/____" Then
    If IsDate(txt_EntSai) = False Then
        MsgBox ("A " & DataTexto & " foi digitada incorretamente."), vbExclamation
        txt_EntSai.SetFocus
        FunChecaCampos = False
        Exit Function
    Else
        If optServico.Value = False Then
            Dataini = txt_DtEmissao
            Datafim = txt_EntSai
            If Datafim < Dataini Then
                MsgBox ("A " & DataTexto & " não pode ser menor que a data de emissão."), vbExclamation
                txt_EntSai.SetFocus
                FunChecaCampos = False
                Exit Function
            End If
        End If
    End If
End If
If txtIDCliente.Text = "" Then
    If Formulario = "Faturamento/Nota fiscal/Terceiros" Or Formulario = "Estoque/Nota fiscal" Then NomeCampo = "o emitente" Else NomeCampo = "o destinatário"
    ProcVerificaAcao
    FunChecaCampos = False
    Sit_REG = 1
    Faturamento = True
    frmFaturamento_Prod_serv_cliente_forn.Show 1
    Exit Function
End If
If txttipocliente.Text = "" Then
    NomeCampo = "o tipo do destinatário"
    ProcVerificaAcao
    FunChecaCampos = False
    txttipocliente.SetFocus
    Exit Function
End If
If cbo_UF <> "" And cbo_UF <> "EX" Then
    If txttipocliente = "" And txt_CNPJ_CPF = "" Or txttipocliente = "J" And txt_CNPJ_CPF = "" Or txttipocliente = "JP" And txt_CNPJ_CPF = "" Or txttipocliente = "JR" And txt_CNPJ_CPF = "" Or txttipocliente = "E" And txt_CNPJ_CPF = "" Then
        NomeCampo = "o CNPJ"
        ProcVerificaAcao
        txt_CNPJ_CPF.SetFocus
        FunChecaCampos = False
        Exit Function
    End If
    If txttipocliente = "F" And txt_CNPJ_CPF = "" Or txttipocliente = "FP" And txt_CNPJ_CPF = "" Or txttipocliente = "FR" And txt_CNPJ_CPF = "" Then
        NomeCampo = "o CPF"
        ProcVerificaAcao
        txt_CNPJ_CPF.SetFocus
        FunChecaCampos = False
        Exit Function
    End If
End If
If txt_Endereco = "" Then
    NomeCampo = "o endereço"
    ProcVerificaAcao
    FunChecaCampos = False
    txt_Endereco.SetFocus
    Exit Function
End If

If IsDate(Txt_hora_emissao) = False Then
    NomeCampo = "a hora da emissão"
    ProcVerificaAcao
    FunChecaCampos = False
    Txt_hora_emissao.SetFocus
    Exit Function
End If

If cmbFinalidade_emissao = "" Then
    NomeCampo = "a finalidade de emissão"
    ProcVerificaAcao
    FunChecaCampos = False
    cmbFinalidade_emissao.SetFocus
    Exit Function
End If
If Cmb_consumidor = "" Then
    NomeCampo = "o consumidor final"
    ProcVerificaAcao
    FunChecaCampos = False
    Cmb_consumidor.SetFocus
    Exit Function
End If
If Faturamento_NF_Saida = False Then
    If optProduto.Value = True And (Left(Cmb_modelo, 2) = "55" Or Left(Cmb_modelo, 2) = "57") Then
        If Txt_chave_acesso = "" Then
            NomeCampo = "a chave de acess da NFe"
            ProcVerificaAcao
            FunChecaCampos = False
            Txt_chave_acesso.SetFocus
            Exit Function
        Else
            If TxtID <> "" Then TextoFiltro = " and ID_nota <> " & TxtID Else TextoFiltro = ""
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select ID from tbl_Dados_Nota_Fiscal_NFe where Chave_acesso = '" & Txt_chave_acesso & "'" & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
            If TBFI.EOF = False Then
                MsgBox ("Esta chave de acesso já foi utilizada em outra nota fiscal, favor alterar."), vbInformation
                TBFI.Close
                FunChecaCampos = False
                Exit Function
            End If
            TBFI.Close
            If Right(Txt_chave_acesso, 1) <> VerificaDigVerifNF(Left(Txt_chave_acesso, 43)) Then
                MsgBox ("A chave de acesso está incorreta, favor alterar."), vbInformation
                FunChecaCampos = False
                Txt_chave_acesso.SetFocus
                Exit Function
            End If
        End If
    End If
Else
    If Cmb_consumidor = "" Then
        NomeCampo = "o tipo do consumidor"
        ProcVerificaAcao
        FunChecaCampos = False
        Cmb_consumidor.SetFocus
        Exit Function
    End If
End If
If opt_Cancelada.Value = True And Txt_obs = "" Then
    NomeCampo = "a observação/motivo do cancelamento"
    ProcVerificaAcao
    FunChecaCampos = False
    Txt_obs.SetFocus
    Exit Function
End If

Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Function
End Function

Private Sub ListaServicos_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

If ColumnHeader = "" Then
    With Listaservicos
        For InitFor = 1 To .ListItems.Count
            If .ListItems.Item(InitFor).Checked = True Then
                .ListItems.Item(InitFor).Checked = False
            Else
                If FunVerificaRegistroValidadoSemMsg("tbl_Dados_Nota_Fiscal", "ID = " & TxtID, True) = False Then
                    .ListItems.Item(InitFor).Checked = False
                    GoTo Proximo
                End If
                .ListItems.Item(InitFor).Checked = True
Proximo:
            End If
        Next InitFor
    End With
Else
    ProcOrdenaListView Listaservicos, ColumnHeader
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Listaservicos_itemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

If Listaservicos.ListItems.Count = 0 Then Exit Sub
Novo_Nota2 = False
ProcLimpaCamposServicos
txtidservico = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select * from tbl_Detalhes_Nota where Int_codigo = " & Listaservicos.SelectedItem, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    txtidservico = TBProduto!Int_codigo
    txtcodServ.Text = IIf(IsNull(TBProduto!int_Cod_Produto), "", TBProduto!int_Cod_Produto)
    
    ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), False
    
    If IsNull(TBProduto!CST_PIS) = False And TBProduto!CST_PIS <> "" Then Cmb_CST_PIS_Serv = TBProduto!CST_PIS Else Cmb_CST_PIS_Serv.ListIndex = -1
    If IsNull(TBProduto!CST_Cofins) = False And TBProduto!CST_Cofins <> "" Then Cmb_CST_Cofins_Serv = TBProduto!CST_Cofins Else Cmb_CST_Cofins_Serv.ListIndex = -1
    
    txtDescserv.Text = IIf(IsNull(TBProduto!Txt_descricao), "", TBProduto!Txt_descricao)
    If IsNull(TBProduto!txt_Unid) = False And TBProduto!txt_Unid <> "" Then txtunserv = TBProduto!txt_Unid
    If IsNull(TBProduto!Unidade_com) = False And TBProduto!Unidade_com <> "" Then Cmb_un_com_serv = TBProduto!Unidade_com
    txtqtdserv.Text = IIf(IsNull(TBProduto!int_Qtd), "", Format(TBProduto!int_Qtd, "###,##0.0000"))
    
    With txtVlrunitserv
        .Text = IIf(IsNull(TBProduto!dbl_ValorUnitario), "", Format(TBProduto!dbl_ValorUnitario, "###,##0.0000000000"))
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select Valor_bloqueado from projproduto where Desenho = '" & txtcodServ & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            If TBAbrir!Valor_bloqueado = True Then
                .Locked = True
                .TabStop = False
            Else
                ProcVerificaNFPedInt TBProduto!Int_codigo
            End If
        End If
        TBAbrir.Close
    End With
    
    txtVlrtotalserv.Text = IIf(IsNull(TBProduto!dbl_ValorTotal), "", Format(TBProduto!dbl_ValorTotal, "###,##0.00"))
    txtof_servico.Text = IIf(IsNull(TBProduto!Ordem), "", TBProduto!Ordem)
    txt_pcclienteserv.Text = IIf(IsNull(TBProduto!PCCliente), "", TBProduto!PCCliente)
    
    With cmbReferenciaserv
        .Clear
        If IsNull(TBProduto!N_referencia) = False And TBProduto!N_referencia <> "" Then
            .AddItem TBProduto!N_referencia
            .Text = TBProduto!N_referencia
        End If
    End With
    
    If TBProduto!Servico_cliente = True Then Chk_servico_executado_cliente.Value = 1 Else Chk_servico_executado_cliente.Value = 0
End If
TBProduto.Close
CodigoLista2 = Listaservicos.SelectedItem.Index
Frame1(12).Enabled = True

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select Codproduto from projproduto where Desenho = '" & txtcodServ & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    ProcBloqueiaCamposServ
Else
    If FunVerifNFProdServSemCad(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = False Then ProcLiberaCamposServ Else ProcBloqueiaCamposServ
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaTransporteProposta()
On Error GoTo tratar_erro

If Txt_proposta.Text = "" Then
    MsgBox ("Informe o número do pedido antes de pesquisar."), vbExclamation
    SSFaturamento.Tab = 1
    Txt_proposta.SetFocus
    Exit Sub
End If
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select vendas_comercial.IdIntTransp, vendas_comercial.Transportadora, vendas_comercial.Tipo_transp from vendas_proposta INNER JOIN vendas_comercial ON vendas_proposta.cotacao = vendas_comercial.cotacao where vendas_proposta.ncotacao = '" & Txt_proposta.Text & "' and vendas_proposta.revisao = " & IIf(Txt_rev.Text = "", 0, Txt_rev.Text) & " and Transportadora is not null", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Select Case TBAbrir!Tipo_transp
        Case "C": Cmb_tipo_transp = "Cliente"
        Case "F": Cmb_tipo_transp = "Fornecedor"
        Case "E": Cmb_tipo_transp = "Empresa"
    End Select
    lst_DadosTransp.ListItems.Clear
    With lst_DadosTransp.ListItems
        .Add , , TBAbrir!Transportadora
        .Item(.Count).SubItems(1) = TBAbrir!IdIntTransp
    End With
Else
    MsgBox ("Não foi encontrado nenhuma transportadora com este número de pedido interno."), vbExclamation
End If
TBAbrir.Close
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub lst_DadosTransp_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

ProcOrdenaListView lst_DadosTransp, ColumnHeader

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub lst_Duplicata_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

ProcOrdenaListView lst_Duplicata, ColumnHeader

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ListaProdutos_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

If ColumnHeader = "" Then
    With listaProdutos
        For InitFor = 1 To .ListItems.Count
            If .ListItems.Item(InitFor).Checked = True Then
                .ListItems.Item(InitFor).Checked = False
            Else
                If Cmb_opcao_lista_Produtos = "Excluir" Then
                    If FunVerificaRegistroValidadoSemMsg("tbl_Dados_Nota_Fiscal", "ID = " & TxtID, True) = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
    
                    ProcVerificaRegistroUtilizadoSemMsg "Faturamento_Relacionamento", "(Id_produto = " & .ListItems(InitFor) & " or ID_produto_relacionada = " & .ListItems(InitFor) & ")"
                    If Permitido = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    ProcVerificaRegistroUtilizadoSemMsg "tbl_Detalhes_Nota_NFe", "ID_item = " & .ListItems(InitFor)
                    If Permitido = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    Set TBAbrir = CreateObject("adodb.recordset")
                    TBAbrir.Open "Select * From tbl_ContasPagar where ID_nota = " & ListaNota.SelectedItem & " and Despesas_NF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBAbrir.EOF = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    TBAbrir.Close
                    ProcVerificaRegistroUtilizadoSemMsg "Estoque_movimentacao", "ID_prod_NF = " & .ListItems(InitFor)
                    If Permitido = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                ElseIf Cmb_opcao_lista_Produtos = "Empenhar" Then
                        If .ListItems(InitFor).ListSubItems(23) = "Sim" Then
                            .ListItems.Item(InitFor).Checked = False
                            GoTo Proximo
                        End If
                            
                        Set TBCarteira = CreateObject("adodb.recordset")
                        TBCarteira.Open "Select ID_carteira from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems.Item(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                        If TBCarteira.EOF = True Then
                            .ListItems.Item(InitFor).Checked = False
                            TBCarteira.Close
                            GoTo Proximo
                        End If
                        TBCarteira.Close
                            
                        EstoqueAtual = FunVerificaQtdeEstoque(.ListItems(InitFor).ListSubItems(1), Cmb_empresa.ItemData(Cmb_empresa.ListIndex), "")
                        'Verifica empenho de vendas
                        Valor1 = 0
                        Set TBFI = CreateObject("adodb.recordset")
                        TBFI.Open "Select Qtde_requisitar from Qtde_empenhada_produto_venda where Desenho = '" & .ListItems(InitFor).ListSubItems(1) & "'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBFI.EOF = False Then EstoqueAtual = EstoqueAtual - IIf(IsNull(TBFI!Qtde_requisitar), 0, TBFI!Qtde_requisitar)
                        'Verifica empenho na produção
                        Valor1 = 0
                        Set TBFI = CreateObject("adodb.recordset")
                        TBFI.Open "Select Qtde_empenhar from Qtde_empenhada_produto where Codigo = '" & .ListItems(InitFor).ListSubItems(1) & "'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBFI.EOF = False Then EstoqueAtual = EstoqueAtual - IIf(IsNull(TBFI!Qtde_empenhar), 0, TBFI!Qtde_empenhar)
                        TBFI.Close
                        If EstoqueAtual = 0 Then
                            .ListItems.Item(InitFor).Checked = False
                            GoTo Proximo
                        End If
                    Else
                        If .ListItems(InitFor).ListSubItems(23) = "Não" Then
                            .ListItems.Item(InitFor).Checked = False
                            GoTo Proximo
                        End If
                        
                        Set TBCarteira = CreateObject("adodb.recordset")
                        TBCarteira.Open "Select ID from Estoque_Controle_Empenho_Vendas where ID_faturamento = " & .ListItems.Item(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                        If TBCarteira.EOF = True Then
                            .ListItems.Item(InitFor).Checked = False
                            GoTo Proximo
                        End If
                        TBCarteira.Close
                End If
                .ListItems.Item(InitFor).Checked = True
Proximo:
            End If
        Next InitFor
    End With
Else
    ProcOrdenaListView listaProdutos, ColumnHeader
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_BaseICMS_Change()
On Error GoTo tratar_erro

If txt_BaseICMS.Text <> "" Then
    VerifNumero = txt_BaseICMS.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_BaseICMS.Text = ""
        txt_BaseICMS.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_BaseICMS_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_BaseICMS

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_baseICMSs_Change()
On Error GoTo tratar_erro

If txt_baseICMSs.Text <> "" Then
    VerifNumero = txt_baseICMSs.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_baseICMSs.Text = ""
        txt_baseICMSs.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_baseICMSs_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_baseICMSs

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_CFOP_prod_Change()
On Error GoTo tratar_erro

ProcCarregaCSTICMS
If NF_enviada = False And NFe_liberada = False Then ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_CFOP_serv_Change()
On Error GoTo tratar_erro

ProcCarregaCSTServ

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_ICMSs_Change()
On Error GoTo tratar_erro

If txt_ICMSs.Text <> "" Then
    VerifNumero = txt_ICMSs.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_ICMSs.Text = ""
        txt_ICMSs.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_ICMSs_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_ICMSs

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_ID_CF_change()
On Error GoTo tratar_erro

ProcCarregaDadosCF

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaDadosCF()
On Error GoTo tratar_erro

Txt_CF = ""
Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select * from tbl_ClassificacaoFiscal where Idclass = " & IIf(Txt_ID_CF = "", 0, Txt_ID_CF), Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then
    Txt_CF = IIf(IsNull(TBFI!IDIntClasse), "", TBFI!IDIntClasse)
    
    Set TBFI = CreateObject("adodb.recordset")
    TBFI.Open "Select CST.* FROM CST INNER JOIN Regioes ON CST.ID_UF = Regioes.ID where CST.ID_CF = " & IIf(Txt_ID_CF = "", 0, Txt_ID_CF) & " and Regioes.UF = '" & cbo_UF & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBFI.EOF = False Then
        If IsNull(TBFI!CST) = False And TBFI!CST <> "" Then txtCST_ICMS.Text = TBFI!CST
    End If
End If
1:
    If NF_enviada = False And NFe_liberada = False Then ProcVerificaCF False

Exit Sub
tratar_erro:
    If Err.Number = 383 Then GoTo 1
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_OutrasDisp_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_OutrasDisp

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_OutrasDisp_prod_Change()
On Error GoTo tratar_erro

If txt_OutrasDisp_prod <> "" Then
    VerifNumero = txt_OutrasDisp_prod
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_OutrasDisp_prod = ""
        txt_OutrasDisp_prod.SetFocus
        Exit Sub
    End If
End If
ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_OutrasDisp_prod_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_OutrasDisp_prod

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_OutrasDisp_prod_LostFocus()
On Error GoTo tratar_erro

txt_OutrasDisp_prod = Format(txt_OutrasDisp_prod, "###,##0.00")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_TotalIPI_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_TotalIPI

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_valor_total_desc_Change()
On Error GoTo tratar_erro

If Txt_valor_total_desc <> "" Then
    VerifNumero = Txt_valor_total_desc
    ProcVerificaNumero
    If VerifNumero = False Then
        Txt_valor_total_desc = ""
        Txt_valor_total_desc.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_valor_total_desc_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus Txt_valor_total_desc

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_valor_total_desc_LostFocus()
On Error GoTo tratar_erro

Txt_valor_total_desc = Format(Txt_valor_total_desc, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_valor_total_desc_prod_Change()
On Error GoTo tratar_erro

If Txt_valor_total_desc_prod <> "" Then
    VerifNumero = Txt_valor_total_desc_prod
    ProcVerificaNumero
    If VerifNumero = False Then
        Txt_valor_total_desc_prod = ""
        Txt_valor_total_desc_prod.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_valor_total_desc_prod_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus Txt_valor_total_desc_prod

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_valor_total_desc_prod_LostFocus()
On Error GoTo tratar_erro

Txt_valor_total_desc_prod = Format(Txt_valor_total_desc_prod, "###,##0.00")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_valor_total_desc_SUFRAMA_Change()
On Error GoTo tratar_erro

If Txt_valor_total_desc_SUFRAMA <> "" Then
    VerifNumero = Txt_valor_total_desc_SUFRAMA
    ProcVerificaNumero
    If VerifNumero = False Then
        Txt_valor_total_desc_SUFRAMA = ""
        Txt_valor_total_desc_SUFRAMA.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_valor_total_desc_SUFRAMA_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus Txt_valor_total_desc_SUFRAMA

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub Txt_valor_total_desc_SUFRAMA_LostFocus()
On Error GoTo tratar_erro

Txt_valor_total_desc_SUFRAMA.Text = Format(Txt_valor_total_desc_SUFRAMA.Text, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Sub
End Sub

Private Sub txt_ValorNota_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_ValorNota

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_VlrFrete_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_VlrFrete

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_VlrFrete_prod_Change()
On Error GoTo tratar_erro

If txt_VlrFrete_prod <> "" Then
    VerifNumero = txt_VlrFrete_prod
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_VlrFrete_prod = ""
        txt_VlrFrete_prod.SetFocus
        Exit Sub
    End If
    ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_VlrFrete_prod_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_VlrFrete_prod

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_VlrFrete_prod_LostFocus()
On Error GoTo tratar_erro

txt_VlrFrete_prod = Format(txt_VlrFrete_prod, "###,##0.00")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrICMS_Change()
On Error GoTo tratar_erro

If txt_VlrICMS.Text <> "" Then
    VerifNumero = txt_VlrICMS.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_VlrICMS.Text = ""
        txt_VlrICMS.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrICMS_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_VlrICMS

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrSeguro_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_vlrSeguro

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrSeguro_prod_Change()
On Error GoTo tratar_erro

If txt_vlrSeguro_prod <> "" Then
    VerifNumero = txt_vlrSeguro_prod
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_vlrSeguro_prod = ""
        txt_vlrSeguro_prod.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrSeguro_prod_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_vlrSeguro_prod

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrSeguro_prod_LostFocus()
On Error GoTo tratar_erro

txt_vlrSeguro_prod = Format(txt_vlrSeguro_prod, "###,##0.00")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrtotalprod_Change()
On Error GoTo tratar_erro

If txt_VlrTotalProd.Text <> "" Then
    VerifNumero = txt_VlrTotalProd.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_VlrTotalProd.Text = ""
        txt_VlrTotalProd.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrtotalprod_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_VlrTotalProd

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtCod_Produto_Change()
On Error GoTo tratar_erro

ProcLimpaCamposProd1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtcodServ_Change()
On Error GoTo tratar_erro

ProcLimpaCamposServicos1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtCST_ICMS_Click()
On Error GoTo tratar_erro

ProcCarregaCSTIPI

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtCST_IPI_Click()
On Error GoTo tratar_erro

ProcCarregaCSTPIS

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtCST_PIS_Click()
On Error GoTo tratar_erro

ProcCarregaCSTCofins

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtIcms_Change()
On Error GoTo tratar_erro

If txtIcms.Text <> "" Then
    VerifNumero = txtIcms.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtIcms.Text = ""
        txtIcms.SetFocus
        Exit Sub
    End If
End If
If txtIcms.Text <> "" And txtIcms.Text <> "0" Then chkNaoArredondar.Enabled = True Else chkNaoArredondar.Enabled = False

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtIcms_LostFocus()
On Error GoTo tratar_erro

ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtICMSSN_Change()
On Error GoTo tratar_erro

If txtICMSSN.Text <> "" Then
    VerifNumero = txtICMSSN.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtICMSSN.Text = ""
        txtICMSSN.SetFocus
        Exit Sub
    End If
End If
ProcCalculaICMSSN

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCalculaICMSSN()
On Error GoTo tratar_erro

Valor = IIf(txtVLRMPA = "", 0, txtVLRMPA)
Valor2 = IIf(txtICMSSN.Text = "", 0, txtICMSSN.Text)
If Valor > 0 Then
    txtBCICMSSN = Format(Valor, "###,##0.00")
    txtValorICMSSN = Format((Valor * Valor2) / 100, "###,##0.00")
Else
    'Verifica valor total de produto com CFOP que tem ICMS
    Valor1 = 0
    Valor3 = 0
    Valor4 = 0
    Valor5 = 0
    Valor6 = 0
    Set TBItem = CreateObject("adodb.recordset")
    TBItem.Open "Select Sum(NFP.dbl_ValorTotal - ISNULL(NFP.Valor_desconto, 0)) as Valor1, Sum(ISNULL(NFP.Valor_frete, 0)) as Valor3, Sum(ISNULL(NFP.Valor_seguro, 0)) as Valor4, Sum(ISNULL(NFP.Valor_acessorias, 0)) as Valor5, Sum(ISNULL(CST.Valor_ICMS_ST, 0)) as Valor6 from tbl_Detalhes_Nota NFP INNER JOIN tbl_Detalhes_Nota_CST_ICMS CST ON CST.ID_item = NFP.Int_codigo where NFP.ID_nota = " & IIf(TxtID = "", 0, TxtID) & " and (txt_CST = '0101' or txt_CST = '0201')", Conexao, adOpenKeyset, adLockOptimistic
    If TBItem.EOF = False Then
        Valor1 = IIf(IsNull(TBItem!Valor1), 0, TBItem!Valor1)
        Valor3 = IIf(IsNull(TBItem!Valor3), 0, TBItem!Valor3)
        Valor4 = IIf(IsNull(TBItem!Valor4), 0, TBItem!Valor4)
        Valor5 = IIf(IsNull(TBItem!Valor5), 0, TBItem!Valor5)
        Valor6 = IIf(IsNull(TBItem!Valor6), 0, TBItem!Valor6)
    End If
    TBItem.Close
    
    txtBCICMSSN = Format(Valor1 + Valor3 + Valor4 + Valor5 + Valor6, "###,##0.00")
    txtValorICMSSN = Format(((Valor1 + Valor3 + Valor4 + Valor5 + Valor6) * Valor2) / 100, "###,##0.00")
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtICMSSN_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtICMSSN

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtICMSSN_LostFocus()
On Error GoTo tratar_erro

txtICMSSN = Format(txtICMSSN, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaCSTICMS()
On Error GoTo tratar_erro

If Txt_ID_CFOP_prod = "" Then Exit Sub
txtCST_ICMS.Clear
txtCST_IPI.Clear
txtCST_PIS.Clear
txtCST_Cofins.Clear
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod, Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    'CST de ICMS
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_ICMS from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " group by CST_ICMS", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_ICMS) = False And TBCFOP!CST_ICMS <> "" Then
                txtCST_ICMS.AddItem TBCFOP!CST_ICMS
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_ICMS
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then txtCST_ICMS = CSTTexto
    End If
Else
    ProcCarregaTodasCSTICMS
    ProcCarregaTodasCSTIPI
    ProcCarregaTodasCSTPIS
    ProcCarregaTodasCSTCofins
End If
TBCFOP.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaCSTIPI()
On Error GoTo tratar_erro

If Txt_ID_CFOP_prod = "" Then Exit Sub
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    txtCST_IPI.Clear
    txtCST_PIS.Clear
    txtCST_Cofins.Clear
        
    'CST de IPI
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_IPI from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' group by CST_IPI", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_IPI) = False And TBCFOP!CST_IPI <> "" Then
                txtCST_IPI.AddItem TBCFOP!CST_IPI
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_IPI
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then txtCST_IPI = CSTTexto
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaCSTPIS()
On Error GoTo tratar_erro

If Txt_ID_CFOP_prod = "" Then Exit Sub
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' and CST_IPI = '" & txtCST_IPI & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    txtCST_PIS.Clear
    txtCST_Cofins.Clear
        
    'CST de PIS
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_PIS from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' and CST_IPI = '" & txtCST_IPI & "' group by CST_PIS", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_PIS) = False And TBCFOP!CST_PIS <> "" Then
                txtCST_PIS.AddItem TBCFOP!CST_PIS
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_PIS
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then txtCST_PIS = CSTTexto
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaCSTCofins()
On Error GoTo tratar_erro

If Txt_ID_CFOP_prod = "" Then Exit Sub
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' and CST_IPI = '" & txtCST_IPI & "' and CST_PIS = '" & txtCST_PIS & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    txtCST_Cofins.Clear
        
    'CST de Cofins
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_Cofins from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' and CST_IPI = '" & txtCST_IPI & "' and CST_PIS = '" & txtCST_PIS & "' group by CST_Cofins", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_Cofins) = False And TBCFOP!CST_Cofins <> "" Then
                txtCST_Cofins.AddItem TBCFOP!CST_Cofins
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_Cofins
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then txtCST_Cofins = CSTTexto
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaTodasCSTICMS()
On Error GoTo tratar_erro

With txtCST_ICMS
    .AddItem "000"
    .AddItem "010"
    .AddItem "0101"
    .AddItem "0102"
    .AddItem "0103"
    .AddItem "020"
    .AddItem "0201"
    .AddItem "0202"
    .AddItem "0203"
    .AddItem "0300"
    .AddItem "040"
    .AddItem "0400"
    .AddItem "041"
    .AddItem "050"
    .AddItem "0500"
    .AddItem "051"
    .AddItem "060"
    .AddItem "070"
    .AddItem "090"
    .AddItem "0900"
    
    .AddItem "100"
    .AddItem "110"
    .AddItem "1101"
    .AddItem "1102"
    .AddItem "1103"
    .AddItem "120"
    .AddItem "1201"
    .AddItem "1202"
    .AddItem "1203"
    .AddItem "1300"
    .AddItem "140"
    .AddItem "1400"
    .AddItem "141"
    .AddItem "150"
    .AddItem "1500"
    .AddItem "151"
    .AddItem "160"
    .AddItem "170"
    .AddItem "190"
    .AddItem "1900"
    
    .AddItem "200"
    .AddItem "210"
    .AddItem "2101"
    .AddItem "2102"
    .AddItem "2103"
    .AddItem "220"
    .AddItem "2201"
    .AddItem "2202"
    .AddItem "2203"
    .AddItem "2300"
    .AddItem "240"
    .AddItem "2400"
    .AddItem "241"
    .AddItem "250"
    .AddItem "2500"
    .AddItem "251"
    .AddItem "260"
    .AddItem "270"
    .AddItem "290"
    .AddItem "2900"
    
    .AddItem "300"
    .AddItem "310"
    .AddItem "3101"
    .AddItem "3102"
    .AddItem "3103"
    .AddItem "320"
    .AddItem "3201"
    .AddItem "3202"
    .AddItem "3203"
    .AddItem "3300"
    .AddItem "340"
    .AddItem "3400"
    .AddItem "341"
    .AddItem "350"
    .AddItem "3500"
    .AddItem "351"
    .AddItem "360"
    .AddItem "370"
    .AddItem "390"
    .AddItem "3900"
    
    .AddItem "400"
    .AddItem "410"
    .AddItem "4101"
    .AddItem "4102"
    .AddItem "4103"
    .AddItem "420"
    .AddItem "4201"
    .AddItem "4202"
    .AddItem "4203"
    .AddItem "4300"
    .AddItem "440"
    .AddItem "4400"
    .AddItem "441"
    .AddItem "450"
    .AddItem "4500"
    .AddItem "451"
    .AddItem "460"
    .AddItem "470"
    .AddItem "490"
    .AddItem "4900"
    
    .AddItem "500"
    .AddItem "510"
    .AddItem "5101"
    .AddItem "5102"
    .AddItem "5103"
    .AddItem "520"
    .AddItem "5201"
    .AddItem "5202"
    .AddItem "5203"
    .AddItem "5300"
    .AddItem "540"
    .AddItem "5400"
    .AddItem "541"
    .AddItem "550"
    .AddItem "5500"
    .AddItem "551"
    .AddItem "560"
    .AddItem "570"
    .AddItem "590"
    .AddItem "5900"
    
    .AddItem "600"
    .AddItem "610"
    .AddItem "6101"
    .AddItem "6102"
    .AddItem "6103"
    .AddItem "620"
    .AddItem "6201"
    .AddItem "6202"
    .AddItem "6203"
    .AddItem "6300"
    .AddItem "640"
    .AddItem "6400"
    .AddItem "641"
    .AddItem "650"
    .AddItem "6500"
    .AddItem "651"
    .AddItem "660"
    .AddItem "670"
    .AddItem "690"
    .AddItem "6900"
    
    .AddItem "700"
    .AddItem "710"
    .AddItem "7101"
    .AddItem "7102"
    .AddItem "7103"
    .AddItem "720"
    .AddItem "7201"
    .AddItem "7202"
    .AddItem "7203"
    .AddItem "7300"
    .AddItem "740"
    .AddItem "7400"
    .AddItem "741"
    .AddItem "750"
    .AddItem "7500"
    .AddItem "751"
    .AddItem "760"
    .AddItem "770"
    .AddItem "790"
    .AddItem "7900"
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaTodasCSTIPI()
On Error GoTo tratar_erro

With txtCST_IPI
    .AddItem "00"
    .AddItem "01"
    .AddItem "02"
    .AddItem "03"
    .AddItem "04"
    .AddItem "05"
    .AddItem "49"
    .AddItem "50"
    .AddItem "51"
    .AddItem "52"
    .AddItem "53"
    .AddItem "54"
    .AddItem "55"
    .AddItem "99"
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaTodasCSTPIS()
On Error GoTo tratar_erro

With txtCST_PIS
    .AddItem "01"
    .AddItem "02"
    .AddItem "03"
    .AddItem "04"
    .AddItem "05"
    .AddItem "06"
    .AddItem "07"
    .AddItem "08"
    .AddItem "09"
    .AddItem "49"
    .AddItem "98"
    .AddItem "99"
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaTodasCSTCofins()
On Error GoTo tratar_erro

With txtCST_Cofins
    .AddItem "01"
    .AddItem "02"
    .AddItem "03"
    .AddItem "04"
    .AddItem "05"
    .AddItem "06"
    .AddItem "07"
    .AddItem "08"
    .AddItem "09"
    .AddItem "49"
    .AddItem "98"
    .AddItem "99"
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaCSTServ()
On Error GoTo tratar_erro

If Txt_ID_CFOP_serv = "" Then Exit Sub
Cmb_CST_PIS_Serv.Clear
Cmb_CST_Cofins_Serv.Clear
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_serv, Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    'CST de PIS
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_PIS from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_serv & " group by CST_PIS", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_PIS) = False And TBCFOP!CST_PIS <> "" Then
                Cmb_CST_PIS_Serv.AddItem TBCFOP!CST_PIS
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_PIS
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then Cmb_CST_PIS_Serv = CSTTexto
    End If
    
    'CST de Cofins
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_Cofins from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_serv & " group by CST_Cofins", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_Cofins) = False And TBCFOP!CST_Cofins <> "" Then
                Cmb_CST_Cofins_Serv.AddItem TBCFOP!CST_Cofins
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_Cofins
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then Cmb_CST_Cofins_Serv = CSTTexto
    End If
Else
    With Cmb_CST_PIS_Serv
        .AddItem "01"
        .AddItem "02"
        .AddItem "03"
        .AddItem "04"
        .AddItem "06"
        .AddItem "07"
        .AddItem "08"
        .AddItem "09"
        .AddItem "49"
        .AddItem "98"
        .AddItem "99"
    End With
    
    With Cmb_CST_Cofins_Serv
        .AddItem "01"
        .AddItem "02"
        .AddItem "03"
        .AddItem "04"
        .AddItem "06"
        .AddItem "07"
        .AddItem "08"
        .AddItem "09"
        .AddItem "49"
        .AddItem "98"
        .AddItem "99"
    End With
End If
TBCFOP.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtIDcliente_Change()
On Error GoTo tratar_erro

ProcCarregaEntrega

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtIPI_Change()
On Error GoTo tratar_erro

If txtIPI.Text <> "" Then
    VerifNumero = txtIPI.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtIPI.Text = ""
        txtIPI.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtipi_LostFocus()
On Error GoTo tratar_erro

ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtNFiscal_Change()
On Error GoTo tratar_erro

If txtNFiscal.Text <> "" Then
    VerifNumero = txtNFiscal.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtNFiscal.Text = ""
        txtNFiscal.SetFocus
        Exit Sub
    End If
End If
  
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtNreg_Change(Index As Integer)
On Error GoTo tratar_erro

If txtNreg(Index) <> "" Then
    VerifNumero = txtNreg(Index)
    ProcVerificaNumero
    If VerifNumero = False Then
        txtNreg(Index) = ""
        txtNreg(Index).SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtOF_Change()
On Error GoTo tratar_erro

Txt_IDestoque = 0
If txtOF = "" Then Exit Sub

Valor = txtQtd
If txtun <> "" And Cmb_un_com <> "" Then Valor = Valor / FunVerificaTabelaConversaoUnidade(txtun, Cmb_un_com)
NovoValor = Replace(Valor, ",", ".")
Set TBEstoque = CreateObject("adodb.recordset")
TBEstoque.Open "Select EC.IDestoque from Estoque_Controle_Empenho_Vendas EE INNER JOIN estoque_controle EC ON EE.ID_estoque = EC.IDEstoque where EC.ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and EC.Desenho = '" & txtCod_Produto & "' and EC.Lote = '" & txtOF & "' and EE.Qtde_empenhada - EE.Qtde_saida > 0", Conexao, adOpenKeyset, adLockReadOnly
If TBEstoque.EOF = False Then
    Txt_IDestoque = TBEstoque!IDestoque
Else
    Set TBEstoque = CreateObject("adodb.recordset")
    TBEstoque.Open "Select Idestoque from Estoque_controle where ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Desenho = '" & txtCod_Produto & "' and Lote = '" & txtOF & "' and Estoque_real >= " & NovoValor, Conexao, adOpenKeyset, adLockOptimistic
    If TBEstoque.EOF = False Then Txt_IDestoque = TBEstoque!IDestoque
End If
TBEstoque.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtPagIr_Change(Index As Integer)
On Error GoTo tratar_erro

If txtPagIr(Index) <> "" Then
    VerifNumero = txtPagIr(Index)
    ProcVerificaNumero
    If VerifNumero = False Then
        txtPagIr(Index) = ""
        txtPagIr(Index).SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtQTD_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtQtd

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtqtdserv_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtqtdserv

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcVerificaTipoNF(CorrigeTab As Boolean)
On Error GoTo tratar_erro

With SSFaturamento
    If optProduto.Value = True Then
        If CorrigeTab = True Then
            .TabVisible(2) = True
            .TabVisible(3) = False
            If Right(Formulario, 20) = "Ordem de faturamento" Then
                Set TBFerramentas = CreateObject("adodb.recordset")
                TBFerramentas.Open "Select * from empresa where codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Esconder_ValorOF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                If TBFerramentas.EOF = False Then
                    .TabsPerRow = 5
                Else
                    .TabsPerRow = 6
                End If
                TBFerramentas.Close
            ElseIf Right(Formulario, 9) = "Terceiros" Or Left(Formulario, 7) = "Estoque" Then
                    .TabsPerRow = 5
                Else
                    .TabsPerRow = 6
            End If
        End If
        TipoNF = "M1"
    ElseIf optServico.Value = True Then
            If CorrigeTab = True Then
                .TabVisible(2) = False
                .TabVisible(3) = True
                If Right(Formulario, 20) = "Ordem de faturamento" Then
                    Set TBFerramentas = CreateObject("adodb.recordset")
                    TBFerramentas.Open "Select * from empresa where codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Esconder_ValorOF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBFerramentas.EOF = False Then
                        .TabsPerRow = 5
                    Else
                        .TabsPerRow = 6
                    End If
                    TBFerramentas.Close
                ElseIf Right(Formulario, 9) = "Terceiros" Or Left(Formulario, 7) = "Estoque" Then
                        .TabsPerRow = 5
                    Else
                        .TabsPerRow = 6
                End If
            End If
            TipoNF = "SA"
        Else
            If CorrigeTab = True Then
                .TabVisible(2) = True
                .TabVisible(3) = True
                If Right(Formulario, 20) = "Ordem de faturamento" Then
                    Set TBFerramentas = CreateObject("adodb.recordset")
                    TBFerramentas.Open "Select * from empresa where codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Esconder_ValorOF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBFerramentas.EOF = False Then
                        .TabsPerRow = 6
                    Else
                        .TabsPerRow = 7
                    End If
                    TBFerramentas.Close
                ElseIf Right(Formulario, 9) = "Terceiros" Or Left(Formulario, 7) = "Estoque" Then
                        .TabsPerRow = 6
                    Else
                        .TabsPerRow = 7
                End If
            End If
            TipoNF = "M1SA"
    End If
End With

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Sub
End Sub

Private Sub txtTexto_Change()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub TxtTransp_nome_Change()
On Error GoTo tratar_erro

ProcCarregaTransportadora

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaTransportadora()
On Error GoTo tratar_erro

txtTransp_endereco.Text = ""
txtTransp_numero.Text = ""
txtTransp_municipio.Text = ""
txtTransp_uf_Transportadora.ListIndex = -1
txtTransp_cnpj.Text = ""
With txtTransp_IE
    .Text = ""
    .Locked = False
    .TabStop = True
End With
lst_DadosTransp.ListItems.Clear

TextoFiltro = " and DtValidacao IS NOT NULL and status <> 'Bloqueado'"
If Cmb_tipo_transp = "Cliente" Then
    NomeTabela = "Clientes"
    NomeCampo = "NomeRazao"
ElseIf Cmb_tipo_transp = "Fornecedor" Then
        NomeTabela = "Compras_fornecedores"
        NomeCampo = "Nome_Razao"
    Else
        NomeTabela = "Empresa"
        NomeCampo = "Empresa"
        TextoFiltro = ""
End If

Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * FROM " & NomeTabela & " where " & NomeCampo & " like '" & TxtTransp_nome & "%' " & TextoFiltro & " order by " & NomeCampo, Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    With lst_DadosTransp.ListItems
        Do While TBLISTA.EOF = False
            Select Case Cmb_tipo_transp
                Case "Cliente":
                    .Add , , TBLISTA!NomeRazao
                    .Item(.Count).SubItems(1) = TBLISTA!IDCliente
                    .Item(.Count).SubItems(2) = "C"
                Case "Fornecedor":
                    .Add , , TBLISTA!Nome_Razao
                    .Item(.Count).SubItems(1) = TBLISTA!IDCliente
                    .Item(.Count).SubItems(2) = "F"
                Case "Empresa":
                    .Add , , TBLISTA!Empresa
                    .Item(.Count).SubItems(1) = TBLISTA!CODIGO
                    .Item(.Count).SubItems(2) = "E"
            End Select
            TBLISTA.MoveNext
        Loop
    End With
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaTransporteCliente()
On Error GoTo tratar_erro

Set TBVendas = CreateObject("adodb.recordset")
TBVendas.Open "Select * from clientes where idcliente = " & txtIDCliente.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBVendas.EOF = False Then
    If IsNull(TBVendas!txt_transportadora) = False Then
        Select Case TBVendas!Tipo_transp
            Case "C": Cmb_tipo_transp = "Cliente"
            Case "F": Cmb_tipo_transp = "Fornecedor"
            Case "E": Cmb_tipo_transp = "Empresa"
        End Select
        lst_DadosTransp.ListItems.Clear
        With lst_DadosTransp.ListItems
            .Add , , TBVendas!txt_transportadora
            .Item(.Count).SubItems(1) = TBVendas!idTransp
        End With
    Else
        MsgBox ("Não foi encontrado nenhuma transportadora para este cliente."), vbExclamation
    End If
End If
TBVendas.Close
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub lst_DadosTransp_ItemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

If lst_DadosTransp.ListItems.Count = 0 Then Exit Sub
txtidinttransp = lst_DadosTransp.SelectedItem.ListSubItems(1)
If Cmb_tipo_transp = "Empresa" Then
    NomeTabela = "Empresa"
    NomeCampo = "Codigo"
Else
    NomeCampo = "IDCliente"
    If Cmb_tipo_transp = "Cliente" Then NomeTabela = "Clientes" Else NomeTabela = "Compras_fornecedores"
End If
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * FROM " & NomeTabela & " WHERE " & NomeCampo & " = " & txtidinttransp, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    NomeCampoTransp = "o estado"
    If Cmb_tipo_transp = "Empresa" Then
        TranspTexto = "dessa empresa"
        TxtTransp_nome = IIf(IsNull(TBAbrir!Empresa), "", TBAbrir!Empresa)
        If IsNull(TBAbrir!CNPJ) = True Or TBAbrir!CNPJ = "__.___.___/____-__" Or TBAbrir!CNPJ = "" Then txtTransp_cnpj = "" Else txtTransp_cnpj = TBAbrir!CNPJ
        txtTransp_IE = IIf(IsNull(TBAbrir!ie), "", TBAbrir!ie)
        If IsNull(TBAbrir!UF) = False And TBAbrir!UF <> "" Then txtTransp_uf_Transportadora = TBAbrir!UF
    Else
        If Cmb_tipo_transp = "Cliente" Then
            TranspTexto = "desse cliente"
            TxtTransp_nome = IIf(IsNull(TBAbrir!NomeRazao), "", TBAbrir!NomeRazao)
            If IsNull(TBAbrir!UF) = False And TBAbrir!UF <> "" Then txtTransp_uf_Transportadora = TBAbrir!UF
            
            With txtTransp_IE
                If Left(TBAbrir!Tipo, 1) = "J" Then
                    .Text = IIf(IsNull(TBAbrir!RG_IE), "", TBAbrir!RG_IE)
                    .Locked = False
                    .TabStop = True
                Else
                    .Locked = True
                    .TabStop = False
                End If
            End With
        Else
            If TBAbrir!Sedex = True Then chkSedex.Value = 1 Else chkSedex.Value = 0
            
            TranspTexto = "desse fornecedor"
            TxtTransp_nome = IIf(IsNull(TBAbrir!Nome_Razao), "", TBAbrir!Nome_Razao)
            If IsNull(TBAbrir!Estado) = False And TBAbrir!Estado <> "" Then txtTransp_uf_Transportadora = TBAbrir!Estado
            With txtTransp_IE
                If Left(TBAbrir!Pessoa, 1) = "J" Then
                    .Text = IIf(IsNull(TBAbrir!RG_IE), "", TBAbrir!RG_IE)
                    .Locked = False
                    .TabStop = True
                Else
                    .Locked = True
                    .TabStop = False
                End If
            End With
        End If
        If TBAbrir!idTipoEmpresa = 1 Then
            If IsNull(TBAbrir!CPF_CNPJ) = True Or TBAbrir!CPF_CNPJ = "__.___.___/____-__" Or TBAbrir!CPF_CNPJ = "" Then txtTransp_cnpj = "" Else txtTransp_cnpj = TBAbrir!CPF_CNPJ
        End If
        
    End If
1:
    If IsNull(TBAbrir!Tipo_endereco) = False And TBAbrir!Tipo_endereco <> "" Then
        Endereco = TBAbrir!Tipo_endereco & ": " & IIf(IsNull(TBAbrir!Endereco), "", TBAbrir!Endereco)
    Else
        Endereco = IIf(IsNull(TBAbrir!Endereco), "", TBAbrir!Endereco)
    End If
    txtTransp_endereco = Endereco
    txtTransp_numero = IIf(IsNull(TBAbrir!Numero), "", TBAbrir!Numero)
    txtTransp_municipio = IIf(IsNull(TBAbrir!Cidade), "", TBAbrir!Cidade)
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    If Err.Number = "383" Then
        MsgBox ("Não foi encontrado " & NomeCampoTransp & " " & TranspTexto & "."), vbExclamation
        GoTo 1
    End If
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub lst_Duplicata_ItemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro
    
If lst_Duplicata.ListItems.Count = 0 Then Exit Sub
Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.SelectedItem.ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    Txt_ID_duplicata = TBLISTA!ID
    Txt_vencimento.Value = Format(TBLISTA!dt_Vencimento, "dd/mm/yyyy")
    txtvalorduplicata = Format(TBLISTA!dbl_Valor, "###,##0.00")
    txt_Duplicata = TBLISTA!txt_Parcela
    If IsNull(TBLISTA!Tipo_doc) = False And TBLISTA!Tipo_doc <> "" Then cmbtipo_conta = TBLISTA!Tipo_doc
    txtObs_Duplicata = IIf(IsNull(TBLISTA!Obs), "", TBLISTA!Obs)
End If
TBLISTA.Close
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ListaProdutos_ItemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

If listaProdutos.ListItems.Count = 0 Then Exit Sub
Novo_Nota1 = False
txtIDProduto = 0
ProcLimpaCamposProd
ProcBloqueiaNfe
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select * from tbl_Detalhes_Nota where Int_codigo = " & listaProdutos.SelectedItem, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    txtIDProduto.Text = TBProduto!Int_codigo
    txtCod_Produto = IIf(IsNull(TBProduto!int_Cod_Produto), "", TBProduto!int_Cod_Produto)
    
    ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), True
    
    With cmbreferencia
        .Clear
        If IsNull(TBProduto!N_referencia) = False And TBProduto!N_referencia <> "" Then
            .AddItem TBProduto!N_referencia
            .Text = TBProduto!N_referencia
        End If
    End With
    
    Set TBCiclo = CreateObject("adodb.recordset")
    TBCiclo.Open "Select Idclass, IDIntClasse from tbl_ClassificacaoFiscal where Idclass = " & IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), Conexao, adOpenKeyset, adLockOptimistic
    If TBCiclo.EOF = False Then
        Txt_ID_CF = TBCiclo!Idclass
        Txt_CF = IIf(IsNull(TBCiclo!IDIntClasse), "", TBCiclo!IDIntClasse)
    End If
    
    txtDescricao_Produto.Text = IIf(IsNull(TBProduto!Txt_descricao), "", TBProduto!Txt_descricao)
    If IsNull(TBProduto!txt_Unid) = False And TBProduto!txt_Unid <> "" Then txtun = TBProduto!txt_Unid
    If IsNull(TBProduto!Unidade_com) = False And TBProduto!Unidade_com <> "" Then Cmb_un_com = TBProduto!Unidade_com
    txtQtd.Text = IIf(IsNull(TBProduto!int_Qtd), "", Format(TBProduto!int_Qtd, "###,##0.0000"))
    
    With txtVLUnit
        .Text = IIf(IsNull(TBProduto!dbl_ValorUnitario), "", Format(TBProduto!dbl_ValorUnitario, "###,##0.0000000000"))
        
        If cbo_UF = "EX" Then
            .Locked = False
            .TabStop = True
        Else
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select Valor_bloqueado from projproduto where Desenho = '" & txtCod_Produto & "'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                If TBAbrir!Valor_bloqueado = True Then
                    .Locked = True
                    .TabStop = False
                Else
                    ProcVerificaNFPedInt TBProduto!Int_codigo
                End If
            End If
            TBAbrir.Close
        End If
    End With
    
    txtVLTotal.Text = Format(TBProduto!dbl_ValorUnitario * TBProduto!int_Qtd, "###,##0.00")
    txtIcms.Text = IIf(IsNull(TBProduto!int_ICMS), "", TBProduto!int_ICMS)
    txtIPI.Text = IIf(IsNull(TBProduto!int_IPI), "", TBProduto!int_IPI)
    txtValor_IPI.Text = IIf(IsNull(TBProduto!dbl_valoripi), "", Format(TBProduto!dbl_valoripi, "###,##0.00"))
    If IsNull(TBProduto!Codigo_enquadramento_IPI) = False Then
        If Len(FunSóNumeros(TBProduto!Codigo_enquadramento_IPI)) = 3 Then Txt_codigo_enq_IPI = TBProduto!Codigo_enquadramento_IPI
    End If
    txtOF.Text = IIf(IsNull(TBProduto!Ordem), "", TBProduto!Ordem)
    Txt_IDestoque = IIf(IsNull(TBProduto!IDestoque), 0, TBProduto!IDestoque)
    txt_VlrFrete_prod = IIf(IsNull(TBProduto!Valor_frete), "0,00", Format(TBProduto!Valor_frete, "###,##0.00"))
    If TBProduto!Tem_IPI_frete = True Then Chk_tem_IPI_frete_prod.Value = 1 Else Chk_tem_IPI_frete_prod.Value = 0
    txt_vlrSeguro_prod = IIf(IsNull(TBProduto!Valor_seguro), "0,00", Format(TBProduto!Valor_seguro, "###,##0.00"))
    txt_OutrasDisp_prod = IIf(IsNull(TBProduto!Valor_acessorias), "0,00", Format(TBProduto!Valor_acessorias, "###,##0.00"))
    Txt_valor_total_desc_prod = IIf(IsNull(TBProduto!Valor_desconto), "0,00", Format(TBProduto!Valor_desconto, "###,##0.00"))
    Txt_n_item = IIf(IsNull(TBProduto!N_item), "", TBProduto!N_item)
    txt_pccliente.Text = IIf(IsNull(TBProduto!PCCliente), "", TBProduto!PCCliente)
    Txt_complemento_descricao = IIf(IsNull(TBProduto!Complemento_descricao), "", TBProduto!Complemento_descricao)
    Txt_GTIN = IIf(IsNull(TBProduto!GTIN), "", TBProduto!GTIN)
    Txt_inf_adicionais_prod = IIf(IsNull(TBProduto!Inf_adicionais_prod), "", TBProduto!Inf_adicionais_prod)
    If TBProduto!Retorno = True Then chkRetorno.Value = 1 Else chkRetorno.Value = 0
    If TBProduto!Remessa = True Then chkRemessa.Value = 1 Else chkRemessa.Value = 0
    If TBProduto!NaoArredondar = True Then chkNaoArredondar.Value = 1 Else chkNaoArredondar.Value = 0
    
    ProcCarregaCSTICMS
    NomeCampo = "ICMS"
    If IsNull(TBProduto!txt_CST) = False And TBProduto!txt_CST <> "" Then txtCST_ICMS = TBProduto!txt_CST Else txtCST_ICMS.ListIndex = -1
    NomeCampo = "IPI"
    If IsNull(TBProduto!CST_IPI) = False And TBProduto!CST_IPI <> "" Then txtCST_IPI = TBProduto!CST_IPI Else txtCST_IPI.ListIndex = -1
    NomeCampo = "PIS"
    If IsNull(TBProduto!CST_PIS) = False And TBProduto!CST_PIS <> "" Then txtCST_PIS = TBProduto!CST_PIS Else txtCST_PIS.ListIndex = -1
    NomeCampo = "Cofins"
    If IsNull(TBProduto!CST_Cofins) = False And TBProduto!CST_Cofins <> "" Then txtCST_Cofins = TBProduto!CST_Cofins Else txtCST_Cofins.ListIndex = -1
End If
1:
    TBProduto.Close
    CodigoLista1 = listaProdutos.SelectedItem.Index
    Frame1(9).Enabled = True
    
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select Codproduto from projproduto where Desenho = '" & txtCod_Produto & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        ProcBloqueiaCamposProd False
    Else
        If FunVerifNFProdServSemCad(Cmb_empresa.ItemData(Cmb_empresa.ListIndex)) = False Then ProcLiberaCamposProd Else ProcBloqueiaCamposProd False
    End If
    TBAbrir.Close

Exit Sub
tratar_erro:
    If Err.Number = "383" Then
        If Txt_ID_CFOP_prod <> "" Then
            MsgBox ("Favor revisar as CST de " & NomeCampo & "."), vbExclamation
            frmFaturamento_Prod_Serv_RevisarCST.Show 1
        End If
        GoTo 1
    End If
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaDadosCFOPProdServ(ID_CFOP As Long, Prod As Boolean)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select IDCountCfop, ID_CFOP, Txt_descricao, Remessa, Retorno from tbl_NaturezaOperacao where IDCountCfop = " & ID_CFOP, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    If Prod = True Then
        Txt_ID_CFOP_prod = TBAbrir!IDCountCfop
        Txt_CFOP_prod = IIf(IsNull(TBAbrir!ID_CFOP), "", TBAbrir!ID_CFOP)
        Txt_natureza_operacao_prod = IIf(IsNull(TBAbrir!Txt_descricao), "", TBAbrir!Txt_descricao)
        If TBAbrir!Remessa = True Then chkRemessa.Value = 1 Else chkRemessa.Value = 0
        If TBAbrir!Retorno = True Then chkRetorno.Value = 1 Else chkRetorno.Value = 0
    Else
        Txt_ID_CFOP_serv = TBAbrir!IDCountCfop
        Txt_CFOP_serv = IIf(IsNull(TBAbrir!ID_CFOP), "", TBAbrir!ID_CFOP)
        Txt_natureza_operacao_serv = IIf(IsNull(TBAbrir!Txt_descricao), "", TBAbrir!Txt_descricao)
    End If
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCarregaDadosCSTProd()
On Error GoTo tratar_erro

Valido = False
If Txt_ID_CF <> "" And cbo_UF <> "" Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from Empresa where Codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Carregar_CFOP_ST = 'True'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        ProcVerifCFOPST Txt_ID_CF, cbo_UF
        If Valido = True Then
            Txt_ID_CFOP_prod = IDAntigo
            Txt_CFOP_prod = FamiliaAntiga
            Txt_natureza_operacao_prod = Familiatext
            txtCST_ICMS = Letra
        End If
    End If
    
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), Conexao, adOpenKeyset, adLockOptimistic
    If TBFIltro.EOF = False Then
        If Valido = False Then
            If IsNull(TBFIltro!CST_ICMS) = False And TBFIltro!CST_ICMS <> "" Then txtCST_ICMS.Text = TBFIltro!CST_ICMS
        End If
1:
        If IsNull(TBFIltro!CST_IPI) = False And TBFIltro!CST_IPI <> "" Then txtCST_IPI.Text = TBFIltro!CST_IPI
        If IsNull(TBFIltro!CST_PIS) = False And TBFIltro!CST_PIS <> "" Then txtCST_PIS.Text = TBFIltro!CST_PIS
        If IsNull(TBFIltro!CST_Cofins) = False And TBFIltro!CST_Cofins <> "" Then txtCST_Cofins.Text = TBFIltro!CST_Cofins
    End If
    TBFIltro.Close
End If

Exit Sub
tratar_erro:
    If Err.Number = 383 Then GoTo 1
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub opt_Ativa_Click()
On Error GoTo tratar_erro

Status_nota = 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub opt_Cancelada_Click()
On Error GoTo tratar_erro

Status_nota = 2

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub SSFaturamento_Click(PreviousTab As Integer)
On Error GoTo tratar_erro

Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select ID, int_NotaFiscal from tbl_Dados_Nota_Fiscal where ID = " & IIf(TxtID = "", 0, TxtID), Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then
    TxtID = TBFIltro!ID
    txtNFiscal = IIf(IsNull(TBFIltro!int_NotaFiscal), "", TBFIltro!int_NotaFiscal)
End If
TBFIltro.Close

Select Case SSFaturamento.Tab
    Case 0: 'Carteira
        Cmb_empresa.Visible = False
        cmbreferencia.Visible = False
        cmbReferenciaserv.Visible = False
        If Lista_carteira.Visible = True Then
            Lista_carteira.SetFocus
        ElseIf Lista_carteira_faturar.Visible = True Then
                If Strsql_Carteira_Faturamento <> "" Then ProcCarregaListaCarteira (1)
                Lista_carteira_faturar.SetFocus
        End If
    Case 1: 'Dados da nota
        Cmb_empresa.Visible = True
        cmbreferencia.Visible = False
        cmbReferenciaserv.Visible = False
        If ListaNota.Visible = True Then ListaNota.SetFocus
    Case 2: 'Lista de produtos
        Cmb_empresa.Visible = False
        cmbreferencia.Visible = True
        cmbReferenciaserv.Visible = False
        listaProdutos.SetFocus
        ProcVerificaProsseguir
        If Permitido = False Then Exit Sub
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select ID from tbl_Dados_Nota_Fiscal where ID = " & TxtID & " and Aplicacao = 'P'", Conexao, adOpenKeyset, adLockOptimistic
        If TBFIltro.EOF = False Then
            With txtIcms
                .Locked = True
                .TabStop = False
            End With
            With txtIPI
                .Locked = True
                .TabStop = False
            End With
        Else
            With txtIcms
                .Locked = False
                .TabStop = True
            End With
            With txtIPI
                .Locked = False
                .TabStop = True
            End With
        End If
        TBFIltro.Close
        
        ProcCarregaLista
        ProcCarregaListaServicos
        ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
    Case 3: 'Lista de servicos
        Cmb_empresa.Visible = False
        cmbreferencia.Visible = False
        cmbReferenciaserv.Visible = True
        Listaservicos.SetFocus
        ProcVerificaProsseguir
        If Permitido = False Then Exit Sub
        ProcCarregaLista
        ProcCarregaListaServicos
        ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
    Case 4: 'Dados de Transportadora
        Cmb_empresa.Visible = False
        cmbreferencia.Visible = False
        cmbReferenciaserv.Visible = False
        lst_DadosTransp.SetFocus
        ProcVerificaProsseguir
        If Permitido = False Then Exit Sub
        ProcLimpaCamposTransp
        ProcCarregaQuantidadePesos
        ProcCarregaDadosTransporte
    Case 5: 'Dados adicionais
        Cmb_empresa.Visible = False
        cmbreferencia.Visible = False
        cmbReferenciaserv.Visible = False
        txtDados_Corpo.SetFocus
        ProcVerificaProsseguir
        If Permitido = False Then Exit Sub
        ProcCarregaDadosAdicionais
    Case 6: 'Dados de dupilcatas
        Cmb_empresa.Visible = False
        cmbreferencia.Visible = False
        cmbReferenciaserv.Visible = False
        lst_Duplicata.SetFocus
        ProcVerificaProsseguir
        If Permitido = False Then Exit Sub
        
        'Carrega dados comerciais do pedido interno
        Set TBVendas = CreateObject("adodb.recordset")
        TBVendas.Open "Select VC.condicoes from (vendas_comercial VC INNER JOIN vendas_proposta VP ON VP.Cotacao = VC.Cotacao) INNER JOIN tbl_proposta_nota PN ON PN.Proposta = VP.NCotacao and PN.Revisao = VP.Revisao where PN.ID_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
        If TBVendas.EOF = False Then
            txt_Cond_Recebimento.Text = IIf(IsNull(TBVendas!condicoes) = False, TBVendas!condicoes, 0)
        Else
            'Carrega dados comerciais do cliente
            If Len(txttipocliente) = 2 Then
                Set TBVendas = CreateObject("adodb.recordset")
                TBVendas.Open "Select * from Clientes_DadosComerciais where IDCliente = " & txtIDCliente & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
                If TBVendas.EOF = False Then
                    txt_Cond_Recebimento.Text = IIf(IsNull(TBVendas!condicoes) = False, TBVendas!condicoes, 0)
                End If
            End If
        End If
        TBVendas.Close
        
        ProcCarregaTotaisNota IIf(TxtID = "", 0, TxtID)
        ProcCarregaLista
        ProcCarregaListaServicos
        ProcLimpaCamposDuplicata
        ProcCarregaDuplicatas
End Select
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcVerificaProsseguir()
On Error GoTo tratar_erro

Permitido = True
If TxtID = "" Or TxtID = "0" Then
    SSFaturamento.Tab = 1
    Permitido = False
    Exit Sub
End If
If Novo_Nota = True Then
    If txtNFiscal = "" Then NomeCampo = "ordem de faturamento" Else NomeCampo = "nota fiscal"
    MsgBox ("Salve a " & NomeCampo & " antes de prosseguir."), vbExclamation
    Permitido = False
    SSFaturamento.Tab = 1
    Exit Sub
End If
If Formulario <> "Estoque/Ordem de faturamento" Then
    If txtNFiscal <> "" And txtSerie = "" Then
        MsgBox ("Informe a série e salve antes de prosseguir."), vbExclamation
        Permitido = False
        SSFaturamento.Tab = 1
        With txtSerie
            .Locked = False
            .SetFocus
        End With
        Exit Sub
    End If
End If
If Faturamento_NF_Saida = True And txtDtValidacao = "" Then
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select Finalidade_emissao, Consumidor_final from tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
    If TBFIltro.EOF = False Then
        If IsNull(TBFIltro!Finalidade_emissao) = True Or TBFIltro!Finalidade_emissao = "" Then
            MsgBox ("Informe a finalidade de emissão antes de prosseguir."), vbExclamation
            Permitido = False
            SSFaturamento.Tab = 1
            cmbFinalidade_emissao.SetFocus
            Exit Sub
        End If
        If IsNull(TBFIltro!Consumidor_final) = True Or TBFIltro!Consumidor_final = "" Then
            MsgBox ("Informe o consumidor final antes de prosseguir."), vbExclamation
            Permitido = False
            SSFaturamento.Tab = 1
            Cmb_consumidor.SetFocus
            Exit Sub
        End If
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcVerifDupEnviadaFinanceiro(ID_nota As Long)
On Error GoTo tratar_erro

Permitido = True
If ID_nota <> 0 Then
    If Opt_saida.Value = True Then
        NomeTabela = "tbl_contas_receber"
        TextoFiltro = "ID_Nota = " & ID_nota
    Else
        NomeTabela = "tbl_ContasPagar"
        TextoFiltro = "ID_Nota = " & ID_nota & " and Despesas_NF = 'False'"
    End If
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from " & NomeTabela & " where " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then Permitido = False
    TBContas.Close
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaQuantidadePesos()
On Error GoTo tratar_erro

Quantidade = 0
PesoBruto = 0
PesoLiquido = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select P.PBruto, P.PLiquido, P.Qtde_embalagem, P.Desenho, P.Unidade, NFP.int_Qtd, NFP.txt_Unid, NFP.Unidade_com, NFP.Remessa FROM projproduto P INNER JOIN tbl_Detalhes_Nota NFP ON P.desenho = NFP.int_Cod_Produto where NFP.id_nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Do While TBProduto.EOF = False
        If IsNull(TBProduto!Qtde_embalagem) = False And TBProduto!Qtde_embalagem <> "" And TBProduto!Qtde_embalagem <> "0" Then
            Qtde = TBProduto!int_Qtd / FunVerificaTabelaConversaoUnidade(TBProduto!txt_Unid, TBProduto!Unidade_com)
            If Qtde < TBProduto!Qtde_embalagem Then
                Quantidade = Quantidade + 1
            Else
                Qtd = Qtde / TBProduto!Qtde_embalagem
                If Int(Qtd) <> CDbl(Qtd) Then Qtd = Int(Qtd) + 1
                Quantidade = Quantidade + Qtd
            End If
        Else
            Quantidade = Quantidade + TBProduto!int_Qtd
        End If
        
        If TBProduto!Unidade <> TBProduto!txt_Unid And TBProduto!Remessa = True Then
            PesoBruto = PesoBruto + TBProduto!int_Qtd
            PesoLiquido = PesoLiquido + TBProduto!int_Qtd
        Else
            PesoBruto = PesoBruto + ((IIf(IsNull(TBProduto!PBruto), 0, TBProduto!PBruto) / FunVerificaTabelaConversaoUnidade(TBProduto!txt_Unid, TBProduto!Unidade_com)) * TBProduto!int_Qtd)
            PesoLiquido = PesoLiquido + ((IIf(IsNull(TBProduto!PLiquido), 0, TBProduto!PLiquido) / FunVerificaTabelaConversaoUnidade(TBProduto!txt_Unid, TBProduto!Unidade_com)) * TBProduto!int_Qtd)
        End If
        
        TBProduto.MoveNext
    Loop
End If
TBProduto.Close
txtTransp_qtd.Text = Format(Quantidade, "###,##0.0000")
txtTransp_pesoBruto = Format(PesoBruto, "###,##0.000000")
txtTransp_pesoliquido = Format(PesoLiquido, "###,##0.000000")
            
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_BaseICMS_LostFocus()
On Error GoTo tratar_erro

txt_BaseICMS.Text = Format(txt_BaseICMS.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_baseICMSs_LostFocus()
On Error GoTo tratar_erro

txt_baseICMSs.Text = Format(txt_baseICMSs.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_Conta_LostFocus()
On Error GoTo tratar_erro

If txt_conta.Text <> "" Then
    VerifNumero = txt_conta.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_conta.Text = ""
        txt_conta.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_EntSai_LostFocus()
On Error GoTo tratar_erro

If txt_EntSai.Text <> "__/__/____" Then
    VerifData = txt_EntSai.Text
    ProcVerificaData
    If VerifData = False Then
        txt_EntSai.Text = "__/__/____"
        txt_EntSai.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_ICMSs_LostFocus()
On Error GoTo tratar_erro

txt_ICMSs.Text = Format(txt_ICMSs.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_OutrasDisp_Change()
On Error GoTo tratar_erro

If txt_OutrasDisp.Text <> "" Then
    VerifNumero = txt_OutrasDisp.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_OutrasDisp.Text = ""
        txt_OutrasDisp.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_OutrasDisp_LostFocus()
On Error GoTo tratar_erro

txt_OutrasDisp.Text = Format(txt_OutrasDisp.Text, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_proposta_Click()
On Error GoTo tratar_erro

Set TBProposta = CreateObject("adodb.recordset")
TBProposta.Open "Select * from tbl_proposta_nota where proposta = '" & Txt_proposta.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBProposta.EOF = False Then
    Txt_rev.Text = IIf(IsNull(TBProposta!Revisao), "", TBProposta!Revisao)
End If
TBProposta.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_TotalIPI_Change()
On Error GoTo tratar_erro

If txt_TotalIPI.Text <> "" Then
    VerifNumero = txt_TotalIPI.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_TotalIPI.Text = ""
        txt_TotalIPI.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_TotalIPI_LostFocus()
On Error GoTo tratar_erro

txt_TotalIPI = Format(txt_TotalIPI, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_ValorNota_Change()
On Error GoTo tratar_erro

If txt_ValorNota.Text <> "" Then
    VerifNumero = txt_ValorNota.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_ValorNota.Text = ""
        txt_ValorNota.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_ValorNota_LostFocus()
On Error GoTo tratar_erro

txt_ValorNota = Format(txt_ValorNota.Text, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_VlrFrete_Change()
On Error GoTo tratar_erro

If txt_VlrFrete.Text <> "" Then
    VerifNumero = txt_VlrFrete.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_VlrFrete.Text = ""
        txt_VlrFrete.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_VlrFrete_LostFocus()
On Error GoTo tratar_erro

txt_VlrFrete.Text = Format(txt_VlrFrete.Text, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrICMS_LostFocus()
On Error GoTo tratar_erro

txt_VlrICMS.Text = Format(txt_VlrICMS.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrSeguro_Change()
On Error GoTo tratar_erro

If txt_vlrSeguro.Text <> "" Then
    VerifNumero = txt_vlrSeguro.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_vlrSeguro.Text = ""
        txt_vlrSeguro.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_vlrSeguro_LostFocus()
On Error GoTo tratar_erro

txt_vlrSeguro.Text = Format(txt_vlrSeguro.Text, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txt_VlrTotalProd_LostFocus()
On Error GoTo tratar_erro

txt_VlrTotalProd = Format(txt_VlrTotalProd.Text, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcVerificaCF(CalculaICMS_IPI As Boolean)
On Error GoTo tratar_erro
Dim UFCF As String

If Txt_ID_CF <> "" Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from tbl_ClassificacaoFiscal where Idclass = " & Txt_ID_CF, Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        If Faturamento_NF_Saida = True Then
            txtIPI = 0
            txtIcms = 0
            
            UFCF = cbo_UF
            If Txt_CFOP_prod = "6.118" And cmbEntrega <> "" Then
                'Nota fiscal de triangulação pegar uf do local de entrega para aliquota de ICMS
                Set TBFIltro = CreateObject("adodb.recordset")
                TBFIltro.Open "Select UF_entrega from clientes_entrega where identrega = " & cmbEntrega.ItemData(cmbEntrega.ListIndex) & " and UF_entrega IS NOT NULL", Conexao, adOpenKeyset, adLockReadOnly
                If TBFIltro.EOF = False Then
                    UFCF = TBFIltro!uf_entrega
                End If
                TBFIltro.Close
            End If
            ProcValorImposto TxtID, IIf(Txt_ID_CF = "", 0, Txt_ID_CF), IIf(txtIDCliente = "", 0, txtIDCliente), txt_Razao, UFCF, Cmb_empresa.ItemData(Cmb_empresa.ListIndex), False, IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), RegimeEmpresa
        Else
            ProcValorImposto TxtID, IIf(Txt_ID_CF = "", 0, Txt_ID_CF), IIf(txtIDCliente = "", 0, txtIDCliente), txt_Razao, cbo_UF, Cmb_empresa.ItemData(Cmb_empresa.ListIndex), True, IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), 0
        End If
    Else
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where ID = " & TxtID & " and Aplicacao = 'P'", Conexao, adOpenKeyset, adLockReadOnly
        If TBFIltro.EOF = False Then
            MsgBox ("Não é permitido utilizar esta classificação fiscal."), vbExclamation
            Txt_ID_CF = ""
            Txt_CF = ""
            Exit Sub
        End If
        TBFIltro.Close
        IntIPI = IIf(txtIPI = "", 0, txtIPI)
        IntICMS = IIf(txtIcms = "", 0, txtIcms)
    End If
    TBAbrir.Close
    
    ProcControleImposto IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), IIf(txtIDCliente = "", 0, txtIDCliente)

    If Faturamento_NF_Saida = False Then
        If TemICMS = "SIM" Then
            With txtIcms
                .Locked = False
                .TabStop = True
            End With
        Else
            With txtIcms
                .Locked = True
                .TabStop = False
            End With
        End If
        
        If TemIPI = "SIM" Then
            With txtIPI
                .Locked = False
                .TabStop = True
            End With
        Else
            With txtIPI
                .Locked = True
                .TabStop = False
            End With
        End If
    End If

    If CalculaICMS_IPI = False Then
        If TemICMS = "SIM" Then
            txtIcms = IntICMS
        Else
            IntICMS = 0
            txtIcms = 0
        End If
        
        If TemIPI = "SIM" Then
            txtIPI = IntIPI
        Else
            IntIPI = 0
            txtIPI.Text = 0
            txtValor_IPI = "0,00"
        End If
    Else
        IntICMS = IIf(txtIcms = "", 0, txtIcms)
        IntIPI = IIf(txtIPI = "", 0, txtIPI)
    End If
End If
Call ProcCalculaValores

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Function FunVerificaNumeroNF() As Boolean
On Error GoTo tratar_erro

If optProduto.Value = True Then
    TipoNF = "M1"
ElseIf optServico.Value = True Then
        TipoNF = "SA"
    Else
        TipoNF = "M1SA"
End If
FunVerificaNumeroNF = True
If Faturamento_NF_Saida = True Then
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where int_NotaFiscal = '" & txtNFiscal.Text & "' and TipoNF = '" & TipoNF & "' and serie = '" & txtSerie & "' and Aplicacao = 'P' and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
Else
    Set TBFIltro = CreateObject("adodb.recordset")
    If txttipocliente = "E" Then
        TextoFiltro = "txt_tipocliente = 'E'"
    ElseIf txttipocliente = "JR" Or txttipocliente = "JP" Or txttipocliente = "FR" Or txttipocliente = "FP" Then
            TextoFiltro = "(txt_tipocliente = 'JP' or txt_tipocliente = 'JR' or txt_tipocliente = 'FP' or txt_tipocliente = 'FR')"
        Else
            TextoFiltro = "(txt_tipocliente = 'J' or txt_tipocliente = 'F')"
    End If
    TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where int_NotaFiscal = '" & txtNFiscal.Text & "' and TipoNF = '" & TipoNF & "' and serie = '" & txtSerie & "' and Aplicacao = 'T' and Id_Int_Cliente = " & IIf(txtIDCliente = "", 0, txtIDCliente) & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
End If
If TBFIltro.EOF = False Then
    MsgBox ("Não é permitido utilizar este número de nota fiscal, pois o mesmo está sendo utilizado."), vbExclamation
    FunVerificaNumeroNF = False
    TBFIltro.Close
    Exit Function
End If
TBFIltro.Close

Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Function
End Function

Function FunVerificaNumeroNFAlterar() As Boolean
On Error GoTo tratar_erro

ProcVerificaTipoNF False
FunVerificaNumeroNFAlterar = True
Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where id = " & TxtID.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then
    Set TBAbrir = CreateObject("adodb.recordset")
    If Faturamento_NF_Saida = True Then
        TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal where int_NotaFiscal = '" & txtNFiscal.Text & "' and TipoNF = '" & TipoNF & "' and serie = '" & txtSerie & "' and Aplicacao = 'P' and ID <> " & TxtID & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
    Else
        TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal where int_NotaFiscal = '" & txtNFiscal.Text & "' and TipoNF = '" & TipoNF & "' and serie = '" & txtSerie & "' and Aplicacao = 'T'  and Id_Int_Cliente = " & IIf(txtIDCliente = "", 0, txtIDCliente) & " and txt_tipocliente = '" & txttipocliente & "' and ID <> " & TxtID & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
    End If
    If TBAbrir.EOF = False Then
        MsgBox ("Não é permitido utilizar este número de nota fiscal, pois o mesmo está sendo utilizado."), vbExclamation
        FunVerificaNumeroNFAlterar = False
        TBAbrir.Close
        Exit Function
    End If
    TBAbrir.Close
    If TBFIltro!int_NotaFiscal <> txtNFiscal Then
        'Altera número da nota fiscal nos pedidos
        Conexao.Execute "Update tbl_proposta_nota Set NF = '" & txtNFiscal.Text & "' where id_nota = " & TxtID.Text
        'Altera número da nota fiscal no produto
        Conexao.Execute "Update tbl_Detalhes_Nota Set Int_NotaFiscal = '" & txtNFiscal.Text & "' where id_nota = " & TxtID.Text
        'Altera número da nota fiscal nas contas
        Conexao.Execute "Update tbl_Detalhes_Recebimento Set int_NotaFiscal = '" & txtNFiscal.Text & "' where id_nota = " & TxtID.Text
        
        Set TBContas = CreateObject("adodb.recordset")
        If Opt_saida.Value = True Then
            Conexao.Execute "Update tbl_contas_receber Set NFiscal = '" & txtNFiscal.Text & "' where id_nota = " & TxtID.Text
            TBContas.Open "Select * from tbl_contas_receber where ID_Nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
            If TBContas.EOF = False Then
                Do While TBContas.EOF = False
                    
                    'Fluxo de Caixa
                    Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                    
                    TBContas.MoveNext
                Loop
            End If
            TBContas.Close
        Else
            Conexao.Execute "Update tbl_ContasPagar Set txt_NDocumento = '" & txtNFiscal & "' where id_nota = " & TxtID.Text
            TBContas.Open "Select * from tbl_ContasPagar where ID_Nota = " & TxtID, Conexao, adOpenKeyset, adLockOptimistic
            If TBContas.EOF = False Then
                Do While TBContas.EOF = False
                    
                    'Fluxo de Caixa
                    Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                    
                    TBContas.MoveNext
                Loop
            End If
            TBContas.Close
        End If
        'Altera número da nota fiscal na transportadora
        Conexao.Execute "Update tbl_Dados_Transp Set Int_NotaFiscal = '" & txtNFiscal.Text & "' where id_nota = " & TxtID.Text
        'Altera número da nota fiscal nos dados adicionais e corpo da nota
        Conexao.Execute "Update tbl_DadosAdicionais Set IDNotaFiscal = '" & txtNFiscal.Text & "' where id_nota = " & TxtID.Text
    End If
End If
TBFIltro.Close

Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Function
End Function

Private Sub txtNFiscal_LostFocus()
On Error GoTo tratar_erro

If txtNFiscal <> "" Then txtNFiscal = FunTamanhoTextoZeroEsq(FunSóNumeros(txtNFiscal), 9)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtQtd_Change()
On Error GoTo tratar_erro

If txtQtd.Text <> "" Then
    VerifNumero = txtQtd.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtQtd.Text = ""
        txtQtd.SetFocus
        Exit Sub
    End If
End If
ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCalculaValores()
On Error GoTo tratar_erro
    
SumTotProdutos = (IIf(txtVLUnit = "", 0, txtVLUnit) * IIf(txtQtd = "", 0, txtQtd)) + IIf(txt_OutrasDisp_prod = "", 0, txt_OutrasDisp_prod)
If Chk_tem_IPI_frete_prod.Value = 1 Then SumTotProdutos = SumTotProdutos + IIf(txt_VlrFrete_prod = "", 0, txt_VlrFrete_prod)

'Se tem IPI
VlrIPI = 0
If TemIPI = "SIM" Then
    txtIPI.Text = IntIPI
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select * from Clientes_Impostos where IDCliente = " & IIf(txtIDCliente = "", 0, txtIDCliente) & " and ID_CF = " & IIf(Txt_ID_CF = "", 0, Txt_ID_CF), Conexao, adOpenKeyset, adLockOptimistic
    If TBFIltro.EOF = False Then
        If TBFIltro!PorcentagemIPI <> 0 Then VlrIPI = IIf(txtVLUnit = "", 0, txtVLUnit) / TBFIltro!PorcentagemIPI
        VlrIPI = (VlrIPI - IIf(txtVLUnit = "", 0, txtVLUnit)) * IIf(txtQtd = "", 0, txtQtd)
    Else
        VlrIPI = (SumTotProdutos * IntIPI) / 100
    End If
    TBFIltro.Close
    txtValor_IPI = Format(VlrIPI, "###,##0.00")
Else
    txtIPI = 0
    txtValor_IPI = "0,00"
End If

'Se tem icms
If TemICMS = "SIM" Then txtIcms.Text = IntICMS Else txtIcms.Text = 0

'Atribui valores
txtVLTotal = Format(IIf(txtVLUnit = "", 0, txtVLUnit) * IIf(txtQtd = "", 0, txtQtd), "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtQtd_LostFocus()
On Error GoTo tratar_erro

txtQtd.Text = Format(txtQtd.Text, "###,##0.0000")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtqtdserv_Change()
On Error GoTo tratar_erro

If txtqtdserv.Text <> "" Then
    VerifNumero = txtqtdserv.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtqtdserv.Text = ""
        txtqtdserv.SetFocus
        Exit Sub
    End If
End If
ProcCalculaTotalServ

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtqtdserv_LostFocus()
On Error GoTo tratar_erro

txtqtdserv.Text = Format(txtqtdserv.Text, "###,##0.0000")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtTransp_pesoBruto_Change()
On Error GoTo tratar_erro

If txtTransp_pesoBruto.Text <> "" Then
    VerifNumero = txtTransp_pesoBruto.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtTransp_pesoBruto.Text = ""
        txtTransp_pesoBruto.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtTransp_pesoBruto_LostFocus()
On Error GoTo tratar_erro

txtTransp_pesoBruto.Text = Format(txtTransp_pesoBruto.Text, "###,##0.000000")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtTransp_pesoliquido_Change()
On Error GoTo tratar_erro

If txtTransp_pesoliquido.Text <> "" Then
    VerifNumero = txtTransp_pesoliquido.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtTransp_pesoliquido.Text = ""
        txtTransp_pesoliquido.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtTransp_pesoliquido_LostFocus()
On Error GoTo tratar_erro

txtTransp_pesoliquido.Text = Format(txtTransp_pesoliquido.Text, "###,##0.000000")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtTransp_qtd_Change()
On Error GoTo tratar_erro

If txtTransp_qtd.Text <> "" Then
    VerifNumero = txtTransp_qtd.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtTransp_qtd.Text = ""
        txtTransp_qtd.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtTransp_qtd_LostFocus()
On Error GoTo tratar_erro

txtTransp_qtd.Text = Format(txtTransp_qtd.Text, "###,##0.0000")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtUN_Click()
On Error GoTo tratar_erro

If txtun <> "" Then ProcLibera_UN_Com txtun, Cmb_un_com

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtunserv_Click()
On Error GoTo tratar_erro

If txtunserv <> "" Then ProcLibera_UN_Com txtunserv, Cmb_un_com_serv

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtValorDuplicata_Change()
On Error GoTo tratar_erro

If txtvalorduplicata.Text <> "" Then
    VerifNumero = txtvalorduplicata.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtvalorduplicata.Text = ""
        txtvalorduplicata.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtValorDuplicata_LostFocus()
On Error GoTo tratar_erro

txtvalorduplicata.Text = Format(txtvalorduplicata.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtVLRMOA_Change()
On Error GoTo tratar_erro

If txtVLRMOA.Text <> "" Then
    VerifNumero = txtVLRMOA.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtVLRMOA.Text = ""
        txtVLRMOA.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtVLRMOA_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtVLRMOA

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtVLRMOA_LostFocus()
On Error GoTo tratar_erro

txtVLRMOA.Text = Format(txtVLRMOA.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtVLRMPA_Change()
On Error GoTo tratar_erro

If txtVLRMPA.Text <> "" Then
    VerifNumero = txtVLRMPA.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtVLRMPA.Text = ""
        txtVLRMPA.SetFocus
        Exit Sub
    End If
End If
ProcCalculaICMSSN

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtVLRMPA_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtVLRMPA

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtVLRMPA_LostFocus()
On Error GoTo tratar_erro

txtVLRMPA = Format(txtVLRMPA, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Sub
End Sub

Private Sub txtvlrtotalserv_LostFocus()
On Error GoTo tratar_erro

txtVlrtotalserv.Text = Format(txtVlrtotalserv.Text, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtvlrunitserv_Change()
On Error GoTo tratar_erro

If txtVlrunitserv.Text <> "" Then
    VerifNumero = txtVlrunitserv.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtVlrunitserv.Text = ""
        txtVlrunitserv.SetFocus
        Exit Sub
    End If
End If
ProcCalculaTotalServ

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Sub
End Sub

Private Sub txtvlrunitserv_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtVlrunitserv

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtvlrunitserv_LostFocus()
On Error GoTo tratar_erro

txtVlrunitserv.Text = Format(txtVlrunitserv.Text, "###,##0.0000000000")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCalculaTotalServ()
On Error GoTo tratar_erro

If txtqtdserv <> "" And txtVlrunitserv <> "" Then
    Quantidade = txtqtdserv
    Valor = txtVlrunitserv
    ValorTotal = Valor * Quantidade
Else
    ValorTotal = 0
End If
txtVlrtotalserv = Format(ValorTotal, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtVLTotal_Change()
On Error GoTo tratar_erro

txtVLTotal.Text = Format(txtVLTotal.Text, "###,##0.00")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtVLUnit_Change()
On Error GoTo tratar_erro

If txtVLUnit.Text <> "" Then
    VerifNumero = txtVLUnit.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtVLUnit.Text = ""
        txtVLUnit.SetFocus
        Exit Sub
    End If
End If
ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcGravarQtdeFaturadaProdServ(ID_carteira As Long, Codinterno As String)
On Error GoTo tratar_erro

'Qtde liberada p/ faturar
qt = 0
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "Select Sum(NFPP.Quantidade) as qt from tbl_dados_nota_fiscal NF INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_nota = NF.ID where NF.Pedido_interno = 'True' and NF.int_status = 1 and NFPP.ID_carteira = " & ID_carteira & " and NFPP.Codinterno = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCiclo.EOF = False Then
    qt = IIf(IsNull(TBCiclo!qt), 0, TBCiclo!qt)
End If
'Qtde faturada
Qtd = 0
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "Select Sum(NFPP.Quantidade) as Qtd from tbl_dados_nota_fiscal NF INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_nota = NF.ID where NF.Pedido_interno = 'True' and NF.int_status = 1 and NFPP.ID_carteira = " & ID_carteira & " and NFPP.Codinterno = '" & Codinterno & "' and NF.int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
If TBCiclo.EOF = False Then
    Qtd = IIf(IsNull(TBCiclo!Qtd), 0, TBCiclo!Qtd)
End If
TBCiclo.Close
NovoValor = Replace(qt, ",", ".")
NovoValor1 = Replace(Qtd, ",", ".")
Conexao.Execute "Update vendas_carteira Set qtdeliberada = " & NovoValor & ", qtdefaturada = " & NovoValor1 & " where Codigo = " & ID_carteira & " and Desenho = '" & Codinterno & "'"

ProcGravarStatusProdServ ID_carteira, Codinterno

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcGravarStatusProdServ(ID_carteira As Long, Codinterno As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from vendas_carteira where Codigo = " & ID_carteira & " and Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    'Verifica data de emissão da última NF
    Set TBCiclo = CreateObject("adodb.recordset")
    TBCiclo.Open "Select NF.dt_DataEmissao from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_nota = NF.ID where NF.Pedido_interno = 'True' and NF.int_status = 1 and NFPP.ID_carteira = " & ID_carteira & " and NFPP.Codinterno = '" & Codinterno & "' order by NF.dt_DataEmissao desc", Conexao, adOpenKeyset, adLockOptimistic
    If TBCiclo.EOF = False Then
        Dataini = TBCiclo!dt_DataEmissao
    End If
    TBCiclo.Close
    
    If TBAbrir!QtdeFaturada >= TBAbrir!Quantidade Then
        TBAbrir!Liberacao = "FATURADO"
        TBAbrir!DataFaturamento = Dataini
    ElseIf TBAbrir!QtdeFaturada > 0 Then
            TBAbrir!Liberacao = "FATURADO PARCIAL"
            TBAbrir!DataFaturamento = Dataini
        Else
            TBAbrir!DataFaturamento = Null
            If TBAbrir!qtdeliberada > 0 Then
                If TBAbrir!Quantidade <= TBAbrir!qtdeliberada Then TBAbrir!Liberacao = "FATURAR" Else TBAbrir!Liberacao = "FATURAR PARCIAL"
            Else
                TBAbrir!Liberacao = "VENDIDA"
            End If
    End If
    TBAbrir.Update
End If

'Programação
Set TBProgramas = CreateObject("adodb.recordset")
TBProgramas.Open "Select VP.*, VC.qtdefaturada as QtdeFaturadaVC from Vendas_programacao VP INNER JOIN vendas_carteira VC ON VP.ID_prog = VC.ID_programacao where VC.Codigo = " & ID_carteira & " and VC.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBProgramas.EOF = False Then
    TBProgramas!QtdeFaturada = TBProgramas!QtdeFaturadaVC
    If TBProgramas!QtdeFaturada >= TBProgramas!Quantidade Then
        TBProgramas!Status_prog = "FATURADO"
        TBProgramas!Ordenar = 4
    ElseIf TBProgramas!QtdeFaturada > 0 Then
            TBProgramas!Status_prog = "PARCIAL"
            TBProgramas!Ordenar = 1
        Else
            TBProgramas!Status_prog = "ABERTO"
            TBProgramas!Ordenar = 2
    End If
    TBProgramas.Update
End If

'Produto (Programação)
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "Select VPI.* from (vendas_programacao VP INNER JOIN vendas_carteira VC ON VP.ID_prog = VC.ID_programacao) INNER JOIN vendas_programa_item VPI ON VPI.ID_item = VP.Id_item where VC.Codigo = " & ID_carteira & " and VC.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCiclo.EOF = False Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from vendas_programacao where id_item = " & TBCiclo!Id_Item & " and status_prog <> 'PREVISÃO FUTURA'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = True Then
        TBCiclo!Status_Item = "PREVISÃO FUTURA"
    Else
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select * from vendas_programacao where id_item = " & TBCiclo!Id_Item & " and status_prog <> 'ABERTO'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = True Then
            TBCiclo!Status_Item = "ABERTO"
        Else
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from vendas_programacao where id_item = " & TBCiclo!Id_Item & " and status_prog <> 'FATURADO'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = True Then
                TBCiclo!Status_Item = "FATURADO"
            Else
                TBCiclo!Status_Item = "PARCIAL"
            End If
        End If
    End If
    TBAbrir.Close
    TBCiclo.Update
End If
ProcStatusPedido ID_carteira, Codinterno

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcStatusPedido(ID_carteira As Long, Codinterno As String)
On Error GoTo tratar_erro

'Verifica status do pedido
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select VP.Cotacao, VP.Status from vendas_proposta VP INNER JOIN vendas_carteira VC ON VP.Cotacao = VC.Cotacao where VC.Codigo = " & ID_carteira & " and VC.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBCiclo = CreateObject("adodb.recordset")
    TBCiclo.Open "Select * from vendas_carteira where cotacao = " & TBAbrir!Cotacao & " and Liberacao <> 'FATURAR' and Liberacao <> 'FATURAR PARCIAL' and Liberacao <> 'VENDIDA'", Conexao, adOpenKeyset, adLockOptimistic
    If TBCiclo.EOF = True Then
        TBAbrir!Status = "VENDIDA"
    Else
        Set TBCiclo = CreateObject("adodb.recordset")
        TBCiclo.Open "Select * from vendas_carteira where cotacao = " & TBAbrir!Cotacao & " and Liberacao <> 'FATURADO'", Conexao, adOpenKeyset, adLockOptimistic
        If TBCiclo.EOF = True Then
            TBAbrir!Status = "FATURADA"
        Else
            TBAbrir!Status = "FATURADA PARCIAL"
        End If
    End If
    TBCiclo.Close
    TBAbrir.Update
End If
TBAbrir.Close

'Programa
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "Select VPR.ID, VPR.Status from (vendas_programa VPR INNER JOIN vendas_proposta VP ON VPR.ID = VP.ID_programa) INNER JOIN vendas_carteira VC ON VP.Cotacao = VC.Cotacao where VC.Codigo = " & ID_carteira & " and VC.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCiclo.EOF = False Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from vendas_programa_item where id = " & TBCiclo!ID & " and Status_Item <> 'PREVISÃO FUTURA'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = True Then
        TBCiclo!Status = "PREVISÃO FUTURA"
    Else
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select * from vendas_programa_item where id = " & TBCiclo!ID & " and Status_Item <> 'ABERTO'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = True Then
            TBCiclo!Status = "ABERTO"
        Else
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from vendas_programa_item where id = " & TBCiclo!ID & " and Status_Item <> 'FATURADO'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = True Then
                TBCiclo!Status = "FATURADO"
            Else
                TBCiclo!Status = "PARCIAL"
            End If
        End If
    End If
    TBAbrir.Close
    TBCiclo.Update
End If
TBCiclo.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcAtualizaDadosPedido(ID_nota As Long, Excluir As Boolean)
On Error GoTo tratar_erro

Set TBCarteira = CreateObject("adodb.recordset")
TBCarteira.Open "Select NFPP.* FROM tbl_Detalhes_Nota_pedidos NFPP INNER JOIN vendas_carteira VC ON VC.Codigo = NFPP.ID_carteira and VC.Desenho = NFPP.Codinterno where NFPP.ID_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBCarteira.EOF = False Then
    Do While TBCarteira.EOF = False
        IDlista = TBCarteira!ID_carteira
        Desenho = TBCarteira!Codinterno
        If Excluir = True Then Conexao.Execute "DELETE from tbl_Detalhes_Nota_pedidos where ID = " & TBCarteira!ID
        
        ProcGravarQtdeFaturadaProdServ IDlista, Desenho
        TBCarteira.MoveNext
    Loop
Else
    If Excluir = True Then Conexao.Execute "DELETE from tbl_Detalhes_Nota_pedidos where ID_nota = " & ID_nota
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcStatusnota()
On Error GoTo tratar_erro

If TxtID <> "" Then
    If Status_nota = 2 Then
        ProcExcluirArquivosRemessa TxtID
        ProcExcluirContas TxtID, Opt_saida, Opt_entrada, txttipocliente

        Conexao.Execute "DELETE from ECEV from Estoque_Controle_Empenho_Vendas ECEV INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = ECEV.ID_faturamento where NFP.ID_nota = " & TxtID
        
        If optServico.Value = False Then
            Set TBCST = CreateObject("adodb.recordset")
            TBCST.Open "Select * from tbl_dados_nota_fiscal_nfe where id_nota = " & TxtID & " and (Status = 0 or Status = 100)", Conexao, adOpenKeyset, adLockOptimistic
            If TBCST.EOF = False Then
                TBCST!Status = "-1"
                TBCST.Update
            End If
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from Empresa where codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and GNFe = 'True'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                If IsNull(TBAbrir!Caminho_Nfe) = False And TBAbrir!GNFe = True Then
                    OF = txtNFiscal
                    Call ProcCriarBATNFeCCe(TBAbrir!Caminho_Nfe, Cmb_empresa.ItemData(Cmb_empresa.ListIndex), txtSerie, OF, "C")
                    
                    Set TBGravar_NFe = CreateObject("adodb.recordset")
                    TBGravar_NFe.Open "Select * from NFE012 where CbdNtfNumero = " & OF & " and CbdNtfSerie = '" & txtSerie & "' and CbdAcao <> 'V'", Conexao_NFe, adOpenKeyset, adLockOptimistic
                    If TBGravar_NFe.EOF = True Then
                        TBGravar_NFe.AddNew
                        TBGravar_NFe!CbdEmpCodigo = Cmb_empresa.ItemData(Cmb_empresa.ListIndex)
                        TBGravar_NFe!CbdNtfSerie = txtSerie
                        TBGravar_NFe!CbdNtfNumero = OF
                        TBGravar_NFe!CbdSituacao = 0
                        TBGravar_NFe!CbdNFEChaAcesso = ""
                    End If
                    TBGravar_NFe!cbdAcao = "C"
                    TBGravar_NFe!CbdProcStatus = "N"
                    TBGravar_NFe.Update
                    TBGravar_NFe.Close
                End If
            End If
            TBAbrir.Close
            
            'NFp
            OF = TBproducao!int_NotaFiscal
            Serie = TBproducao!Serie
            Status = "E"
            If Dir$(Localrel & "\NFp Enviar\Serie " & Serie & " - Nota " & OF & " - Status " & Status & ".txt") <> "" Then
                Call frmFaturamento_Prod_serv_exportar.ProcCriarTXTNFp(txtSerie, OF, "C")
            End If
        End If
    Else
        If txtNFiscal <> "" And txtSerie <> "" And optServico.Value = False Then
            'NFe
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from Empresa where codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and GNFe = 'True'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                OF = txtNFiscal
                Serie = txtSerie
                Status = "C"
                Set GerArqPastas = CreateObject("Scripting.FileSystemObject")
                If GerArqPastas.FileExists(TBAbrir!Caminho_Nfe & "\Empresa " & TBAbrir!CODIGO & " - Serie " & Serie & " - Nota " & OF & " - Status " & Status & ".bat") = True Then Kill (TBAbrir!Caminho_Nfe & "\Empresa " & TBAbrir!CODIGO & " - Serie " & Serie & " - Nota " & OF & " - Status " & Status & ".bat")
            End If
            TBAbrir.Close
                
            'NFp
            OF = TBproducao!int_NotaFiscal
            Serie = TBproducao!Serie
            Status = "C"
            Set GerArqPastas = CreateObject("Scripting.FileSystemObject")
            If GerArqPastas.FileExists(Localrel & "\NFp Enviar\Serie " & Serie & " - Nota " & OF & " - Status " & Status & ".txt") = True Then Kill (Localrel & "\NFp Enviar\Serie " & Serie & " - Nota " & OF & " - Status " & Status & ".txt")
        End If
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcExcluirContas(ID_nota As Long, Saida As Boolean, Entrada As Boolean, TipoCliente As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select CFOP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & ID_nota & " and CFOP.Devolucao = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    'Fornecedor
    If Saida = True And Len(TipoCliente) = 1 Then GoTo ExcluirPagar
    'Cliente
    If Entrada = True And Len(TipoCliente) = 2 Then GoTo ExcluirReceber
Else
    If Saida = True Then GoTo ExcluirReceber Else GoTo ExcluirPagar
End If
TBAbrir.Close

ExcluirReceber:
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_contas_Receber where id_nota = " & ID_nota & " and Bloqueado = 'False' and Status <> 'DUPLICATA DESCONTADA RECOMPRADA'", Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Do While TBContas.EOF = False
            Conexao.Execute "DELETE from CC_realizado where Operacao = 'Crédito' and ID_financeiro = " & TBContas!IDintconta
            
            If (IsNull(TBContas!Proposta) = True Or TBContas!Proposta = "") And TBContas!Logsit = "N" Then
                'Contas contabeis
                Conexao.Execute "DELETE FROM Familia_financeiro WHERE IDConta = " & TBContas!IDintconta & " and Tipoconta = 'R' and Deposito_transf = 'False'"
                'Fluxo de Caixa
                Conexao.Execute "DELETE from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                'Número dos boletos
                Conexao.Execute "DELETE from tbl_Detalhes_Recebimento_Nboletos where IDContaReceber = " & TBContas!IDintconta
                'Conta
                Conexao.Execute "DELETE from tbl_contas_Receber where IDintconta = " & TBContas!IDintconta
            ElseIf IsNull(TBContas!Proposta) = False And TBContas!Proposta <> "" Then
                    TBContas!ID_nota = 0
                    TBContas!NFiscal = ""
                    TBContas.Update
            End If
            TBContas.MoveNext
        Loop
    End If
    TBContas.Close
    GoTo Prosseguir

ExcluirPagar:
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_ContasPagar where id_nota = " & ID_nota & " and Bloqueado = 'False' and Despesas_NF = 'False'", Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Do While TBContas.EOF = False
            If (IsNull(TBContas!Txt_pedido) = True Or TBContas!Txt_pedido = "") And TBContas!Logsit = "N" Then
                'Contas contabeis
                Conexao.Execute "DELETE FROM Familia_financeiro WHERE IDConta = " & TBContas!IDintconta & " and Tipoconta = 'P' and Deposito_transf = 'False'"
                'Fluxo de Caixa
                Conexao.Execute "DELETE from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                'Conta
                Conexao.Execute "DELETE from tbl_ContasPagar where IDintconta = " & TBContas!IDintconta
            ElseIf IsNull(TBContas!Txt_pedido) = False And TBContas!Txt_pedido <> "" Then
                    TBContas!ID_nota = 0
                    TBContas!txt_ndocumento = ""
                    TBContas.Update
            End If
            TBContas.MoveNext
        Loop
    End If
    TBContas.Close

Prosseguir:
    Conexao.Execute "Update CC set CC.ID_Financeiro = 0 from CC_realizado CC INNER JOIN tbl_Detalhes_Recebimento TBL on CC.ID_duplicata = TBL.ID where TBL.ID_nota = " & ID_nota

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtVLUnit_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtVLUnit

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub txtVLUnit_LostFocus()
On Error GoTo tratar_erro

txtVLUnit.Text = Format(txtVLUnit.Text, "###,##0.0000000000")

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcVerificaNota()
On Error GoTo tratar_erro

With txtSerie
    .Locked = False
    .TabStop = True
    Set TBAbrir = CreateObject("adodb.recordset")
    If Faturamento_NF_Saida = True Then
        TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal where tipoNF = '" & TipoNF & "' and Aplicacao = 'P' and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
    Else
        TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal where tipoNF = '" & TipoNF & "' and Aplicacao = 'T' and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
    End If
    If TBAbrir.EOF = False Then
        TBAbrir.MoveLast
        If Faturamento_NF_Saida = True And TBAbrir!ID <> TxtID And .Text <> "" Then
            .Locked = True
            .TabStop = False
        End If
    End If
    TBAbrir.Close
End With
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCopiarNFe()
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal_NFe where Id_nota = " & IDAntigo, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBGravar = CreateObject("adodb.recordset")
    TBGravar.Open "Select * from tbl_Dados_Nota_Fiscal_NFe", Conexao, adOpenKeyset, adLockOptimistic
    TBGravar.AddNew
    TBGravar!ID_nota = TxtID
    TBGravar!Forma_pagamento = TBAbrir!Forma_pagamento
    TBGravar!Finalidade_emissao = TBAbrir!Finalidade_emissao
    TBGravar!ID_entrega = TBAbrir!ID_entrega
    TBGravar!Forma_emissao = TBAbrir!Forma_emissao
    TBGravar!Enviar_Email = TBAbrir!Enviar_Email
    TBGravar!Titulo_canhoto_DANFE = TBAbrir!Titulo_canhoto_DANFE
    TBGravar!Texto_canhoto_DANFE = TBAbrir!Texto_canhoto_DANFE
    TBGravar!Enviar_DANFE_email = TBAbrir!Enviar_DANFE_email
    TBGravar!ID_Cobranca = TBAbrir!ID_Cobranca
    TBGravar!DA_entrega = TBAbrir!DA_entrega
    TBGravar!DA_cobranca = TBAbrir!DA_cobranca
    TBGravar!Consumidor_final = TBAbrir!Consumidor_final
    TBGravar!Presenca_comprador = TBAbrir!Presenca_comprador
    TBGravar!CodRef = TBAbrir!CodRef
    TBGravar.Update
    TBGravar.Close
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCopiarProdutosNFe()
On Error GoTo tratar_erro

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select * from tbl_Detalhes_Nota_NFe where Id_nota = " & IDAntigo & " order by ID", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Set TBplano = CreateObject("adodb.recordset")
    TBplano.Open "Select * from tbl_Detalhes_Nota_NFe", Conexao, adOpenKeyset, adLockOptimistic
    TBplano.AddNew
    TBplano!ID_nota = TxtID
    TBplano!Id_Item = TBGravar!Int_codigo
    TBplano!Documento_importacao = TBProduto!Documento_importacao
    TBplano!Data_registro = TBProduto!Data_registro
    TBplano!Local_desembaraco = TBProduto!Local_desembaraco
    TBplano!UF_desembaraco = TBProduto!UF_desembaraco
    TBplano!Data_desembaraco = TBProduto!Data_desembaraco
    TBplano!Codigo_exportador = TBProduto!Codigo_exportador
    TBplano!Numero_adicao = TBProduto!Numero_adicao
    TBplano!Numero_sequencial = TBProduto!Numero_sequencial
    TBplano!Codigo_fabricante = TBProduto!Codigo_fabricante
    TBplano!Valor_BC_importacao = TBProduto!Valor_BC_importacao
    TBplano!Valor_despesas = TBProduto!Valor_despesas
    TBplano!Valor_imposto_importacao = TBProduto!Valor_imposto_importacao
    TBplano!Valor_imposto_OperacoesFinanceiras = TBProduto!Valor_imposto_OperacoesFinanceiras
    TBplano!Data = Date
    TBplano!Responsavel = pubUsuario
    TBplano!NCM = TBProduto!NCM
    TBplano!Valor_FOB = TBProduto!Valor_FOB
    TBplano!Valor_frete_int = TBProduto!Valor_frete_int
    TBplano!Valor_seguro = TBProduto!Valor_seguro
    TBplano!Valor_sixcomex = TBProduto!Valor_sixcomex
    TBplano!Valor_bc_PIS_Cofins = TBProduto!Valor_bc_PIS_Cofins
    TBplano!valor_pis = TBProduto!valor_pis
    TBplano!valor_cofins = TBProduto!valor_cofins
    TBplano!Valor_bc_ICMS = TBProduto!Valor_bc_ICMS
    TBplano!Valor_bc_ICMS_fator = TBProduto!Valor_bc_ICMS_fator
    TBplano!Valor_ICMS = TBProduto!Valor_ICMS
    TBplano!Opt_valor_bc_ICMS = TBProduto!Opt_valor_bc_ICMS
    TBplano!Soma_siscomex = TBProduto!Soma_siscomex
    TBplano!Soma_PIS = TBProduto!Soma_PIS
    TBplano!Soma_Cofins = TBProduto!Soma_Cofins
    TBplano!Codigo_ANP = TBProduto!Codigo_ANP
    TBplano!UF_consumo = TBProduto!UF_consumo
    TBplano!Tipo_produto = TBProduto!Tipo_produto
    TBplano!Valor_IPI = TBProduto!Valor_IPI
    TBplano.Update
    TBplano.Close
End If
TBProduto.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCopiarCST()
On Error GoTo tratar_erro

'ICMS
If TBGravar!txt_CST <> "" Then
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_ICMS where id_item = " & TBAbrir!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    If TBCST.EOF = False Then
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "select * from tbl_Detalhes_Nota_CST_ICMS", Conexao, adOpenKeyset, adLockOptimistic
        TBProduto.AddNew
        TBProduto!Id_Item = TBGravar!Int_codigo
        TBProduto!Origem_mercadoria = TBCST!Origem_mercadoria
        TBProduto!Tributacao_ICMS = TBCST!Tributacao_ICMS
        TBProduto!Valor_BC = TBCST!Valor_BC
        TBProduto!Valor_ICMS = TBCST!Valor_ICMS
        TBProduto!Modalidade_determinacao = TBCST!Modalidade_determinacao
        TBProduto!Percentual_reducao_BC = TBCST!Percentual_reducao_BC
        TBProduto!Modalidade_determinacao_ST = TBCST!Modalidade_determinacao_ST
        TBProduto!Percentual_margem_ICMS_ST = TBCST!Percentual_margem_ICMS_ST
        TBProduto!Percentual_reducao_BC_ST = TBCST!Percentual_reducao_BC_ST
        TBProduto!Aliquota_imposto_ST = TBCST!Aliquota_imposto_ST
        TBProduto!Valor_BC_ST = TBCST!Valor_BC_ST
        TBProduto!Valor_ICMS_ST = TBCST!Valor_ICMS_ST
        TBProduto!ICMS_SN = TBCST!ICMS_SN
        TBProduto!Valor_ICMS_SN = TBCST!Valor_ICMS_SN
        'TBProduto!Valor_ICMS_desonerado = TBCST!Valor_ICMS_desonerado
        'TBProduto!Motivo_ICMS_desonerado = TBCST!Motivo_ICMS_desonerado
        TBProduto!Percentual_ICMS_DIF = TBCST!Percentual_ICMS_DIF
        TBProduto!Valor_ICMS_DIF = TBCST!Valor_ICMS_DIF
        TBProduto!Valor_BC_ICMS_UF_dest = TBCST!Valor_BC_ICMS_UF_dest
        TBProduto!Percentual_provisorio = TBCST!Percentual_provisorio
        TBProduto!Valor_ICMS_INT_UF_dest = TBCST!Valor_ICMS_INT_UF_dest
        TBProduto!Valor_ICMS_INT_UF_rem = TBCST!Valor_ICMS_INT_UF_rem
        TBProduto!Percentual_FCP = TBCST!Percentual_FCP
        TBProduto!Valor_ICMS_FCP = TBCST!Valor_ICMS_FCP
        TBProduto.Update
        TBProduto.Close
    End If
    TBCST.Close
End If

'IPI
If TBGravar!CST_IPI <> "" Then
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_IPI where id_item = " & TBAbrir!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    If TBCST.EOF = False Then
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "select * from tbl_Detalhes_Nota_CST_IPI", Conexao, adOpenKeyset, adLockOptimistic
        TBProduto.AddNew
        TBProduto!Id_Item = TBGravar!Int_codigo
        TBProduto!Codigo_situacaoTributaria = TBCST!Codigo_situacaoTributaria
        TBProduto!Valor_BC = TBCST!Valor_BC
        TBProduto.Update
        TBProduto.Close
    End If
    TBCST.Close
End If

'PIS
If TBGravar!CST_PIS <> "" Then
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_PIS where id_item = " & TBAbrir!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    If TBCST.EOF = False Then
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "select * from tbl_Detalhes_Nota_CST_PIS", Conexao, adOpenKeyset, adLockOptimistic
        TBProduto.AddNew
        TBProduto!Id_Item = TBGravar!Int_codigo
        TBProduto!Codigo_situacaoTributaria = TBCST!Codigo_situacaoTributaria
        TBProduto!Valor_BC = TBCST!Valor_BC
        TBProduto.Update
        TBProduto.Close
    End If
    TBCST.Close
End If

'Cofins
If TBGravar!CST_Cofins <> "" Then
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_Cofins where id_item = " & TBAbrir!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    If TBCST.EOF = False Then
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "select * from tbl_Detalhes_Nota_CST_Cofins", Conexao, adOpenKeyset, adLockOptimistic
        TBProduto.AddNew
        TBProduto!Id_Item = TBGravar!Int_codigo
        TBProduto!Codigo_situacaoTributaria = TBCST!Codigo_situacaoTributaria
        TBProduto!Valor_BC = TBCST!Valor_BC
        TBProduto.Update
        TBProduto.Close
    End If
    TBCST.Close
End If
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcExcluirCST(ID_nota As Long)
On Error GoTo tratar_erro

Conexao.Execute "DELETE FROM CST from tbl_Detalhes_Nota_CST_ICMS CST INNER JOIN tbl_detalhes_nota NFP ON NFP.Int_codigo = CST.id_item where NFP.ID_Nota = " & ID_nota
Conexao.Execute "DELETE FROM CST from tbl_Detalhes_Nota_CST_IPI CST INNER JOIN tbl_detalhes_nota NFP ON NFP.Int_codigo = CST.id_item where NFP.ID_Nota = " & ID_nota
Conexao.Execute "DELETE FROM CST from tbl_Detalhes_Nota_CST_PIS CST INNER JOIN tbl_detalhes_nota NFP ON NFP.Int_codigo = CST.id_item where NFP.ID_Nota = " & ID_nota
Conexao.Execute "DELETE FROM CST from tbl_Detalhes_Nota_CST_Cofins CST INNER JOIN tbl_detalhes_nota NFP ON NFP.Int_codigo = CST.id_item where NFP.ID_Nota = " & ID_nota
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcBloqueiaNfe()
On Error GoTo tratar_erro

If NFe_liberada = True Then
    With txtCod_Produto
        .Locked = True
        .TabStop = False
    End With
    With cmbreferencia
        .Locked = True
        .TabStop = False
    End With
    Cmd_localizar_CFOP_prod.Enabled = False
    cmdCF.Enabled = False
    With txtCST_ICMS
        .Locked = True
        .TabStop = False
    End With
    With txtCST_IPI
        .Locked = True
        .TabStop = False
    End With
    With txtCST_PIS
        .Locked = True
        .TabStop = False
    End With
    With txtCST_Cofins
        .Locked = True
        .TabStop = False
    End With
    With txtQtd
        .Locked = True
        .TabStop = False
    End With
    With txtVLUnit
        .Locked = True
        .TabStop = False
    End With
    With txt_VlrFrete_prod
        .Locked = True
        .TabStop = False
    End With
    Chk_tem_IPI_frete_prod.Enabled = False
    With txt_vlrSeguro_prod
        .Locked = True
        .TabStop = False
    End With
    With txt_OutrasDisp_prod
        .Locked = True
        .TabStop = False
    End With
    With Txt_valor_total_desc_prod
        .Locked = True
        .TabStop = False
    End With
    With Txt_n_item
        .Locked = True
        .TabStop = False
    End With
    With txt_pccliente
        .Locked = True
        .TabStop = False
    End With
    With Txt_complemento_descricao
        .Locked = True
        .TabStop = False
    End With
Else
    With txtCod_Produto
        .Locked = False
        .TabStop = True
    End With
    With cmbreferencia
        .Locked = False
        .TabStop = True
    End With
    Cmd_localizar_CFOP_prod.Enabled = True
    cmdCF.Enabled = True
    With txtCST_ICMS
        .Locked = False
        .TabStop = True
    End With
    With txtCST_IPI
        .Locked = False
        .TabStop = True
    End With
    With txtCST_PIS
        .Locked = False
        .TabStop = True
    End With
    With txtCST_Cofins
        .Locked = False
        .TabStop = True
    End With
    With txtQtd
        .Locked = False
        .TabStop = True
    End With
    With txtVLUnit
        .Locked = False
        .TabStop = True
    End With
    With txt_VlrFrete_prod
        .Locked = False
        .TabStop = True
    End With
    Chk_tem_IPI_frete_prod.Enabled = True
    With txt_vlrSeguro_prod
        .Locked = False
        .TabStop = True
    End With
    With txt_OutrasDisp_prod
        .Locked = False
        .TabStop = True
    End With
    With Txt_valor_total_desc_prod
        .Locked = False
        .TabStop = True
    End With
    With Txt_n_item
        .Locked = False
        .TabStop = True
    End With
    With txt_pccliente
        .Locked = False
        .TabStop = True
    End With
    With Txt_complemento_descricao
        .Locked = False
        .TabStop = True
    End With
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub USToolBar1_ButtonClick(ByVal ButtonIndex As Integer, ByVal Key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcNovo
    Case 2: ProcLocalizar
    Case 3: ProcGravar
    Case 4: ProcExcluir
    Case 5: ProcImprimir
    Case 6: ProcAnterior
    Case 7: ProcProximo
    Case 8: ProcCopiar
    Case 9:
        ProcVerifiFormulario
        ProcValidarRegistros ListaNota, Formulario
    Case 10: ProcImpostos
    Case 11: ProcNFe
    Case 12: ProcNFSe
    Case 13: ProcCheckList
    Case 14: ProcAtualizar
    Case 16: ProcAjuda
    Case 17: ProcSair
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub USToolBar2_ButtonClick(ByVal ButtonIndex As Integer, ByVal Key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcNovoProduto
    Case 2: ProcSalvarProduto
    Case 3: ProcExcluirProduto
    Case 4: ProcImprimir
    Case 5: ProcAnterior
    Case 6: ProcProximo
    Case 7: ProcImpostos
    Case 8: ProcRelacionar
    Case 9: ProcImportacao
    Case 10: ProcEmpenho
    Case 12: ProcAjuda
    Case 13: ProcSair
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub USToolBar3_ButtonClick(ByVal ButtonIndex As Integer, ByVal Key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: Procnovoservico
    Case 2: ProcSalvarServico
    Case 3: ProcExcluirServico
    Case 4: ProcImprimir
    Case 5: ProcAnterior
    Case 6: ProcProximo
    Case 7: procImpostos_servico
    Case 9: ProcAjuda
    Case 10: ProcSair
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub USToolBar4_ButtonClick(ByVal ButtonIndex As Integer, ByVal Key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcSalvarTransp
    Case 2: ProcExcluirTransp
    Case 3: ProcImprimir
    Case 4: ProcAnterior
    Case 5: ProcProximo
    Case 6: ProcImpostos
    Case 7: ProcCarregaTransporteProposta
    Case 8: ProcCarregaTransporteCliente
    Case 10: ProcAjuda
    Case 11: ProcSair
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub USToolBar5_ButtonClick(ByVal ButtonIndex As Integer, ByVal Key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcSalvarDadosAd
    Case 2: ProcExcluirDadosAd
    Case 3: ProcImprimir
    Case 4: ProcAnterior
    Case 5: ProcProximo
    Case 6: ProcImpostos
    Case 7: ProcRedespacho
    Case 9: ProcAjuda
    Case 10: ProcSair
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub USToolBar6_ButtonClick(ByVal ButtonIndex As Integer, ByVal Key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcGerarDuplicatas
    Case 2: ProcEnviarDupFinanceiro IIf(TxtID = "", 0, TxtID), True
    Case 3: ProcExcluirDuplicatas
    Case 4: ProcImprimirDuplicatas
    Case 5: ProcAnterior
    Case 6: ProcProximo
    Case 7: ProcPlanoContas
    Case 8: ProcImpostos
    Case 9: procGerarBoleto
    Case 10: ProcCentroCusto
    Case 12: ProcAjuda
    Case 13: ProcSair
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub USToolBar7_ButtonClick(ByVal ButtonIndex As Integer, ByVal Key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcFiltrarCarteira
    Case 2: ProcGerarOF
    Case 3: ProcImprimirCartFat
    Case 5: ProcAjuda
    Case 6: ProcSair
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub USToolBar8_ButtonClick(ByVal ButtonIndex As Integer, ByVal Key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcFiltrarCarteira
    Case 2: ProcAjuda
    Case 3: ProcSair
End Select

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub procImpostos_servico()
On Error GoTo tratar_erro

If Alterar = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If Novo_Nota2 = True Then
    MsgBox ("Salve o serviço antes de informar os impostos."), vbExclamation
    Exit Sub
End If
If txtidservico = 0 Or txtidservico = "" Then
    MsgBox ("Informe o serviço antes de informar os impostos."), vbExclamation
    Exit Sub
End If
frmFaturamento_Prod_Serv_Impostos_Serv.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub procEnviarImpostoFinanceiro()
On Error GoTo tratar_erro
Dim Valor_retencao_serv_PIS As Double
Dim Valor_retencao_serv_Cofins As Double
Dim Valor_retencao_serv_CSLL As Double
Dim Valor_retencao_serv_INSS As Double
Dim Valor_retencao_serv_ISSQN As Double
Dim Valor_retencao_serv_IRRF As Double

'Soma total de rentenção de serviços
Valor_retencao_serv_PIS = 0
Valor_retencao_serv_Cofins = 0
Valor_retencao_serv_CSLL = 0
Valor_retencao_serv_INSS = 0
Valor_retencao_serv_ISSQN = 0
Valor_retencao_serv_IRRF = 0
Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_Detalhes_Nota where id_nota = " & TxtID & " and Tipo = 'S' and (Retencao_PIS = 'True' or Retencao_Cofins = 'True' or Retencao_CSLL = 'True' or Retencao_INSS = 'True' or Retencao_IRRF = 'True' or Retencao_ISSQN = 'True')", Conexao, adOpenKeyset, adLockOptimistic
Do While TBTotaisnota.EOF = False
    If TBTotaisnota!Retencao_PIS = True Then Valor_retencao_serv_PIS = Valor_retencao_serv_PIS + IIf(IsNull(TBTotaisnota!Total_PIS_serv), 0, TBTotaisnota!Total_PIS_serv)
    If TBTotaisnota!Retencao_Cofins = True Then Valor_retencao_serv_Cofins = Valor_retencao_serv_Cofins + IIf(IsNull(TBTotaisnota!Total_Cofins_serv), 0, TBTotaisnota!Total_Cofins_serv)
    If TBTotaisnota!Retencao_CSLL = True Then Valor_retencao_serv_CSLL = Valor_retencao_serv_CSLL + IIf(IsNull(TBTotaisnota!Total_CSLL_serv), 0, TBTotaisnota!Total_CSLL_serv)
    If TBTotaisnota!Retencao_INSS = True Then Valor_retencao_serv_INSS = Valor_retencao_serv_INSS + IIf(IsNull(TBTotaisnota!Total_INSS_serv), 0, TBTotaisnota!Total_INSS_serv)
    If TBTotaisnota!Retencao_ISSQN = True Then Valor_retencao_serv_ISSQN = Valor_retencao_serv_ISSQN + IIf(IsNull(TBTotaisnota!VlrISS), 0, TBTotaisnota!VlrISS)
    If TBTotaisnota!Retencao_IRRF = True Then Valor_retencao_serv_IRRF = Valor_retencao_serv_IRRF + IIf(IsNull(TBTotaisnota!Total_IRRF_serv), 0, TBTotaisnota!Total_IRRF_serv)
    TBTotaisnota.MoveNext
Loop
TBTotaisnota.Close

Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select * from Empresa where Codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then
    If TBFIltro!Simples = True Then Regime = 1
    If TBFIltro!Presumido = True Then Regime = 2
    If TBFIltro!Real = True Then Regime = 3
    If TBFIltro!Simples1 = True Then Regime = 4
    Set TBAfericao = CreateObject("adodb.recordset")
    TBAfericao.Open "Select * from Impostos where Regime = " & Regime & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
    If TBAfericao.EOF = False Then
        If Valor_retencao_serv_PIS <> 0 And IsNull(TBAfericao!IDForn_PIS) = False Then procEnviarImpostoPagar TBAfericao!IDForn_PIS, TBAfericao!Dia_PIS, Valor_retencao_serv_PIS, TBAfericao!ID_PC_PIS
        If Valor_retencao_serv_Cofins <> 0 And IsNull(TBAfericao!IDForn_Cofins) = False Then procEnviarImpostoPagar TBAfericao!IDForn_Cofins, TBAfericao!Dia_Cofins, Valor_retencao_serv_Cofins, TBAfericao!ID_PC_Cofins
        If Valor_retencao_serv_CSLL <> 0 And IsNull(TBAfericao!IDForn_CSLL) = False Then procEnviarImpostoPagar TBAfericao!IDForn_CSLL, TBAfericao!Dia_CSLL, Valor_retencao_serv_CSLL, TBAfericao!ID_PC_CSLL
        If Valor_retencao_serv_INSS <> 0 And IsNull(TBAfericao!IDForn_INSS) = False Then procEnviarImpostoPagar TBAfericao!IDForn_INSS, TBAfericao!Dia_INSS, Valor_retencao_serv_INSS, TBAfericao!ID_PC_INSS
        If Valor_retencao_serv_ISSQN <> 0 And IsNull(TBAfericao!IDForn_ISSQN) = False Then procEnviarImpostoPagar TBAfericao!IDForn_ISSQN, TBAfericao!Dia_ISSQN, Valor_retencao_serv_ISSQN, TBAfericao!ID_PC_ISSQN
        If Valor_retencao_serv_IRRF <> 0 And IsNull(TBAfericao!IDForn_IRRF) = False Then procEnviarImpostoPagar TBAfericao!IDForn_IRRF, TBAfericao!Dia_IRRF, Valor_retencao_serv_IRRF, TBAfericao!ID_PC_IRRF
    End If
    TBAfericao.Close
End If
TBFIltro.Close
    
Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub procEnviarImpostoPagar(IDforn_servico_imposto As Integer, DiaVenc_servico_imposto As Integer, Valor_servico_imposto As Double, IDPC_servico_imposto)
On Error GoTo tratar_erro

'Insere dados na tabela contas a pagar
Set TBReceber = CreateObject("adodb.recordset")
TBReceber.Open "Select * from tbl_contaspagar", Conexao, adOpenKeyset, adLockOptimistic
TBReceber.AddNew
TBReceber!Parcial = False
TBReceber!impresso = False
TBReceber!Bloqueado = False
TBReceber!Logsit = "N"
TBReceber!Despesas_NF = False
TBReceber!Antecipacao = False
TBReceber!Devolucao = False
TBReceber!Status = "TÍTULO EM ABERTO"
TBReceber!Responsavel = pubUsuario
'If cbo_PortBanco.Text <> "" Then TBReceber!Banco = cbo_PortBanco.Text
'If cmb_tipopagto <> "" Then TBReceber!FormaBaixa = cmb_tipopagto
'If cmbtipo_conta <> "" Then TBReceber!Class_conta = cmbtipo_conta
TBReceber!txt_ndocumento = IIf(txtNFiscal = "", Null, txtNFiscal)
TBReceber!ID_nota = TxtID
TBReceber!Data_transacao = Date
TBReceber!Dt_emissao = txt_DtEmissao.Value
TBReceber!Competencia = IIf(Month(txt_DtEmissao.Value) < 10, "0" & Month(txt_DtEmissao.Value), Month(txt_DtEmissao.Value)) & "/" & Year(txt_DtEmissao.Value)
TBReceber!dt_Pagamento = DiaVenc_servico_imposto & "/" & Month(Date) + 1 & "/" & Year(Date)
TBReceber!int_codforn = IDforn_servico_imposto
TBReceber!txt_condpag = ""
TBReceber!dbl_valorpagto = Valor_servico_imposto
TBReceber!txt_Parcela = "001/001"
Set TBFornecedor = CreateObject("adodb.recordset")
TBFornecedor.Open "Select * from compras_fornecedores where idcliente = " & IDforn_servico_imposto, Conexao, adOpenKeyset, adLockOptimistic
If TBFornecedor.EOF = False Then TBReceber!Txt_fornecedor = IIf(IsNull(TBFornecedor!Nome_Razao), "", TBFornecedor!Nome_Razao)
TBFornecedor.Close
TBReceber!ID_empresa = Cmb_empresa.ItemData(Cmb_empresa.ListIndex)
TBReceber!Tipo = "FO"
TBReceber.Update

'Fluxo de Caixa
Set TBFluxo = CreateObject("adodb.recordset")
TBFluxo.Open "Select * from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBReceber!IDFluxo), 0, TBReceber!IDFluxo) & " and ID_empresa = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
If TBFluxo.EOF = True Then TBFluxo.AddNew
TBFluxo!IDintconta = TBReceber!IDintconta
TBFluxo!Operacao = "À Debitar"
TBFluxo!Data = TBReceber!dt_Pagamento
TBFluxo!Valor = TBReceber!dbl_valorpagto
TBFluxo!Descricao = TBReceber!Txt_fornecedor
TBFluxo!Status = "N"
TBFluxo!int_NotaFiscal = TBReceber!txt_ndocumento
TBFluxo!Instituicao = Null
TBFluxo!ID_empresa = Cmb_empresa.ItemData(Cmb_empresa.ListIndex)
TBFluxo!Bloqueado = False
TBFluxo.Update
Conexao.Execute "Update tbl_contaspagar Set IDFluxo = " & TBFluxo!IDFluxo & " where IdIntConta = " & TBReceber!IDintconta
TBFluxo.Close

'Conta contábil
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "select * from familia_financeiro", Conexao, adOpenKeyset, adLockOptimistic
TBCiclo.AddNew
TBCiclo!ID_PC = IDPC_servico_imposto
TBCiclo!IDConta = TBReceber!IDintconta
TBCiclo!IDnota = TxtID
TBCiclo!Valor = Valor_servico_imposto
TBCiclo!TipoConta = "P"
TBCiclo.Update
TBCiclo.Close

TBReceber.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExcluirImpostoPagar()
On Error GoTo tratar_erro

Permitido2 = False
Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_Detalhes_Nota where id_nota = " & TxtID & " and Tipo = 'S' and (Retencao_PIS = 'True' or Retencao_Cofins = 'True' or Retencao_CSLL = 'True' or Retencao_INSS = 'True' or Retencao_IRRF = 'True' or Retencao_ISSQN = 'True')", Conexao, adOpenKeyset, adLockOptimistic
If TBTotaisnota.EOF = False Then
    Permitido2 = True
End If
TBTotaisnota.Close

If Permitido2 = False Then Exit Sub
Set TBContas = CreateObject("adodb.recordset")
If Opt_saida.Value = True Then
    TBContas.Open "Select * from tbl_ContasPagar where id_nota = " & TxtID & " and LogSit = 'N' and Bloqueado = 'False'", Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Do While TBContas.EOF = False
            
            'Contas contabeis
            Conexao.Execute "DELETE FROM Familia_financeiro WHERE IDConta = " & TBContas!IDintconta & " and Tipoconta = 'P' and Deposito_transf = 'False'"
            
            'Fluxo de Caixa
            Conexao.Execute "DELETE from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
            TBContas.Delete
            
            TBContas.MoveNext
        Loop
    End If
    TBContas.Close
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcImportacao()
On Error GoTo tratar_erro

If Opt_entrada.Value = True And cbo_UF = "EX" Then
    frmFaturamento_Prod_Serv_DI.Show 1
Else
    MsgBox ("Só é permitido adicionar dados de importação para notas de 'Entrada' com a UF 'EX'."), vbExclamation
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcFiltrarCarteira()
On Error GoTo tratar_erro

TextoFiltroEmpresa = "ID_empresa = " & Cmb_empresa_filtro.ItemData(Cmb_empresa_filtro.ListIndex)
If Formulario = "Estoque/Ordem de faturamento" Then
    With Msk_data(1)
        If FunVerificaDataFinal(Msk_data(0).Value, .Value) = False Then
            .Value = Date
            .SetFocus
            Exit Sub
        End If
    End With
    
    If Opt_filtrar_ped_int.Value = True Then
        TextoFiltroEmpresaRel = "{Carteira_ordem_fat.ID_empresa} = " & Cmb_empresa_filtro.ItemData(Cmb_empresa_filtro.ListIndex)
        If Opt_produto_filtrar.Value = True Then TipoFiltro = "P" Else TipoFiltro = "S"
        If Chk_tem_estoque.Value = 1 Then
            EstoqueFiltro = " and Qtde_empenhada_est > 0"
            EstoqueFiltroRel = " and {Carteira_ordem_fat.Qtde_empenhada_est} > 0"
        Else
            EstoqueFiltro = ""
            EstoqueFiltroRel = ""
        End If
        If Chk_data(0).Value = 1 Then DataTexto = "Datavendas" Else DataTexto = "prazofinal"
        If Chk_data(0).Value = 1 Or Chk_data(1).Value = 1 Then
            DataFiltro = " and " & DataTexto & " Between '" & Format(Msk_data(0).Value, "Short Date") & "' And '" & Format(Msk_data(1).Value, "Short Date") & "'"
            DataFiltroRel = " and {Carteira_ordem_fat." & DataTexto & "} >= Date(" & Year(Msk_data(0).Value) & "," & Month(Msk_data(0).Value) & "," & Day(Msk_data(0).Value) & ") and {Carteira_ordem_fat." & DataTexto & "} <= Date(" & _
                                        Year(Msk_data(1).Value) & "," & Month(Msk_data(1).Value) & "," & Day(Msk_data(1).Value) & ")"
        Else
            DataFiltro = ""
            DataFiltroRel = ""
        End If
        TextoFiltroPadrao = TextoFiltroEmpresa & " and Tipo = '" & TipoFiltro & "'" & DataFiltro & EstoqueFiltro & " order by " & DataTexto & ", Desenho"
        TextoFiltroPadraoRel = TextoFiltroEmpresaRel & " and {Carteira_ordem_fat.Tipo} = '" & TipoFiltro & "'" & DataFiltroRel & EstoqueFiltroRel
        
        If txtTexto <> "" Or cmbTexto <> "" Then
            If cmbfiltrarpor = "Cliente" Or cmbfiltrarpor = "Família" Then
                If cmbfiltrarpor = "Cliente" Then TextoFiltro = "Cliente" Else TextoFiltro = "Familia"
                Strsql_Carteira_Faturamento = "Select * from Carteira_ordem_fat where " & TextoFiltro & " = '" & cmbTexto & "' and " & TextoFiltroPadrao
                FormulaRel_OF = "{Carteira_ordem_fat." & TextoFiltro & "} = '" & cmbTexto & "' and " & TextoFiltroPadraoRel
            Else
                Select Case cmbfiltrarpor
                    Case "Código de referência": TextoFiltro = "n_referencia"
                    Case "Código interno": TextoFiltro = "Desenho"
                    Case "Descrição": TextoFiltro = "Descricao_tecnica"
                    Case "Pedido do cliente": TextoFiltro = "PCcliente"
                    Case "Pedido interno": TextoFiltro = "Ncotacao"
                    Case "Programa": TextoFiltro = "Programatexto"
                End Select
                Strsql_Carteira_Faturamento = "Select * from Carteira_ordem_fat where " & TextoFiltro & FunVerifTipoFiltroIMF(Optinicio, Optmeio, Optfim, optIgual, txtTexto) & " and " & TextoFiltroPadrao
                FormulaRel_OF = "{Carteira_ordem_fat." & TextoFiltro & "}" & FunVerifTipoFiltroIMFRel(Optinicio, Optmeio, Optfim, optIgual, txtTexto) & " and " & TextoFiltroPadraoRel
            End If
        Else
            Strsql_Carteira_Faturamento = "Select * from Carteira_ordem_fat where " & TextoFiltroPadrao
            FormulaRel_OF = TextoFiltroPadraoRel
        End If
    Else
        TextoFiltroEmpresaRel = "{Carteira_ordem_fat_PC.ID_empresa} = " & Cmb_empresa_filtro.ItemData(Cmb_empresa_filtro.ListIndex)
        If Chk_data(0).Value = 1 Then DataTexto = "Data" Else DataTexto = "Prazo"
        If Chk_data(0).Value = 1 Or Chk_data(1).Value = 1 Then
            DataFiltro = "and " & DataTexto & " Between '" & Format(Msk_data(0).Value, "Short Date") & "' And '" & Format(Msk_data(1).Value, "Short Date") & "'"
            DataFiltroRel = "and {Carteira_ordem_fat_PC." & DataTexto & "} >= Date(" & Year(Msk_data(0).Value) & "," & Month(Msk_data(0).Value) & "," & Day(Msk_data(0).Value) & ") and {Carteira_ordem_fat_PC." & DataTexto & "} <= Date(" & _
                                        Year(Msk_data(1).Value) & "," & Month(Msk_data(1).Value) & "," & Day(Msk_data(1).Value) & ")"
        Else
            DataFiltro = ""
        End If
        TextoFiltroPadrao = TextoFiltroEmpresa & DataFiltro & " order by " & DataTexto & ", Desenho"
        TextoFiltroPadraoRel = TextoFiltroEmpresaRel & DataFiltroRel
        
        If txtTexto <> "" Or cmbTexto <> "" Then
            If cmbfiltrarpor = "Fornecedor" Or cmbfiltrarpor = "Família" Then
                If cmbfiltrarpor = "Fornecedor" Then TextoFiltro = "Fornecedor" Else TextoFiltro = "Familia"
                Strsql_Carteira_Faturamento = "Select * from Carteira_ordem_fat_PC where " & TextoFiltroEmpresa & " and " & TextoFiltro & " = '" & cmbTexto & "' and " & TextoFiltroPadrao
                FormulaRel_OF = TextoFiltroEmpresaRel & " and {Carteira_ordem_fat_PC." & TextoFiltro & "} = '" & cmbTexto & "' and " & TextoFiltroPadraoRel
            Else
                Select Case cmbfiltrarpor
                    Case "Código de referência": TextoFiltro = "n_referencia"
                    Case "Código interno": TextoFiltro = "Desenho"
                    Case "Descrição": TextoFiltro = "Descricao"
                    Case "Pedido de compra": TextoFiltro = "Pedido"
                End Select
                Strsql_Carteira_Faturamento = "Select * from Carteira_ordem_fat_PC where " & TextoFiltro & FunVerifTipoFiltroIMF(Optinicio, Optmeio, Optfim, optIgual, txtTexto) & " and " & TextoFiltroPadrao
                FormulaRel_OF = "{Carteira_ordem_fat_PC." & TextoFiltro & "}" & FunVerifTipoFiltroIMFRel(Optinicio, Optmeio, Optfim, optIgual, txtTexto) & " and " & TextoFiltroPadraoRel
            End If
        Else
            Strsql_Carteira_Faturamento = "Select * from Carteira_ordem_fat_PC where " & TextoFiltroPadrao
            FormulaRel_OF = TextoFiltroPadraoRel
        End If
    End If
Else
    TextoFiltroVal = " and NF.DtValidacaoOF IS NOT NULL and NF.int_NotaFiscal IS NULL"
    CamposFiltro = " NF.ID, E.Empresa, NF.dt_DataEmissao, NF.int_NotaFiscal, NF.TipoNF, NF.Serie, NF.Id_Int_Cliente, NF.txt_Razao_Nome"
    OrdenarFiltro = " order by NF.ID"
    Select Case cmbfiltrarpor
        Case "Destinatário": TextoFiltro = "NF.txt_Razao_Nome"
        Case "Ordem de faturamento": TextoFiltro = "NF.ID"
        Case "Código interno":
            IMFFiltro = "NFP.int_cod_produto" & FunVerifTipoFiltroIMFRel(Optinicio, Optmeio, Optfim, optIgual, txtTexto)
            FiltroPadrao = "Select " & CamposFiltro & " FROM (tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_detalhes_nota NFP ON NF.ID = NFP.ID_Nota) INNER JOIN Empresa E ON NF.ID_empresa = E.Codigo where " & IMFFiltro
        Case "Código de referência":
            IMFFiltro = "NFP.N_Referencia" & FunVerifTipoFiltroIMFRel(Optinicio, Optmeio, Optfim, optIgual, txtTexto)
            FiltroPadrao = "Select " & CamposFiltro & " FROM (tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_detalhes_nota NFP ON NF.ID = NFP.ID_Nota) INNER JOIN Empresa E ON NF.ID_empresa = E.Codigo where " & IMFFiltro
        Case "Descrição"
            IMFFiltro = "NFP.txt_descricao" & FunVerifTipoFiltroIMFRel(Optinicio, Optmeio, Optfim, optIgual, txtTexto)
            FiltroPadrao = "Select " & CamposFiltro & " FROM (tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_detalhes_nota NFP ON NF.ID = NFP.ID_Nota) INNER JOIN Empresa E ON NF.ID_empresa = E.Codigo where " & IMFFiltro
        Case "Pedido do cliente"
            IMFFiltro = "NFP.pccliente" & FunVerifTipoFiltroIMFRel(Optinicio, Optmeio, Optfim, optIgual, txtTexto)
            FiltroPadrao = "Select " & CamposFiltro & " FROM (tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_detalhes_nota NFP ON NF.ID = NFP.ID_Nota) INNER JOIN Empresa E ON NF.ID_empresa = E.Codigo where " & IMFFiltro
        Case "Pedido interno":
            FiltroPadrao = "Select " & CamposFiltro & " FROM (tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_proposta_nota PN ON NF.ID = PN.ID_Nota) INNER JOIN Empresa E ON NF.ID_empresa = E.Codigo where PN.proposta" & FunVerifTipoFiltroIMF(Optinicio, Optmeio, Optfim, optIgual, txtTexto)
    End Select
    If txtTexto <> "" Then
        If cmbfiltrarpor = "Destinatário" Or cmbfiltrarpor = "Ordem de faturamento" Then
            Strsql_Carteira_Faturamento = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN Empresa E ON NF.ID_empresa = E.Codigo where NF.Aplicacao = '" & Aplicacao & "' and " & TextoFiltro & FunVerifTipoFiltroIMF(Optinicio, Optmeio, Optfim, optIgual, txtTexto) & " and NF." & TextoFiltroEmpresa & TextoFiltroVal & " group by " & CamposFiltro & OrdenarFiltro
        Else
            Strsql_Carteira_Faturamento = FiltroPadrao & " and NF.Aplicacao = '" & Aplicacao & "' and NF." & TextoFiltroEmpresa & TextoFiltroVal & " group by " & CamposFiltro & OrdenarFiltro
        End If
    Else
        Strsql_Carteira_Faturamento = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN Empresa E ON NF.ID_empresa = E.Codigo where NF.Aplicacao = '" & Aplicacao & "' and NF." & TextoFiltroEmpresa & TextoFiltroVal & " group by " & CamposFiltro & OrdenarFiltro
    End If
End If
ProcCarregaListaCarteira (1)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCarregaListaCarteira(Pagina As Integer)
On Error GoTo tratar_erro

IDclienteNF = 0
ClienteNF = ""
MoedaNF = ""
OutraMoeda = False

lblRegistros(0).Caption = "Nº de registros: 0"
lblPaginas(0).Caption = "Página: 0 de: 0"
If Formulario = "Estoque/Ordem de faturamento" Then Lista_carteira.ListItems.Clear Else Lista_carteira_faturar.ListItems.Clear
If Strsql_Carteira_Faturamento = "" Then
    Exit Sub
Else
    If Left(Strsql_Carteira_Faturamento, 15) = "Select * from C" And Formulario <> "Estoque/Ordem de faturamento" Then Exit Sub
End If
Set TBLISTA_Faturamento_NF = CreateObject("adodb.recordset")
TBLISTA_Faturamento_NF.Open Strsql_Carteira_Faturamento, Conexao, adOpenKeyset, adLockReadOnly
If TBLISTA_Faturamento_NF.EOF = False Then ProcExibePagina (Pagina)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcExibePagina(Pagina)
On Error GoTo tratar_erro

IDclienteNF = 0
ClienteNF = ""
MoedaNF = ""
OutraMoeda = False

If Formulario = "Estoque/Ordem de faturamento" Then Lista_carteira.ListItems.Clear Else Lista_carteira_faturar.ListItems.Clear
TBLISTA_Faturamento_NF.PageSize = IIf(txtNreg(0) = "", 30, txtNreg(0))
TBLISTA_Faturamento_NF.AbsolutePage = Pagina
TamanhoPagina = TBLISTA_Faturamento_NF.PageSize
ContadorReg = 1

PBLista(5).Min = 0
PBLista(5).Max = FunVerifMaxPBListaPaginacao(TBLISTA_Faturamento_NF.RecordCount - IIf(Pagina > 1, (TBLISTA_Faturamento_NF.PageSize * (Pagina - 1)), 0), TBLISTA_Faturamento_NF.PageSize)
PBLista(5).Value = 1
Contador = 0
Do While TBLISTA_Faturamento_NF.EOF = False And (ContadorReg <= TamanhoPagina)
    If Formulario = "Estoque/Ordem de faturamento" Then
        With Lista_carteira.ListItems
            If Opt_filtrar_ped_int.Value = True Then
                .Add , , TBLISTA_Faturamento_NF!CODIGO
                .Item(.Count).SubItems(1) = TBLISTA_Faturamento_NF!Cotacao
                .Item(.Count).SubItems(2) = IIf(IsNull(TBLISTA_Faturamento_NF!Empresa), "", TBLISTA_Faturamento_NF!Empresa)
                .Item(.Count).SubItems(3) = IIf(IsNull(TBLISTA_Faturamento_NF!Desenho), "", TBLISTA_Faturamento_NF!Desenho)
                .Item(.Count).SubItems(4) = IIf(IsNull(TBLISTA_Faturamento_NF!Rev_codinterno), "", TBLISTA_Faturamento_NF!Rev_codinterno)
                .Item(.Count).SubItems(5) = IIf(IsNull(TBLISTA_Faturamento_NF!N_referencia), "", TBLISTA_Faturamento_NF!N_referencia)
                .Item(.Count).SubItems(6) = IIf(IsNull(TBLISTA_Faturamento_NF!descricao_tecnica), "", TBLISTA_Faturamento_NF!descricao_tecnica)
                .Item(.Count).SubItems(7) = IIf(IsNull(TBLISTA_Faturamento_NF!Unidade_com), "", TBLISTA_Faturamento_NF!Unidade_com)
                .Item(.Count).SubItems(8) = IIf(IsNull(TBLISTA_Faturamento_NF!PCCliente), "", TBLISTA_Faturamento_NF!PCCliente)
                .Item(.Count).SubItems(9) = IIf(IsNull(TBLISTA_Faturamento_NF!N_item), "", TBLISTA_Faturamento_NF!N_item)
                .Item(.Count).SubItems(10) = IIf(IsNull(TBLISTA_Faturamento_NF!PrazoFinal), "", (Format(TBLISTA_Faturamento_NF!PrazoFinal, "dd/mm/yy")))
                .Item(.Count).SubItems(11) = IIf(IsNull(TBLISTA_Faturamento_NF!preco_lote), "", Format(TBLISTA_Faturamento_NF!preco_lote, "###,##0.00"))
                .Item(.Count).SubItems(12) = IIf(IsNull(TBLISTA_Faturamento_NF!Ncotacao), "", TBLISTA_Faturamento_NF!Ncotacao)
                .Item(.Count).SubItems(13) = IIf(IsNull(TBLISTA_Faturamento_NF!Revisao), "", TBLISTA_Faturamento_NF!Revisao)
                .Item(.Count).SubItems(14) = IIf(IsNull(TBLISTA_Faturamento_NF!programatexto), "", TBLISTA_Faturamento_NF!programatexto)
                .Item(.Count).SubItems(15) = IIf(IsNull(TBLISTA_Faturamento_NF!Rev), "", TBLISTA_Faturamento_NF!Rev)
                .Item(.Count).SubItems(16) = IIf(IsNull(TBLISTA_Faturamento_NF!IDCliente), "", TBLISTA_Faturamento_NF!IDCliente)
                .Item(.Count).SubItems(17) = IIf(IsNull(TBLISTA_Faturamento_NF!Cliente), "", TBLISTA_Faturamento_NF!Cliente)
                .Item(.Count).SubItems(18) = IIf(IsNull(TBLISTA_Faturamento_NF!UF), "", TBLISTA_Faturamento_NF!UF)
                .Item(.Count).SubItems(19) = IIf(TBLISTA_Faturamento_NF!Antecipacao_fat = True, "SIM", "NÃO")
                .Item(.Count).SubItems(20) = IIf(TBLISTA_Faturamento_NF!Faturamento_parcial = True, "SIM", "NÃO")
                .Item(.Count).SubItems(21) = IIf(IsNull(TBLISTA_Faturamento_NF!Moeda), "", TBLISTA_Faturamento_NF!Moeda)
                .Item(.Count).SubItems(22) = IIf(IsNull(TBLISTA_Faturamento_NF!transporte), "", TBLISTA_Faturamento_NF!transporte)
                .Item(.Count).SubItems(23) = IIf(IsNull(TBLISTA_Faturamento_NF!Quantidade), "", Format(TBLISTA_Faturamento_NF!Quantidade, "###,##0.0000"))
                .Item(.Count).SubItems(24) = IIf(IsNull(TBLISTA_Faturamento_NF!qtdeliberada), "", Format(TBLISTA_Faturamento_NF!qtdeliberada, "###,##0.0000"))
                .Item(.Count).SubItems(25) = IIf(IsNull(TBLISTA_Faturamento_NF!QtdeFaturada), "", Format(TBLISTA_Faturamento_NF!QtdeFaturada, "###,##0.0000"))
                .Item(.Count).SubItems(26) = IIf(IsNull(TBLISTA_Faturamento_NF!Saldo), "", Format(TBLISTA_Faturamento_NF!Saldo, "###,##0.0000"))
                .Item(.Count).SubItems(27) = IIf(IsNull(TBLISTA_Faturamento_NF!Qtde_empenhada_est), "", Format(TBLISTA_Faturamento_NF!Qtde_empenhada_est, "###,##0.0000"))
                .Item(.Count).SubItems(28) = IIf(IsNull(TBLISTA_Faturamento_NF!Qtde_empenhada_prod), "", Format(TBLISTA_Faturamento_NF!Qtde_empenhada_prod, "###,##0.0000"))
                .Item(.Count).SubItems(29) = IIf(IsNull(TBLISTA_Faturamento_NF!Obs_faturamento), "", TBLISTA_Faturamento_NF!Obs_faturamento)
                .Item(.Count).SubItems(30) = IIf(IsNull(TBLISTA_Faturamento_NF!TabelaSN), "0", TBLISTA_Faturamento_NF!TabelaSN)
            Else
                .Add , , TBLISTA_Faturamento_NF!IDlista
                .Item(.Count).SubItems(1) = TBLISTA_Faturamento_NF!IDpedido
                .Item(.Count).SubItems(2) = IIf(IsNull(TBLISTA_Faturamento_NF!Empresa), "", TBLISTA_Faturamento_NF!Empresa)
                .Item(.Count).SubItems(3) = IIf(IsNull(TBLISTA_Faturamento_NF!Desenho), "", TBLISTA_Faturamento_NF!Desenho)
                .Item(.Count).SubItems(5) = IIf(IsNull(TBLISTA_Faturamento_NF!N_referencia), "", TBLISTA_Faturamento_NF!N_referencia)
                .Item(.Count).SubItems(6) = IIf(IsNull(TBLISTA_Faturamento_NF!Descricao), "", TBLISTA_Faturamento_NF!Descricao)
                .Item(.Count).SubItems(7) = IIf(IsNull(TBLISTA_Faturamento_NF!Unidade_com), "", TBLISTA_Faturamento_NF!Unidade_com)
                .Item(.Count).SubItems(10) = IIf(IsNull(TBLISTA_Faturamento_NF!Prazo), "", (Format(TBLISTA_Faturamento_NF!Prazo, "dd/mm/yy")))
                .Item(.Count).SubItems(11) = IIf(IsNull(TBLISTA_Faturamento_NF!preco_total), "", Format(TBLISTA_Faturamento_NF!preco_total, "###,##0.00"))
                .Item(.Count).SubItems(12) = IIf(IsNull(TBLISTA_Faturamento_NF!Pedido), "", TBLISTA_Faturamento_NF!Pedido)
                .Item(.Count).SubItems(16) = IIf(IsNull(TBLISTA_Faturamento_NF!idfornecedor), "", TBLISTA_Faturamento_NF!idfornecedor)
                .Item(.Count).SubItems(17) = IIf(IsNull(TBLISTA_Faturamento_NF!Fornecedor), "", TBLISTA_Faturamento_NF!Fornecedor)
                .Item(.Count).SubItems(18) = IIf(IsNull(TBLISTA_Faturamento_NF!Estado), "", TBLISTA_Faturamento_NF!Estado)
                .Item(.Count).SubItems(21) = IIf(IsNull(TBLISTA_Faturamento_NF!Moeda), "", TBLISTA_Faturamento_NF!Moeda)
                .Item(.Count).SubItems(22) = IIf(IsNull(TBLISTA_Faturamento_NF!transporte), "", TBLISTA_Faturamento_NF!transporte)
                .Item(.Count).SubItems(23) = IIf(IsNull(TBLISTA_Faturamento_NF!Quant_Comp), "", Format(TBLISTA_Faturamento_NF!Quant_Comp, "###,##0.0000"))
                .Item(.Count).SubItems(25) = IIf(IsNull(TBLISTA_Faturamento_NF!QtdeFaturada), "", Format(TBLISTA_Faturamento_NF!QtdeFaturada, "###,##0.0000"))
                .Item(.Count).SubItems(26) = IIf(IsNull(TBLISTA_Faturamento_NF!Saldo), "", Format(TBLISTA_Faturamento_NF!Saldo, "###,##0.0000"))
                .Item(.Count).SubItems(29) = IIf(IsNull(TBLISTA_Faturamento_NF!Obs_pedido), "", TBLISTA_Faturamento_NF!Obs_pedido)
            End If
        End With
    Else
        With Lista_carteira_faturar.ListItems
            .Add , , TBLISTA_Faturamento_NF!ID
            .Item(.Count).SubItems(1) = IIf(IsNull(TBLISTA_Faturamento_NF!Empresa), "", TBLISTA_Faturamento_NF!Empresa)
            .Item(.Count).SubItems(2) = IIf(IsNull(TBLISTA_Faturamento_NF!dt_DataEmissao), "", (Format(TBLISTA_Faturamento_NF!dt_DataEmissao, "dd/mm/yy")))
            .Item(.Count).SubItems(3) = IIf(IsNull(TBLISTA_Faturamento_NF!ID), "", TBLISTA_Faturamento_NF!ID)
            If IsNull(TBLISTA_Faturamento_NF!TipoNF) = False Then
                If TBLISTA_Faturamento_NF!TipoNF = "M1" Then TipoNF2 = "Produto(s)"
                If TBLISTA_Faturamento_NF!TipoNF = "SA" Then TipoNF2 = "Serviço(s)"
                If TBLISTA_Faturamento_NF!TipoNF = "M1SA" Then TipoNF2 = "Prod./Serv."
            End If
            .Item(.Count).SubItems(4) = TipoNF2
            .Item(.Count).SubItems(5) = IIf(IsNull(TBLISTA_Faturamento_NF!Serie), "", TBLISTA_Faturamento_NF!Serie)
            .Item(.Count).SubItems(6) = IIf(IsNull(TBLISTA_Faturamento_NF!Id_Int_Cliente), "", TBLISTA_Faturamento_NF!Id_Int_Cliente)
            .Item(.Count).SubItems(7) = IIf(IsNull(TBLISTA_Faturamento_NF!txt_Razao_Nome), "", TBLISTA_Faturamento_NF!txt_Razao_Nome)
        End With
    End If
    TBLISTA_Faturamento_NF.MoveNext
    ContadorReg = ContadorReg + 1
    Contador = Contador + 1
    PBLista(5).Value = Contador
Loop
lblRegistros(0).Caption = "Nº de registros: " & TBLISTA_Faturamento_NF.RecordCount
If TBLISTA_Faturamento_NF.AbsolutePage = adPosBOF Then
   lblPaginas(0).Caption = "Página: 1 de: " & TBLISTA_Faturamento_NF.PageCount
ElseIf TBLISTA_Faturamento_NF.AbsolutePage = adPosEOF Then
        lblPaginas(0).Caption = "Página: " & TBLISTA_Faturamento_NF.PageCount & " de: " & TBLISTA_Faturamento_NF.PageCount
    Else
        lblPaginas(0).Caption = "Página: " & TBLISTA_Faturamento_NF.AbsolutePage - 1 & " de: " & TBLISTA_Faturamento_NF.PageCount
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcGerarOF()
On Error GoTo tratar_erro

If Incluir = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation
    Exit Sub
End If
If FunVerifRegimeEmpresa(Cmb_empresa_filtro.ItemData(Cmb_empresa_filtro.ListIndex)) = 1 Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select Tabela FROM Impostos_TabelaDAS where ID_empresa = " & Cmb_empresa_filtro.ItemData(Cmb_empresa_filtro.ListIndex) & " and Ativado = 1 group by Tabela", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = True Then
        MsgBox ("Não é permitido criar nota fiscal, pois não existe nenhuma tabela do simples nacional ativa."), vbExclamation
        TBAbrir.Close
        Exit Sub
    End If
    TBAbrir.Close
End If

If Opt_filtrar_ped_int.Value = True Then
    If Opt_produto_filtrar.Value = True Then NomeCampo = "produto" Else NomeCampo = "serviço"
Else
    NomeCampo = "produto"
End If
Permitido = False
Cont = 0
With Lista_carteira
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If MsgBox("Deseja realmente gerar ordem de faturamento deste(s) " & NomeCampo & "(s)?", vbQuestion + vbYesNo) = vbYes Then ProcLimpaCamposNota Else Exit Sub
            End If
            Permitido = True
            RegimeEmpresa = FunVerifRegimeEmpresa(Cmb_empresa_filtro.ItemData(Cmb_empresa_filtro.ListIndex))
            ProcNovoPedido .ListItems.Item(InitFor).ListSubItems(1), Opt_filtrar_ped_int.Value
            Cont = Cont + 1
        End If
    Next InitFor
End With
If Permitido = False Then
    MsgBox ("Informe o(s) " & NomeCampo & "(s) antes de gerar a ordem de faturamento."), vbExclamation
    Exit Sub
End If

If OutraMoeda = True Then
    If Moeda <> "REAL" Then
Mensagem:
        Dolar = InputBox("Favor informar o valor do " & Moeda & ".")
        If Dolar = "" Then Exit Sub
        If IsNumeric(Dolar) = False Then
            MsgBox ("Só é permitido número neste campo."), vbExclamation
            GoTo Mensagem
        End If
        ValorMoeda = Dolar
    End If
End If

GerarOF = True
Novo_Nota = True
Cmb_modelo = "55 - Nota Fiscal Eletrônica"
If Opt_filtrar_ped_int.Value = True Then
    Faturamento_Vendas_PI = True
    If Opt_produto_filtrar.Value = True Then TipoNF = "M1" Else TipoNF = "SA"
Else
    Faturamento_Vendas_PI = False
    TipoNF = "M1"
End If
ProcSalvar TipoNF, 1, Cmb_empresa_filtro.ItemData(Cmb_empresa_filtro.ListIndex)

Permitido = False
With Lista_carteira
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            ProcEnviaDadosPedido .ListItems.Item(InitFor).ListSubItems(1), Opt_filtrar_ped_int.Value
            If Opt_filtrar_ped_int.Value = True Then
                If Opt_produto_filtrar = True Then
                    If Permitido = False And Cont > 1 Then
                        If MsgBox("Deseja agrupar o(s) produto(s) com o mesmo código interno, pedido do cliente e número do item?", vbQuestion + vbYesNo) = vbYes Then Permitido1 = True Else Permitido1 = False
                    End If
                    Permitido = True
                    Procenviadadoslista .ListItems.Item(InitFor), optespecificacao.Value, Permitido1, Opt_filtrar_ped_int.Value, .ListItems.Item(InitFor).ListSubItems(26)
                Else
                    ProcEnviadadosListaServicos .ListItems.Item(InitFor), optespecificacao.Value, .ListItems.Item(InitFor).ListSubItems(26)
                End If
            Else
                Permitido = True
                Procenviadadoslista .ListItems.Item(InitFor), optespecificacao.Value, False, Opt_filtrar_ped_int.Value, .ListItems.Item(InitFor).ListSubItems(26)
            End If
        End If
    Next InitFor
End With
ProcCarregaLista
ProcCarregaListaServicos
ProcGravarTotaisNota
ProcCarregaListaNota (1)

MsgBox ("Nova ordem de faturamento cadastrada com sucesso."), vbInformation
With txtSerie
    .Locked = False
    .TabStop = True
End With
Frame1(6).Enabled = True
Novo_Nota = False
ProcCarregaListaCarteira (1)

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Function VerificaContaBaixada(ID_nota As Long, Acao As String, MostrarMsg As Boolean) As Boolean
On Error GoTo tratar_erro

VerificaContaBaixada = False
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select Id from tbl_Detalhes_Recebimento where ID_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select CFOP.IDCountCfop from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & ID_nota & " and CFOP.Devolucao = 'True'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False And (Opt_saida.Value = True And Len(txttipocliente) = 1 Or Opt_entrada.Value = True And Len(txttipocliente) = 2) Then
        'Fornecedor
        If Opt_saida.Value = True And Len(txttipocliente) = 1 Then TextoFiltro = "tbl_ContasPagar where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and Despesas_NF = 'False' and (txt_pedido IS NULL or txt_pedido = N'')"
        'Cliente
        If Opt_entrada.Value = True And Len(txttipocliente) = 2 Then TextoFiltro = "tbl_contas_receber where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and (Proposta IS NULL or Proposta = N'')"
    Else
        If Opt_saida.Value = True Then
            TextoFiltro = "tbl_contas_receber where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and (Proposta IS NULL or Proposta = N'')"
        Else
            TextoFiltro = "tbl_ContasPagar where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and Despesas_NF = 'False' and (txt_pedido IS NULL or txt_pedido = N'')"
        End If
    End If
    
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select IdIntConta from " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        VerificaContaBaixada = True
        If MostrarMsg = True Then MsgBox ("Não é permitido " & Acao & ", pois existe(m) duplicata(s) na nota que já foi(ram) baixada(s) no financeiro."), vbExclamation
        TBContas.Close
        Exit Function
    End If
    TBContas.Close
End If
TBAbrir.Close
    
Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Function
End Function

Function FunCalulaArredondaICMS(ICMS_Arredondar As Double, BC_Arredondar As Double, NaoArredondar As Boolean) As Double
On Error GoTo tratar_erro

If NaoArredondar = True Then
    'Calculo sem arredondamento
    FunCalulaArredondaICMS = (BC_Arredondar * ICMS_Arredondar) / 100
    If FunCalulaArredondaICMS <> Int(FunCalulaArredondaICMS) Then
        NumeroInteiro() = Split(FunCalulaArredondaICMS, ",")
        FunCalulaArredondaICMS = NumeroInteiro(0) & "," & Left(NumeroInteiro(1), 2)
    End If
Else
    'Calculo com arredondamento
    FunCalulaArredondaICMS = (BC_Arredondar * ICMS_Arredondar) / 100
End If

Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
    Exit Function
End Function

Public Sub ProcMostraValoresOF()
On Error GoTo tratar_erro

Set TBFerramentas = CreateObject("adodb.recordset")
TBFerramentas.Open "Select * from empresa where codigo = " & Cmb_empresa.ItemData(Cmb_empresa.ListIndex) & " and Esconder_ValorOF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBFerramentas.EOF = False Then
    With SSFaturamento
        .TabVisible(6) = False
        .TabsPerRow = 6
    End With
    
    'Aba principal
    Frame1(8).Visible = False
    Frame1(28).Visible = False
    Frame1(29).Top = (PBLista(0).Top - PBLista(0).Height) - Frame1(29).Height
    With ListaNota
        .ColumnHeaders(7).Width = 0
        .ColumnHeaders(8).Width = 7605
        .Height = Frame1(29).Top - (Frame1(7).Top + Frame1(7).Height)
    End With
    
    'Aba de produtos
    With listaProdutos
        .ColumnHeaders(5).Width = 4705
        .ColumnHeaders(9).Width = 0
        .ColumnHeaders(10).Width = 0
        .ColumnHeaders(11).Width = 0
        .ColumnHeaders(12).Width = 0
        .ColumnHeaders(13).Width = 0
        .ColumnHeaders(14).Width = 0
        .ColumnHeaders(17).Width = 0
        .ColumnHeaders(18).Width = 0
        .ColumnHeaders(19).Width = 0
        .ColumnHeaders(20).Width = 0
        .ColumnHeaders(21).Width = 0
        .ColumnHeaders(22).Width = 0
        .ColumnHeaders(23).Width = 0
    End With
    txtnaovisualizarvalor.Visible = True
    txtnaovisualizarvalor1.Visible = True
    txtVLUnit.Visible = False
    txtVLTotal.Visible = False
    txtIcms.Visible = False
    txtIPI.Visible = False
    txtValor_IPI.Visible = False
    txt_VlrFrete_prod.Visible = False
    Chk_tem_IPI_frete_prod.Visible = False
    txt_vlrSeguro_prod.Visible = False
    txt_OutrasDisp_prod.Visible = False
    Txt_valor_total_desc_prod.Visible = False
    chkNaoArredondar.Visible = False
    
    Frame1(30).Top = (Frame1(11).Top - Frame1(30).Height) + Frame1(11).Height
    Frame1(10).Visible = False
    Frame1(11).Visible = False
    listaProdutos.Height = Frame1(30).Top - (Frame1(9).Top + Frame1(9).Height)
    
    'Aba de serviços
    With Listaservicos
        .ColumnHeaders(4).Width = 7105
        .ColumnHeaders(8).Width = 0
        .ColumnHeaders(9).Width = 0
        .ColumnHeaders(10).Width = 0
        .ColumnHeaders(11).Width = 0
    End With
    txtnaovisualizarvalor2.Visible = True
    txtVlrunitserv.Visible = False
    txtVlrtotalserv.Visible = False
    
    PBLista(2).Top = (Frame1(14).Top - PBLista(2).Height) + Frame1(14).Height
    Frame1(14).Visible = False
    Listaservicos.Height = PBLista(2).Top - (Frame1(12).Top + Frame1(12).Height)
Else
     With SSFaturamento
        .TabVisible(6) = True
        .TabsPerRow = 7
    End With
    
    'Aba principal
    Frame1(8).Visible = True
    Frame1(28).Visible = True
    Frame1(29).Top = Frame1(8).Top - Frame1(29).Height
    With ListaNota
        .ColumnHeaders(7).Width = 1200
        .ColumnHeaders(8).Width = 6405
        .Height = Frame1(29).Top - (Frame1(7).Top + Frame1(7).Height)
    End With
    
    'Aba de produtos
    With listaProdutos
        .ColumnHeaders(5).Width = 3105
        .ColumnHeaders(9).Width = 1200
        .ColumnHeaders(10).Width = 1200
        .ColumnHeaders(11).Width = 700
        .ColumnHeaders(12).Width = 1099
        .ColumnHeaders(13).Width = 700
        .ColumnHeaders(14).Width = 1099
        .ColumnHeaders(17).Width = 1200
        .ColumnHeaders(18).Width = 1200
        .ColumnHeaders(19).Width = 1399
        .ColumnHeaders(20).Width = 1200
        .ColumnHeaders(21).Width = 1400
        .ColumnHeaders(22).Width = 1400
        .ColumnHeaders(23).Width = 1200
    End With
        
    txtnaovisualizarvalor.Visible = False
    txtnaovisualizarvalor1.Visible = False
    txtVLUnit.Visible = True
    txtVLTotal.Visible = True
    txtIcms.Visible = True
    txtIPI.Visible = True
    txtValor_IPI.Visible = True
    txt_VlrFrete_prod.Visible = True
    Chk_tem_IPI_frete_prod.Visible = True
    txt_vlrSeguro_prod.Visible = True
    txt_OutrasDisp_prod.Visible = True
    Txt_valor_total_desc_prod.Visible = True
    chkNaoArredondar.Visible = True
    
    Frame1(30).Top = Frame1(10).Top - Frame1(30).Height
    Frame1(10).Visible = True
    Frame1(11).Visible = True
    listaProdutos.Height = Frame1(30).Top - (Frame1(9).Top + Frame1(9).Height)
    
    'Aba de serviços
    With Listaservicos
        .ColumnHeaders(4).Width = 4054
        .ColumnHeaders(8).Width = 1200
        .ColumnHeaders(9).Width = 1200
        .ColumnHeaders(10).Width = 1000
        .ColumnHeaders(11).Width = 1099
    End With
    txtnaovisualizarvalor2.Visible = False
    txtVlrunitserv.Visible = True
    txtVlrtotalserv.Visible = True
    
    PBLista(2).Top = Frame1(14).Top - PBLista(2).Height
    Frame1(14).Visible = True
    Listaservicos.Height = PBLista(2).Top - (Frame1(12).Top + Frame1(12).Height)
End If
TBFerramentas.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcCentroCusto()
On Error GoTo tratar_erro

If lst_Duplicata.ListItems.Count = 0 Then Exit Sub
If Txt_ID_duplicata = "" Or Txt_ID_duplicata = "0" Then
    MsgBox ("Informe a duplicata antes de cadastrar/visualizar o(s) centro(s) de custo."), vbExclamation
    Exit Sub
End If
Financeiro_Contas_Pagar = False
Financeiro_Contas_Pagas = False
Faturamento = True
frmContas_CC.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcVerifiFormulario()
On Error GoTo tratar_erro

If Faturamento_NF_Saida = False Then
    If Left(Caption, 7) = "Estoque" Then Formulario = "Estoque/Nota fiscal" Else Formulario = "Faturamento/Nota fiscal/Terceiros"
Else
    If Left(Caption, 7) = "Estoque" Then Formulario = "Estoque/Ordem de faturamento" Else Formulario = "Faturamento/Nota fiscal/Própria"
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcImprimirCartFat()
On Error GoTo tratar_erro

If Lista_carteira.ListItems.Count = 0 Then Exit Sub
If Opt_filtrar_ped_int.Value = True Then NomeRel = "Estoque_ordemfaturamento_carteiraPI.rpt" Else NomeRel = "Estoque_ordemfaturamento_carteiraPC.rpt"
ProcImprimirRel FormulaRel_OF, ""

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Private Sub ProcEmpenho()
On Error GoTo tratar_erro

If Alterar = False Then
    MsgBox ("Atenção usuário " & pubUsuario & " voce não tem acesso a este recurso.")
    Exit Sub
End If

Permitido = False
With listaProdutos
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If Cmb_opcao_lista_Produtos = "Empenhar" Then
                    MsgTexto = "empenhar este"
                    MsgTexto1 = "Empenho"
                Else
                    MsgTexto = "cancelar o empenho deste"
                    MsgTexto1 = "Cancelamento do empenho"
                End If
                If MsgBox("Deseja realmente " & MsgTexto & " produto do estoque?", vbQuestion + vbYesNo) = vbNo Then Exit Sub
            End If
                                                                                   
            Permitido = True
            If Cmb_opcao_lista_Produtos = "Cancelar empenho" Then
                Evento = "Cancelar empenho"
                Conexao.Execute "DELETE from Estoque_controle_empenho_vendas where ID_Faturamento = " & .ListItems(InitFor)
            Else
                Evento = "Empenhar"
                
                Valor = .ListItems(InitFor).ListSubItems(7)
                'Verifica qtde. dos pedidos
                Set TBProduto = CreateObject("adodb.recordset")
                TBProduto.Open "Select SUM(ISNULL(Quantidade, 0)) as Qtd from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                If TBProduto.EOF = False Then
                    Qtd = IIf(IsNull(TBProduto!Qtd), 0, TBProduto!Qtd)
                End If
                Valor = Valor - Qtd 'Saldo da NF = (qtde. da NF - qtde. dos pedidos)
                                
                Set TBProduto = CreateObject("adodb.recordset")
                TBProduto.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                If TBProduto.EOF = False Then
                    Do While TBProduto.EOF = False
                        Valor2 = IIf(IsNull(TBProduto!Quantidade), 0, TBProduto!Quantidade) 'Quantidade do pedido
                        Valor2 = Valor2 - FunVerifQtdeEmpenhada("ECEV.ID_carteira = " & TBProduto!ID_carteira)
                        ProcEmpenhaEstoque TBProduto!Codinterno, True, .ListItems(InitFor)
                        TBProduto.MoveNext
                    Loop
                End If
                TBProduto.Close
                          
                If Valor > 0 Then
                    Valor = Valor - FunVerifQtdeEmpenhada("NFPP.ID_prod_NF = " & .ListItems.Item(InitFor) & " and EC.Desenho = '" & .ListItems.Item(InitFor).ListSubItems(1) & "'")
                    ProcEmpenhaEstoque .ListItems(InitFor).ListSubItems(1), False, .ListItems(InitFor)
                End If
                '==================================
                Modulo = Formulario
                ID_documento = .ListItems(InitFor)
                If txtNFiscal = "" Then NomeCampo = "N° ordem: " & TxtID Else NomeCampo = "N° nota: " & txtNFiscal
                Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtSerie
                Documento1 = "Cód. interno: " & .ListItems.Item(InitFor).ListSubItems(1)
                ProcGravaEvento
                '==================================
            End If
        End If
    Next InitFor
End With
If Permitido = False Then
    MsgBox ("Informe o(s) produto(s) antes de empenhar/cancelar."), vbExclamation
Else
    MsgBox (MsgTexto1 & " efetuado com sucesso."), vbInformation
    ProcCarregaLista
    If CodigoLista1 <> 0 And listaProdutos.ListItems.Count <> 0 Then
        listaProdutos.SelectedItem = listaProdutos.ListItems(CodigoLista1)
        listaProdutos.SetFocus
    End If
End If

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Function FunVerifQtdeEmpenhada(TextoFiltro As String) As Double
On Error GoTo tratar_erro

FunVerifQtdeEmpenhada = 0
Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select ISNULL(SUM(Qtde_empenhada), 0) as Valor1 from (tbl_Detalhes_Nota_pedidos NFPP INNER JOIN Estoque_Controle_Empenho_Vendas ECEV ON ECEV.ID_carteira = NFPP.ID_carteira) INNER JOIN Estoque_controle EC ON EC.IDestoque = ECEV.ID_estoque where " & TextoFiltro & " and ECEV.Qtde_empenhada - ISNULL(ECEV.Qtde_saida, 0) > 0", Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then FunVerifQtdeEmpenhada = TBFI!Valor1
TBFI.Close

Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Function

Private Sub ProcEmpenhaEstoque(Codinterno As String, ProdPed As Boolean, ID_Faturamento As Long)
On Error GoTo tratar_erro

Set TBEstoque = CreateObject("adodb.recordset")
TBEstoque.Open "Select * from Estoque_produtos where desenho = '" & Codinterno & "' and estoque_real > 0 and Liberado = 'SIM' order by Data, IdEstoque", Conexao, adOpenKeyset, adLockOptimistic
If TBEstoque.EOF = False Then
    Do While TBEstoque.EOF = False And IIf(ProdPed = True, Valor2 > 0, Valor > 0)

        Qtde = TBEstoque!estoque_real 'Quantidade da RE
        
        'Verifica empenho de vendas
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select Sum(Qtde_empenhada - ISNULL(Qtde_saida, 0)) as Valor from Estoque_Controle_Empenho_Vendas where ID_estoque = " & TBEstoque!IDestoque & " and Qtde_empenhada - ISNULL(Qtde_saida, 0) > 0", Conexao, adOpenKeyset, adLockOptimistic
        If TBFI.EOF = False Then Estoquereal = IIf(IsNull(TBFI!Valor), 0, TBFI!Valor)
        
        'Verifica empenho na produção
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select Sum(PNFC.Quantidade - PNFC.Qtde_saida) as Valor from (Producao_NF_Consignada PNFC INNER JOIN Producaomaterial PM ON PM.Ordem = PNFC.Ordem and PM.Codigo = PNFC.Codinterno) INNER JOIN Producao P ON P.Ordem = PNFC.Ordem where PNFC.IDestoque = " & TBEstoque!IDestoque & " and PNFC.Quantidade - PNFC.Qtde_saida > 0 and P.Status <> 'Cancelada' and P.Concluida = 0 and (PM.Saida = 'NÃO' OR PM.Saida = 'PARCIAL')", Conexao, adOpenKeyset, adLockOptimistic
        If TBFI.EOF = False Then Estoquereal = Estoquereal + IIf(IsNull(TBFI!Valor), 0, TBFI!Valor)
        TBFI.Close
        Qtde = Qtde - Estoquereal
        
        Set TBGravar = CreateObject("adodb.recordset")
        TBGravar.Open "Select * from estoque_controle_empenho_vendas", Conexao, adOpenKeyset, adLockOptimistic
        TBGravar.AddNew
        TBGravar!Data = Date
        TBGravar!Responsavel = pubUsuario
        TBGravar!ID_estoque = TBEstoque!IDestoque
        If ProdPed = True Then TBGravar!ID_carteira = TBProduto!ID_carteira
        TBGravar!ID_Faturamento = ID_Faturamento
        If Qtde >= IIf(ProdPed = True, Valor2, Valor) Then TBGravar!Qtde_empenhada = IIf(ProdPed = True, Valor2, Valor) Else TBGravar!Qtde_empenhada = Qtde
        
        If ProdPed = True Then Valor2 = Valor2 - TBGravar!Qtde_empenhada Else Valor = Valor - TBGravar!Qtde_empenhada
        
        TBGravar.Update
        TBGravar.Close
        
        TBEstoque.MoveNext
    Loop
End If
TBEstoque.Close

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Public Sub ProcCheckList()
On Error GoTo tratar_erro

If TxtID = "" Then
    MsgBox "Informe a nota fiscal antes de visualizar check-list de importação.", vbExclamation
    Exit Sub
End If
If Novo_Nota = True Then
    MsgBox ("Salve a nota fiscal antes de visualizar check-list de importação."), vbExclamation
    Exit Sub
End If
frmFaturamento_Prod_Serv_Checklist.Show 1

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Sub ProcCorrigeValorImpostosSN(IDnota As Long)
On Error GoTo tratar_erro

AtualizaImpSN = True
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select NF.ID_empresa, NF.Id_Int_Cliente, NF.txt_Razao_Nome, NF.TabelaSN, NF.txt_UF, NFE.Consumidor_final, NFE.Finalidade_emissao, NFP.* from ((tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Detalhes_Nota NFP ON NFP.ID_nota = NF.ID) INNER JOIN tbl_Dados_Nota_Fiscal_NFe NFE ON NFE.ID_nota = NF.ID) INNER JOIN Impostos I ON I.ID_empresa = NF.ID_empresa where NF.ID = " & IDnota & " and NF.Alterar = 'False' and I.Regime = 1", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Do While TBProduto.EOF = False
        Valor_total = TBProduto!dbl_ValorTotal + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)
        If IsNull(TBProduto!ID_CFOP) = False And TBProduto!ID_CFOP <> "" Then ProcControleImposto TBProduto!ID_CFOP, IIf(IsNull(TBProduto!Id_Int_Cliente), 0, TBProduto!Id_Int_Cliente)
        If TBProduto!Tipo = "P" Then
            ProcVerifImpostosEmpresa TBProduto!ID_empresa, TBProduto!Retorno, "", False, 0, False, TBProduto!TabelaSN, Lbl2.Caption
            'Novo cálculo simples nacional 2018
            If DAS <> 0 Then
                NovoValor = Replace(DAS, ",", ".")
                Conexao.Execute "UPDATE tbl_Totais_Nota Set DAS = " & NovoValor & " where ID_nota = " & IDnota
            End If
            If TBProduto!CST_PIS = "01" Or TBProduto!CST_PIS = "03" Or TBProduto!CST_PIS = "49" Or TBProduto!CST_PIS = "98" Or TBProduto!CST_PIS = "99" Then
                TBProduto!PIS_Prod = PIS_Prod
                If PIS_Prod <> 0 Then TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00") Else TBProduto!Total_PIS_prod = 0
            Else
                TBProduto!PIS_Prod = 0
                TBProduto!Total_PIS_prod = 0
            End If
            If TBProduto!CST_Cofins = "01" Or TBProduto!CST_Cofins = "02" Or TBProduto!CST_Cofins = "03" Or TBProduto!CST_Cofins = "49" Or TBProduto!CST_Cofins = "98" Or TBProduto!CST_Cofins = "99" Then
                TBProduto!Cofins_Prod = Cofins_Prod
                If Cofins_Prod <> 0 Then TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00") Else TBProduto!Total_Cofins_prod = 0
            Else
                TBProduto!Cofins_Prod = 0
                TBProduto!Total_Cofins_prod = 0
            End If
            TBProduto!CSLL_Prod = CSLL_Prod
            If CSLL_Prod <> 0 Then TBProduto!Total_CSLL_prod = Format((Valor_total * CSLL_Prod) / 100, "###,##0.00") Else TBProduto!Total_CSLL_prod = 0
            TBProduto!IRPJ_Prod = IRPJ_Prod
            If IRPJ_Prod <> 0 Then TBProduto!Total_IRPJ_prod = Format((Valor_total * IRPJ_Prod) / 100, "###,##0.00") Else TBProduto!Total_IRPJ_prod = 0
            TBProduto!cpp = CPP_Prod
            If CPP_Prod <> 0 Then TBProduto!Total_CPP = Format((Valor_total * CPP_Prod) / 100, "###,##0.00") Else TBProduto!Total_CPP = 0
            TBProduto!ICMS_SN = ICMS_SN
            ProcAtualizaCST TBProduto!ID_empresa, TBProduto!Id_Int_Cliente, TBProduto!txt_Razao_Nome, TBProduto!txt_UF, IIf(IsNull(TBProduto!Consumidor_final), 1, TBProduto!Consumidor_final), IIf(IsNull(TBProduto!Finalidade_emissao), 1, TBProduto!Finalidade_emissao)
        Else
            ProcVerifImpostosEmpresa TBProduto!ID_empresa, False, TBProduto!int_Cod_Produto, IIf(IsNull(TBProduto!Servico_cliente), False, TBProduto!Servico_cliente), Valor_total, True, TBProduto!TabelaSN, Lbl2.Caption
            If TBProduto!Imposto_manual_serv <> True Then
                TBProduto!PIS_Serv = PIS_Serv
                TBProduto!Cofins_Serv = Cofins_Serv
                TBProduto!CSLL_Serv = CSLL_Serv
                TBProduto!ISS = ISS_Serv
                TBProduto!INSS_Serv = INSS_Serv
                TBProduto!IRRF_Serv = IRRF_Serv
                TBProduto!cpp = CPP_Serv
            End If
            If TBProduto!PIS_Serv <> 0 Then TBProduto!Total_PIS_serv = Format((Valor_total * TBProduto!PIS_Serv) / 100, "###,##0.00") Else TBProduto!Total_PIS_serv = 0
            If TBProduto!Cofins_Serv <> 0 Then TBProduto!Total_Cofins_serv = Format((Valor_total * TBProduto!Cofins_Serv) / 100, "###,##0.00") Else TBProduto!Total_Cofins_serv = 0
            If TBProduto!CSLL_Serv <> 0 Then TBProduto!Total_CSLL_serv = Format((Valor_total * TBProduto!CSLL_Serv) / 100, "###,##0.00") Else TBProduto!Total_CSLL_serv = 0
            If TBProduto!ISS <> 0 Then TBProduto!VlrISS = Format((Valor_total * TBProduto!ISS) / 100, "###,##0.00") Else TBProduto!VlrISS = 0
            If TBProduto!INSS_Serv <> 0 Then TBProduto!Total_INSS_serv = Format((Valor_total * TBProduto!INSS_Serv) / 100, "###,##0.00") Else TBProduto!Total_INSS_serv = 0
            If TBProduto!IRRF_Serv <> 0 Then TBProduto!Total_IRRF_serv = Format((Valor_total * TBProduto!IRRF_Serv) / 100, "###,##0.00") Else TBProduto!Total_IRRF_serv = 0
            If TBProduto!cpp <> 0 Then TBProduto!Total_CPP = Format((Valor_total * TBProduto!cpp) / 100, "###,##0.00") Else TBProduto!Total_CPP = 0
            
            TBProduto!IRPJ_Serv = IRPJ_Serv
            If TBProduto!IRPJ_Serv <> 0 Then TBProduto!Total_IRPJ_serv = Format((Valor_total * TBProduto!IRPJ_Serv) / 100, "###,##0.00") Else TBProduto!Total_IRPJ_serv = 0
        End If
        TBProduto.Update
        TBProduto.MoveNext
    Loop
End If
TBProduto.Close
ProcCarregaLista
ProcCarregaListaServicos
If NF_alterada = True Then ProcCarregaTotaisNota IDnota
ProcGravarTotaisNota
AtualizaImpSN = False

Exit Sub
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub

Public Function VerificaDigVerifNF(ByVal strNumero As String) As String
On Error GoTo tratar_erro
Dim i As Integer: Dim IntCont As Integer: Dim Vlr As Integer
Dim Resto As Integer

IntCont = 2
Vlr = 0
For i = Len(strNumero) To 1 Step -1
    Vlr = Vlr + (Val(Mid(strNumero, i, 1) * IntCont))
    IntCont = IIf(IntCont >= 9, 2, IntCont + 1)
Next
Resto = Vlr Mod 11
Select Case Resto
    Case 0: Resto = 0
    Case 1: Resto = 0
    Case Is > 1: Resto = Str(Val(11 - Resto))
End Select
VerificaDigVerifNF = Resto
    
Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Function

Public Function FunCalcularAproxTrib(SomaPisCOFINS As Double, CST_Aprox As String, IDCFOP_Aprox As Integer, Serv_Aprox As Boolean) As Double
On Error GoTo tratar_erro

'Verifica valor aproximado dos impostos LEI 12741
FunCalcularAproxTrib = 0
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "SELECT IDCountCfop FROM tbl_NaturezaOperacao WHERE IDCountCfop = " & IDCFOP_Aprox & " AND (Vendas = 'True' OR MaoObra = 'True')", Conexao, adOpenKeyset, adLockReadOnly
If TBCFOP.EOF = False Then
    Set TBHistProc = CreateObject("adodb.recordset")
    TBHistProc.Open "SELECT E.Simples, TN.DAS FROM (Empresa E INNER JOIN tbl_Dados_Nota_Fiscal N ON E.Codigo = N.ID_empresa) LEFT JOIN tbl_Totais_Nota TN ON N.id = TN.ID_Nota WHERE N.ID = " & TxtID, Conexao, adOpenKeyset, adLockReadOnly
    If TBHistProc.EOF = False Then
        If TBHistProc!Simples = True Then
            FunCalcularAproxTrib = IIf(IsNull(TBHistProc!DAS), 0, TBHistProc!DAS)
        Else
            If Serv_Aprox = True Then
                FunCalcularAproxTrib = SomaPisCOFINS
            ElseIf CST_Aprox <> "" Then
                If Left(CST_Aprox, 1) = 0 Or Left(CST_Aprox, 1) = 3 Or Left(CST_Aprox, 1) = 4 Or Left(CST_Aprox, 1) = 5 Then FunCalcularAproxTrib = IIf(IsNull(TBFI!Aliq_nacional), 0, TBFI!Aliq_nacional) Else FunCalcularAproxTrib = IIf(IsNull(TBFI!Aliq_importacao), 0, TBFI!Aliq_importacao)
            End If
        End If
    End If
    TBHistProc.Close
End If
TBCFOP.Close

Exit Function
tratar_erro:
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Function

Sub ProcCarregaEntrega()
On Error GoTo tratar_erro

With cmbEntrega
    .Clear
    If txtIDCliente <> "" And txt_Razao <> "" Then
        'Verifica se é cliente ou fornecedor
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select * from Clientes where IDCliente = " & txtIDCliente & " and NomeRazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockReadOnly
        If TBFI.EOF = False Then Tipo = "C" Else Tipo = "F"
        TBFI.Close
        
        Permitido = True
        If TxtID <> "" Then
            Set TBFI = CreateObject("adodb.recordset")
            If Tipo = "C" Then
                TextoID = ""
                TBFI.Open "Select VC.* from (vendas_comercial VC INNER JOIN vendas_proposta VP ON VP.Cotacao = VC.Cotacao) INNER JOIN tbl_proposta_nota PN ON PN.proposta = VP.Ncotacao and PN.Revisao = VP.Revisao where PN.ID_nota = " & TxtID & " and VC.ID_entrega IS NOT NULL and VC.ID_entrega <> 0 order by VC.ID_entrega", Conexao, adOpenKeyset, adLockReadOnly
                If TBFI.EOF = False Then
                    Permitido = False
                    Do While TBFI.EOF = False
                        If TextoID <> TBFI!ID_entrega Then
                            .AddItem TBFI!Local_entrega
                            .ItemData(cmbEntrega.NewIndex) = TBFI!ID_entrega
                            TextoID = TBFI!ID_entrega
                        End If
                        TBFI.MoveNext
                    Loop
                End If
                TBFI.Close
            Else
                TBFI.Open "Select CC.* from (Compras_comercial CC INNER JOIN Compras_pedido CP ON CP.IDpedido = CC.IDpedido) INNER JOIN tbl_proposta_nota PN ON PN.proposta = CP.Pedido and PN.Revisao = 0 where PN.ID_nota = " & TxtID & " and CC.ID_entrega IS NOT NULL and CC.ID_entrega <> 0 and CC.localentrega IS NOT NULL", Conexao, adOpenKeyset, adLockReadOnly
                If TBFI.EOF = False Then
                    Permitido = False
                    .AddItem TBFI!localentrega
                    .ItemData(cmbEntrega.NewIndex) = TBFI!ID_entrega
                    .Text = TBFI!localentrega
                End If
                TBFI.Close
            End If
        End If
        
        If Permitido = True Then
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from clientes_entrega where idcliente = " & txtIDCliente & " and Tipo = '" & Tipo & "'", Conexao, adOpenKeyset, adLockReadOnly
            If TBFI.EOF = False Then
                Do While TBFI.EOF = False
                    If IsNull(TBFI!Tipo_endereco) = False And TBFI!Tipo_endereco <> "" Then
                        Endereco = TBFI!Tipo_endereco & ": " & IIf(IsNull(TBFI!endereco_entrega), "", TBFI!endereco_entrega)
                    Else
                        Endereco = IIf(IsNull(TBFI!endereco_entrega), "", TBFI!endereco_entrega)
                    End If
                    If IsNull(TBFI!Tipo_bairro) = False And TBFI!Tipo_bairro <> "" Then
                        Bairro = TBFI!Tipo_bairro & ": " & IIf(IsNull(TBFI!bairro_entrega), "", TBFI!bairro_entrega)
                    Else
                        Bairro = IIf(IsNull(TBFI!bairro_entrega), "", TBFI!bairro_entrega)
                    End If
                    Endereco2 = Endereco & " - " & IIf(IsNull(TBFI!Numero), "", TBFI!Numero) & " - " & Bairro & " - " & IIf(IsNull(TBFI!cidade_entrega), "", TBFI!cidade_entrega) & " - " & IIf(IsNull(TBFI!uf_entrega), "", TBFI!uf_entrega) & " - " & IIf(IsNull(TBFI!cep_entrega), "", TBFI!cep_entrega)
                    .AddItem Endereco2
                    .ItemData(cmbEntrega.NewIndex) = TBFI!identrega
                    .Text = Endereco2
                    TBFI.MoveNext
                Loop
            End If
            TBFI.Close
        End If
        
        identrega = 0
        If TxtID <> "" Then
            Set TBAcessos = CreateObject("adodb.recordset")
            TBAcessos.Open "Select ID_entrega from tbl_Dados_Nota_Fiscal_NFe NFE INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.id = NFE.ID_nota where NF.id = " & TxtID & " and NF.ID_int_cliente = " & txtIDCliente & " and NF.txt_razao_nome = '" & txt_Razao & "' and NFE.ID_entrega IS NOT NULL", Conexao, adOpenKeyset, adLockReadOnly
            If TBAcessos.EOF = False Then
                Set TBFI = CreateObject("adodb.recordset")
                TBFI.Open "Select * from clientes_entrega where identrega = " & TBAcessos!ID_entrega, Conexao, adOpenKeyset, adLockReadOnly
                If TBFI.EOF = False Then
                    identrega = TBAcessos!ID_entrega
                    If IsNull(TBFI!Tipo_endereco) = False And TBFI!Tipo_endereco <> "" Then
                        Endereco = TBFI!Tipo_endereco & ": " & IIf(IsNull(TBFI!endereco_entrega), "", TBFI!endereco_entrega)
                    Else
                        Endereco = IIf(IsNull(TBFI!endereco_entrega), "", TBFI!endereco_entrega)
                    End If
                    If IsNull(TBFI!Tipo_bairro) = False And TBFI!Tipo_bairro <> "" Then
                        Bairro = TBFI!Tipo_bairro & ": " & IIf(IsNull(TBFI!bairro_entrega), "", TBFI!bairro_entrega)
                    Else
                        Bairro = IIf(IsNull(TBFI!bairro_entrega), "", TBFI!bairro_entrega)
                    End If
                    Endereco = Endereco & " - " & IIf(IsNull(TBFI!Numero), "", TBFI!Numero) & " - " & Bairro & " - " & IIf(IsNull(TBFI!cidade_entrega), "", TBFI!cidade_entrega) & " - " & IIf(IsNull(TBFI!uf_entrega), "", TBFI!uf_entrega) & " - " & IIf(IsNull(TBFI!cep_entrega), "", TBFI!cep_entrega)
                    .Text = Endereco
                End If
                TBFI.Close
            End If
            TBAcessos.Close
        End If
    End If
End With

Exit Sub
tratar_erro:
    If Err.Number = 383 Then
        With cmbEntrega
            .AddItem Endereco
            .ItemData(cmbEntrega.NewIndex) = identrega
            .Text = Endereco
        End With
        Exit Sub
    End If
    MsgBox ("Descrição do erro : " + Error()), vbCritical
End Sub
